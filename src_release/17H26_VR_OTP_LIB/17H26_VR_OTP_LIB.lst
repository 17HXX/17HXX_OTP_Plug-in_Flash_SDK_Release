In archive lib17H26_VR_OTP_LIB.a:

div_mod.o:     file format elf32-littletc32
rw-rw-rw- 0/0    880 Jan 30 00:17 2019 div_mod.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000050  00000000  00000000  00000040  2**4
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000090  2**0
                  ALLOC
  3 .TC32.attributes 00000010  00000000  00000000  00000090  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 g     F .text	00000004 __modsi3
00000010 g     F .text	0000003c div
00000004 g     F .text	00000004 __divsi3
00000008 g     F .text	00000004 __umodsi3
0000000c g     F .text	00000004 __udivsi3



Disassembly of section .text:

00000000 <__modsi3>:
__modsi3():
   0:	a203      	tmovs	r2, #3
   2:	87fe      	tj.n	10 <div>
			2: R_TC32_JUMP11	div

00000004 <__divsi3>:
__divsi3():
   4:	a201      	tmovs	r2, #1
   6:	87fe      	tj.n	10 <div>
			6: R_TC32_JUMP11	div

00000008 <__umodsi3>:
__umodsi3():
   8:	a202      	tmovs	r2, #2
   a:	87fe      	tj.n	10 <div>
			a: R_TC32_JUMP11	div

0000000c <__udivsi3>:
__udivsi3():
   c:	a200      	tmovs	r2, #0
   e:	87fe      	tj.n	10 <div>
			e: R_TC32_JUMP11	div

00000010 <div>:
div():
  10:	6bcb      	tmrcs	r3
  12:	6418      	tpush	{r3, r4}
  14:	a480      	tmovs	r4, #128	; 0x80
  16:	0323      	tors	r3, r4
  18:	6bc3      	tmcsr	r3
  1a:	0b09      	tloadr	r3, [pc, #36]	; (50 <div+0x40>)
  1c:	5018      	tstorer	r0, [r3, #0]
  1e:	b304      	tadds	r3, #4
  20:	5019      	tstorer	r1, [r3, #0]
  22:	bb08      	tsubs	r3, #8
  24:	401a      	tstorerb	r2, [r3, #0]
  26:	4818      	tloadrb	r0, [r3, #0]
  28:	a800      	tcmp	r0, #0
  2a:	c1fc      	tjne.n	36 <div+0x26>
  2c:	aa01      	tcmp	r2, #1
  2e:	c902      	tjls.n	46 <div+0x36>
  30:	b308      	tadds	r3, #8
  32:	5818      	tloadr	r0, [r3, #0]
  34:	8001      	tj.n	4a <div+0x3a>
  36:	b304      	tadds	r3, #4
  38:	5818      	tloadr	r0, [r3, #0]
  3a:	6c18      	tpop	{r3, r4}
  3c:	6bc3      	tmcsr	r3
  3e:	0770      	tjex	lr
  40:	00800664 	taddeq	r0, r0, r4, ror #12
  44:	00800660 	taddeq	r0, r0, r0, ror #12
  48:	00800668 	taddeq	r0, r0, r8, ror #12
  4c:	46c0      	tnop			; (mov r8, r8)
  4e:	46c0      	tnop			; (mov r8, r8)

Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

internal_test.o:     file format elf32-littletc32
rw-rw-rw- 0/0    940 Jan 30 00:17 2019 internal_test.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.init_main 00000008  00000000  00000000  00000034  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .comment      0000001b  00000000  00000000  0000003c  2**0
                  CONTENTS, READONLY
  5 .TC32.attributes 00000010  00000000  00000000  00000057  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 internal_test.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.init_main	00000000 .text.init_main
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 g     F .text.init_main	00000008 init_main
00000000         *UND*	00000000 main
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN



Disassembly of section .text.init_main:

00000000 <init_main>:
init_main():
   0:	6500      	tpush	{lr}
   2:	97ff 9ffe 	tjl	0 <main>
			2: R_TC32_CALL	main
   6:	6d00      	tpop	{pc}

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

pm_17H26.o:     file format elf32-littletc32
rw-rw-rw- 0/0   7104 Jan 30 00:17 2019 pm_17H26.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.battery_low_by_set 00000060  00000000  00000000  00000034  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .ram_code     00000020  00000000  00000000  00000094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.read_chip_ID_OTP 0000000c  00000000  00000000  000000b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.read_chip_ID_flash 00000050  00000000  00000000  000000c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.set_mac_OTP 00000018  00000000  00000000  00000110  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.set_mac_flash 00000014  00000000  00000000  00000128  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.set_freq_offset_OTP 0000003c  00000000  00000000  0000013c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.set_freq_offset_flash 0000003c  00000000  00000000  00000178  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.cpu_wakeup_init 00000010  00000000  00000000  000001b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text.cpu_set_gpio_wakeup 000000d8  00000000  00000000  000001c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text.cpu_adjust_system_tick 00000034  00000000  00000000  0000029c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text.blt_set_32k_cal_mode 0000000c  00000000  00000000  000002d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text.blt_get_32k_cal_mode 0000000c  00000000  00000000  000002dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text.cpu_sleep_wakeup 00000100  00000000  00000000  000002e8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text.cpu_suspend_wakeup_sim 00000024  00000000  00000000  000003e8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .text.blt_sleep_wakeup 00000228  00000000  00000000  0000040c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .bss.remington_32k_calibration_cnt 00000002  00000000  00000000  00000634  2**1
                  ALLOC
 20 .bss.remington_suspend_wakeup_tick 00000004  00000000  00000000  00000634  2**2
                  ALLOC
 21 .rodata.tbl_cpu_wakeup_init 00000068  00000000  00000000  00000634  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 22 .bss.tick.2662 00000004  00000000  00000000  0000069c  2**2
                  ALLOC
 23 .bss.blt_32k_cal_mode 00000001  00000000  00000000  0000069c  2**0
                  ALLOC
 24 .comment      0000001b  00000000  00000000  0000069c  2**0
                  CONTENTS, READONLY
 25 .TC32.attributes 00000010  00000000  00000000  000006b7  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 pm_17H26.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.battery_low_by_set	00000000 .text.battery_low_by_set
00000000 l    d  .ram_code	00000000 .ram_code
00000000 l    d  .text.read_chip_ID_OTP	00000000 .text.read_chip_ID_OTP
00000000 l    d  .text.read_chip_ID_flash	00000000 .text.read_chip_ID_flash
00000000 l    d  .text.set_mac_OTP	00000000 .text.set_mac_OTP
00000000 l    d  .text.set_mac_flash	00000000 .text.set_mac_flash
00000000 l    d  .text.set_freq_offset_OTP	00000000 .text.set_freq_offset_OTP
00000000 l    d  .text.set_freq_offset_flash	00000000 .text.set_freq_offset_flash
00000000 l    d  .text.cpu_wakeup_init	00000000 .text.cpu_wakeup_init
00000000 l    d  .text.cpu_set_gpio_wakeup	00000000 .text.cpu_set_gpio_wakeup
00000000 l    d  .text.cpu_adjust_system_tick	00000000 .text.cpu_adjust_system_tick
00000000 l    d  .text.blt_set_32k_cal_mode	00000000 .text.blt_set_32k_cal_mode
00000000 l    d  .text.blt_get_32k_cal_mode	00000000 .text.blt_get_32k_cal_mode
00000000 l    d  .text.cpu_sleep_wakeup	00000000 .text.cpu_sleep_wakeup
00000000 l    d  .text.cpu_suspend_wakeup_sim	00000000 .text.cpu_suspend_wakeup_sim
00000000 l    d  .text.blt_sleep_wakeup	00000000 .text.blt_sleep_wakeup
00000000 l    d  .bss.remington_32k_calibration_cnt	00000000 .bss.remington_32k_calibration_cnt
00000000 l    d  .bss.remington_suspend_wakeup_tick	00000000 .bss.remington_suspend_wakeup_tick
00000000 l    d  .rodata.tbl_cpu_wakeup_init	00000000 .rodata.tbl_cpu_wakeup_init
00000000 l    d  .bss.tick.2662	00000000 .bss.tick.2662
00000000 l     O .bss.tick.2662	00000004 tick.2662
00000000 l    d  .bss.blt_32k_cal_mode	00000000 .bss.blt_32k_cal_mode
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 g     F .text.battery_low_by_set	00000060 battery_low_by_set
00000000         *UND*	00000000 analog_read
00000000         *UND*	00000000 analog_write
00000000         *UND*	00000000 sleep_us
00000000 g     F .ram_code	00000020 sleep_start
00000000 g     F .text.read_chip_ID_OTP	0000000c read_chip_ID_OTP
00000000 g     F .text.read_chip_ID_flash	00000050 read_chip_ID_flash
00000000         *UND*	00000000 otp_read
00000000 g     F .text.set_mac_OTP	00000018 set_mac_OTP
00000000         *UND*	00000000 memcpy
00000000 g     F .text.set_mac_flash	00000014 set_mac_flash
00000000 g     F .text.set_freq_offset_OTP	0000003c set_freq_offset_OTP
00000000 g     F .text.set_freq_offset_flash	0000003c set_freq_offset_flash
00000000 g     F .text.cpu_wakeup_init	00000010 cpu_wakeup_init
00000000         *UND*	00000000 LoadTblCmdSet
00000000 g     F .text.cpu_set_gpio_wakeup	000000d8 cpu_set_gpio_wakeup
00000000 g     F .text.cpu_adjust_system_tick	00000034 cpu_adjust_system_tick
00000004       O *COM*	00000004 tick_1ms_adjust
00000004       O *COM*	00000004 tick_32k_bk
00000000 g     F .text.blt_set_32k_cal_mode	0000000c blt_set_32k_cal_mode
00000000 g     F .text.blt_get_32k_cal_mode	0000000c blt_get_32k_cal_mode
00000000 g     F .text.cpu_sleep_wakeup	00000100 cpu_sleep_wakeup
00000004       O *COM*	00000004 cpu_wakup_last_tick
00000004       O *COM*	00000004 cpu_working_tick
00000000 g     F .text.cpu_suspend_wakeup_sim	00000024 cpu_suspend_wakeup_sim
00000000         *UND*	00000000 __divsi3
00000000         *UND*	00000000 __udivsi3
00000000 g     F .text.blt_sleep_wakeup	00000228 blt_sleep_wakeup
00000000         *UND*	00000000 blt_get_32k_tick
00000000 g     O .rodata.tbl_cpu_wakeup_init	00000068 tbl_cpu_wakeup_init
00000000 g     O .bss.blt_32k_cal_mode	00000001 blt_32k_cal_mode
00000000 g     O .bss.remington_suspend_wakeup_tick	00000004 remington_suspend_wakeup_tick
00000000 g     O .bss.remington_32k_calibration_cnt	00000002 remington_32k_calibration_cnt
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN



Disassembly of section .text.battery_low_by_set:

00000000 <battery_low_by_set>:
battery_low_by_set():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	f606      	tshftls	r6, r0, #24
   4:	fe36      	tshftrs	r6, r6, #24
   6:	f60c      	tshftls	r4, r1, #24
   8:	fe24      	tshftrs	r4, r4, #24
   a:	f615      	tshftls	r5, r2, #24
   c:	fe2d      	tshftrs	r5, r5, #24
   e:	a002      	tmovs	r0, #2
  10:	97ff 9ffe 	tjl	0 <analog_read>
			10: R_TC32_CALL	analog_read
  14:	a370      	tmovs	r3, #112	; 0x70
  16:	ec01      	tadds	r1, r0, #0
  18:	0399      	tbclrs	r1, r3
  1a:	030c      	tors	r4, r1
  1c:	f621      	tshftls	r1, r4, #24
  1e:	fe09      	tshftrs	r1, r1, #24
  20:	a002      	tmovs	r0, #2
  22:	97ff 9ffe 	tjl	0 <analog_write>
			22: R_TC32_CALL	analog_write
  26:	a003      	tmovs	r0, #3
  28:	97ff 9ffe 	tjl	0 <analog_read>
			28: R_TC32_CALL	analog_read
  2c:	0335      	tors	r5, r6
  2e:	a37f      	tmovs	r3, #127	; 0x7f
  30:	0398      	tbclrs	r0, r3
  32:	0305      	tors	r5, r0
  34:	f629      	tshftls	r1, r5, #24
  36:	fe09      	tshftrs	r1, r1, #24
  38:	a003      	tmovs	r0, #3
  3a:	97ff 9ffe 	tjl	0 <analog_write>
			3a: R_TC32_CALL	analog_write
  3e:	a006      	tmovs	r0, #6
  40:	97ff 9ffe 	tjl	0 <analog_read>
			40: R_TC32_CALL	analog_read
  44:	a1fe      	tmovs	r1, #254	; 0xfe
  46:	0001      	tands	r1, r0
  48:	a006      	tmovs	r0, #6
  4a:	97ff 9ffe 	tjl	0 <analog_write>
			4a: R_TC32_CALL	analog_write
  4e:	a032      	tmovs	r0, #50	; 0x32
  50:	97ff 9ffe 	tjl	0 <sleep_us>
			50: R_TC32_CALL	sleep_us
  54:	a023      	tmovs	r0, #35	; 0x23
  56:	97ff 9ffe 	tjl	0 <analog_read>
			56: R_TC32_CALL	analog_read
  5a:	a320      	tmovs	r3, #32
  5c:	0018      	tands	r0, r3
  5e:	6d70      	tpop	{r4, r5, r6, pc}

Disassembly of section .ram_code:

00000000 <sleep_start>:
sleep_start():
   0:	6081      	tsub	sp, #4
   2:	a281      	tmovs	r2, #129	; 0x81
   4:	0b05      	tloadr	r3, [pc, #20]	; (1c <analog_read+0x1c>)
   6:	401a      	tstorerb	r2, [r3, #0]
   8:	a300      	tmovs	r3, #0
   a:	8001      	tj.n	10 <analog_read+0x10>
   c:	3b00      	tloadr	r3, [sp, #0]
   e:	b301      	tadds	r3, #1
  10:	3300      	tstorer	r3, [sp, #0]
  12:	3b00      	tloadr	r3, [sp, #0]
  14:	ab2f      	tcmp	r3, #47	; 0x2f
  16:	c9f9      	tjls.n	c <analog_read+0xc>
  18:	6001      	tadd	sp, #4
  1a:	0770      	tjex	lr
  1c:	0100006f 	tnandeq	r0, pc, rrx

Disassembly of section .text.read_chip_ID_OTP:

00000000 <read_chip_ID_OTP>:
read_chip_ID_OTP():
   0:	0b01      	tloadr	r3, [pc, #4]	; (8 <analog_read+0x8>)
   2:	5818      	tloadr	r0, [r3, #0]
   4:	0770      	tjex	lr
   6:	46c0      	tnop			; (mov r8, r8)
   8:	00003fe9 	tandeq	r3, r0, r9, ror #31

Disassembly of section .text.read_chip_ID_flash:

00000000 <read_chip_ID_flash>:
read_chip_ID_flash():
   0:	6530      	tpush	{r4, r5, lr}
   2:	080d      	tloadr	r0, [pc, #52]	; (38 <read_chip_ID_flash+0x38>)
   4:	97ff 9ffe 	tjl	0 <otp_read>
			4: R_TC32_CALL	otp_read
   8:	ec05      	tadds	r5, r0, #0
   a:	080c      	tloadr	r0, [pc, #48]	; (3c <read_chip_ID_flash+0x3c>)
   c:	97ff 9ffe 	tjl	0 <otp_read>
			c: R_TC32_CALL	otp_read
  10:	ec04      	tadds	r4, r0, #0
  12:	080b      	tloadr	r0, [pc, #44]	; (40 <read_chip_ID_flash+0x40>)
  14:	97ff 9ffe 	tjl	0 <otp_read>
			14: R_TC32_CALL	otp_read
  18:	f224      	tshftls	r4, r4, #8
  1a:	f400      	tshftls	r0, r0, #16
  1c:	0304      	tors	r4, r0
  1e:	032c      	tors	r4, r5
  20:	0808      	tloadr	r0, [pc, #32]	; (44 <read_chip_ID_flash+0x44>)
  22:	97ff 9ffe 	tjl	0 <otp_read>
			22: R_TC32_CALL	otp_read
  26:	f600      	tshftls	r0, r0, #24
  28:	0320      	tors	r0, r4
  2a:	0b07      	tloadr	r3, [pc, #28]	; (48 <otp_read+0x48>)
  2c:	0298      	tcmp	r0, r3
  2e:	c101      	tjne.n	34 <otp_read+0x34>
  30:	0b06      	tloadr	r3, [pc, #24]	; (4c <otp_read+0x4c>)
  32:	5818      	tloadr	r0, [r3, #0]
  34:	6d30      	tpop	{r4, r5, pc}
  36:	46c0      	tnop			; (mov r8, r8)
  38:	00003fe9 	tandeq	r3, r0, r9, ror #31
  3c:	00003fea 	tandeq	r3, r0, sl, ror #31
  40:	00003feb 	tandeq	r3, r0, fp, ror #31
  44:	00003fec 	tandeq	r3, r0, ip, ror #31
  48:	0000ffff 	undefined instruction 0x0000ffff
  4c:	00076011 	tandeq	r6, r7, r1, lsl r0

Disassembly of section .text.set_mac_OTP:

00000000 <set_mac_OTP>:
set_mac_OTP():
   0:	6500      	tpush	{lr}
   2:	0904      	tloadr	r1, [pc, #16]	; (14 <set_mac_OTP+0x14>)
   4:	580b      	tloadr	r3, [r1, #0]
   6:	b301      	tadds	r3, #1
   8:	c002      	tjeq.n	10 <set_mac_OTP+0x10>
   a:	a206      	tmovs	r2, #6
   c:	97ff 9ffe 	tjl	0 <memcpy>
			c: R_TC32_CALL	memcpy
  10:	6d00      	tpop	{pc}
  12:	46c0      	tnop			; (mov r8, r8)
  14:	00003fe0 	tandeq	r3, r0, r0, ror #31

Disassembly of section .text.set_mac_flash:

00000000 <set_mac_flash>:
set_mac_flash():
   0:	6500      	tpush	{lr}
   2:	a1ec      	tmovs	r1, #236	; 0xec
   4:	f2c9      	tshftls	r1, r1, #11
   6:	580b      	tloadr	r3, [r1, #0]
   8:	b301      	tadds	r3, #1
   a:	c002      	tjeq.n	12 <set_mac_flash+0x12>
   c:	a206      	tmovs	r2, #6
   e:	97ff 9ffe 	tjl	0 <memcpy>
			e: R_TC32_CALL	memcpy
  12:	6d00      	tpop	{pc}

Disassembly of section .text.set_freq_offset_OTP:

00000000 <set_freq_offset_OTP>:
set_freq_offset_OTP():
   0:	6530      	tpush	{r4, r5, lr}
   2:	f605      	tshftls	r5, r0, #24
   4:	fe2d      	tshftrs	r5, r5, #24
   6:	0b0c      	tloadr	r3, [pc, #48]	; (38 <set_freq_offset_OTP+0x38>)
   8:	481c      	tloadrb	r4, [r3, #0]
   a:	a080      	tmovs	r0, #128	; 0x80
   c:	a161      	tmovs	r1, #97	; 0x61
   e:	97ff 9ffe 	tjl	0 <analog_write>
			e: R_TC32_CALL	analog_write
  12:	acff      	tcmp	r4, #255	; 0xff
  14:	c009      	tjeq.n	2a <set_freq_offset_OTP+0x2a>
  16:	ac00      	tcmp	r4, #0
  18:	c001      	tjeq.n	1e <set_freq_offset_OTP+0x1e>
  1a:	acfe      	tcmp	r4, #254	; 0xfe
  1c:	c106      	tjne.n	2c <set_freq_offset_OTP+0x2c>
  1e:	a080      	tmovs	r0, #128	; 0x80
  20:	a121      	tmovs	r1, #33	; 0x21
  22:	97ff 9ffe 	tjl	0 <analog_write>
			22: R_TC32_CALL	analog_write
  26:	a4c0      	tmovs	r4, #192	; 0xc0
  28:	8000      	tj.n	2c <set_freq_offset_OTP+0x2c>
  2a:	ec2c      	tadds	r4, r5, #0
  2c:	a081      	tmovs	r0, #129	; 0x81
  2e:	ec21      	tadds	r1, r4, #0
  30:	97ff 9ffe 	tjl	0 <analog_write>
			30: R_TC32_CALL	analog_write
  34:	6d30      	tpop	{r4, r5, pc}
  36:	46c0      	tnop			; (mov r8, r8)
  38:	00003fe8 	tandeq	r3, r0, r8, ror #31

Disassembly of section .text.set_freq_offset_flash:

00000000 <set_freq_offset_flash>:
set_freq_offset_flash():
   0:	6530      	tpush	{r4, r5, lr}
   2:	f605      	tshftls	r5, r0, #24
   4:	fe2d      	tshftrs	r5, r5, #24
   6:	0b0c      	tloadr	r3, [pc, #48]	; (38 <set_freq_offset_flash+0x38>)
   8:	481c      	tloadrb	r4, [r3, #0]
   a:	a080      	tmovs	r0, #128	; 0x80
   c:	a161      	tmovs	r1, #97	; 0x61
   e:	97ff 9ffe 	tjl	0 <analog_write>
			e: R_TC32_CALL	analog_write
  12:	acff      	tcmp	r4, #255	; 0xff
  14:	c009      	tjeq.n	2a <set_freq_offset_flash+0x2a>
  16:	ac00      	tcmp	r4, #0
  18:	c001      	tjeq.n	1e <set_freq_offset_flash+0x1e>
  1a:	acfe      	tcmp	r4, #254	; 0xfe
  1c:	c106      	tjne.n	2c <set_freq_offset_flash+0x2c>
  1e:	a080      	tmovs	r0, #128	; 0x80
  20:	a121      	tmovs	r1, #33	; 0x21
  22:	97ff 9ffe 	tjl	0 <analog_write>
			22: R_TC32_CALL	analog_write
  26:	a4c0      	tmovs	r4, #192	; 0xc0
  28:	8000      	tj.n	2c <set_freq_offset_flash+0x2c>
  2a:	ec2c      	tadds	r4, r5, #0
  2c:	a081      	tmovs	r0, #129	; 0x81
  2e:	ec21      	tadds	r1, r4, #0
  30:	97ff 9ffe 	tjl	0 <analog_write>
			30: R_TC32_CALL	analog_write
  34:	6d30      	tpop	{r4, r5, pc}
  36:	46c0      	tnop			; (mov r8, r8)
  38:	00076010 	tandeq	r6, r7, r0, lsl r0

Disassembly of section .text.cpu_wakeup_init:

00000000 <cpu_wakeup_init>:
cpu_wakeup_init():
   0:	6500      	tpush	{lr}
   2:	0802      	tloadr	r0, [pc, #8]	; (c <cpu_wakeup_init+0xc>)
   4:	a11a      	tmovs	r1, #26
   6:	97ff 9ffe 	tjl	0 <LoadTblCmdSet>
			6: R_TC32_CALL	LoadTblCmdSet
   a:	6d00      	tpop	{pc}
   c:	00000000 	tandeq	r0, r0, r0
			c: R_TC32_ABS32	.rodata.tbl_cpu_wakeup_init

Disassembly of section .text.cpu_set_gpio_wakeup:

00000000 <cpu_set_gpio_wakeup>:
cpu_set_gpio_wakeup():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	ec0e      	tadds	r6, r1, #0
   4:	ec17      	tadds	r7, r2, #0
   6:	0930      	tloadr	r1, [pc, #192]	; (c8 <cpu_set_gpio_wakeup+0xc8>)
   8:	e843      	tadds	r3, r0, r1
   a:	abff      	tcmp	r3, #255	; 0xff
   c:	c82e      	tjhi.n	6c <cpu_set_gpio_wakeup+0x6c>
   e:	f602      	tshftls	r2, r0, #24
  10:	fe13      	tshftrs	r3, r2, #24
  12:	a580      	tmovs	r5, #128	; 0x80
  14:	092d      	tloadr	r1, [pc, #180]	; (cc <cpu_set_gpio_wakeup+0xcc>)
  16:	0288      	tcmp	r0, r1
  18:	c000      	tjeq.n	1c <cpu_set_gpio_wakeup+0x1c>
  1a:	fe55      	tshftrs	r5, r2, #25
  1c:	a410      	tmovs	r4, #16
  1e:	a206      	tmovs	r2, #6
  20:	021a      	tnand	r2, r3
  22:	c108      	tjne.n	36 <cpu_set_gpio_wakeup+0x36>
  24:	a420      	tmovs	r4, #32
  26:	a218      	tmovs	r2, #24
  28:	021a      	tnand	r2, r3
  2a:	c104      	tjne.n	36 <cpu_set_gpio_wakeup+0x36>
  2c:	a480      	tmovs	r4, #128	; 0x80
  2e:	a260      	tmovs	r2, #96	; 0x60
  30:	021a      	tnand	r2, r3
  32:	c000      	tjeq.n	36 <cpu_set_gpio_wakeup+0x36>
  34:	a440      	tmovs	r4, #64	; 0x40
  36:	a014      	tmovs	r0, #20
  38:	97ff 9ffe 	tjl	0 <analog_read>
			38: R_TC32_CALL	analog_read
  3c:	ae00      	tcmp	r6, #0
  3e:	c002      	tjeq.n	46 <cpu_set_gpio_wakeup+0x46>
  40:	03a0      	tbclrs	r0, r4
  42:	f601      	tshftls	r1, r0, #24
  44:	8001      	tj.n	4a <cpu_set_gpio_wakeup+0x4a>
  46:	0304      	tors	r4, r0
  48:	f621      	tshftls	r1, r4, #24
  4a:	fe09      	tshftrs	r1, r1, #24
  4c:	a014      	tmovs	r0, #20
  4e:	97ff 9ffe 	tjl	0 <analog_write>
			4e: R_TC32_CALL	analog_write
  52:	a016      	tmovs	r0, #22
  54:	97ff 9ffe 	tjl	0 <analog_read>
			54: R_TC32_CALL	analog_read
  58:	af00      	tcmp	r7, #0
  5a:	c002      	tjeq.n	62 <cpu_set_gpio_wakeup+0x62>
  5c:	0305      	tors	r5, r0
  5e:	f629      	tshftls	r1, r5, #24
  60:	8001      	tj.n	66 <cpu_set_gpio_wakeup+0x66>
  62:	03a8      	tbclrs	r0, r5
  64:	f601      	tshftls	r1, r0, #24
  66:	fe09      	tshftrs	r1, r1, #24
  68:	a016      	tmovs	r0, #22
  6a:	802a      	tj.n	c2 <cpu_set_gpio_wakeup+0xc2>
  6c:	0a18      	tloadr	r2, [pc, #96]	; (d0 <cpu_set_gpio_wakeup+0xd0>)
  6e:	e883      	tadds	r3, r0, r2
  70:	025a      	tnegs	r2, r3
  72:	0153      	taddcs	r3, r2
  74:	0917      	tloadr	r1, [pc, #92]	; (d4 <cpu_set_gpio_wakeup+0xd4>)
  76:	e842      	tadds	r2, r0, r1
  78:	aa00      	tcmp	r2, #0
  7a:	c006      	tjeq.n	8a <cpu_set_gpio_wakeup+0x8a>
  7c:	ab00      	tcmp	r3, #0
  7e:	c10a      	tjne.n	96 <cpu_set_gpio_wakeup+0x96>
  80:	a3e0      	tmovs	r3, #224	; 0xe0
  82:	f09b      	tshftls	r3, r3, #2
  84:	0298      	tcmp	r0, r3
  86:	c11e      	tjne.n	c6 <cpu_set_gpio_wakeup+0xc6>
  88:	8002      	tj.n	90 <cpu_set_gpio_wakeup+0x90>
  8a:	ab00      	tcmp	r3, #0
  8c:	c006      	tjeq.n	9c <cpu_set_gpio_wakeup+0x9c>
  8e:	8002      	tj.n	96 <cpu_set_gpio_wakeup+0x96>
  90:	a440      	tmovs	r4, #64	; 0x40
  92:	a504      	tmovs	r5, #4
  94:	8004      	tj.n	a0 <cpu_set_gpio_wakeup+0xa0>
  96:	a410      	tmovs	r4, #16
  98:	a501      	tmovs	r5, #1
  9a:	8001      	tj.n	a0 <cpu_set_gpio_wakeup+0xa0>
  9c:	a420      	tmovs	r4, #32
  9e:	a502      	tmovs	r5, #2
  a0:	a02b      	tmovs	r0, #43	; 0x2b
  a2:	97ff 9ffe 	tjl	0 <analog_read>
			a2: R_TC32_CALL	analog_read
  a6:	ae00      	tcmp	r6, #0
  a8:	c002      	tjeq.n	b0 <cpu_set_gpio_wakeup+0xb0>
  aa:	03a0      	tbclrs	r0, r4
  ac:	f601      	tshftls	r1, r0, #24
  ae:	8001      	tj.n	b4 <cpu_set_gpio_wakeup+0xb4>
  b0:	0304      	tors	r4, r0
  b2:	f621      	tshftls	r1, r4, #24
  b4:	fe09      	tshftrs	r1, r1, #24
  b6:	af00      	tcmp	r7, #0
  b8:	c001      	tjeq.n	be <cpu_set_gpio_wakeup+0xbe>
  ba:	0329      	tors	r1, r5
  bc:	8000      	tj.n	c0 <cpu_set_gpio_wakeup+0xc0>
  be:	03a9      	tbclrs	r1, r5
  c0:	a02b      	tmovs	r0, #43	; 0x2b
  c2:	97ff 9ffe 	tjl	0 <analog_write>
			c2: R_TC32_CALL	analog_write
  c6:	6df0      	tpop	{r4, r5, r6, r7, pc}
  c8:	fffffdfe 	undefined instruction 0xfffffdfe
  cc:	00000301 	tandeq	r0, r0, r1, lsl #6
  d0:	fffffcfc 	undefined instruction 0xfffffcfc
  d4:	fffffcf8 	undefined instruction 0xfffffcf8

Disassembly of section .text.cpu_adjust_system_tick:

00000000 <cpu_adjust_system_tick>:
cpu_adjust_system_tick():
   0:	6510      	tpush	{r4, lr}
   2:	f142      	tshftls	r2, r0, #5
   4:	ea12      	tsubs	r2, r2, r0
   6:	f092      	tshftls	r2, r2, #2
   8:	e812      	tadds	r2, r2, r0
   a:	f192      	tshftls	r2, r2, #6
   c:	0b07      	tloadr	r3, [pc, #28]	; (2c <cpu_adjust_system_tick+0x2c>)
   e:	501a      	tstorer	r2, [r3, #0]
  10:	0b07      	tloadr	r3, [pc, #28]	; (30 <cpu_adjust_system_tick+0x30>)
  12:	581c      	tloadr	r4, [r3, #0]
  14:	e904      	tadds	r4, r0, r4
  16:	f621      	tshftls	r1, r4, #24
  18:	fe09      	tshftrs	r1, r1, #24
  1a:	a010      	tmovs	r0, #16
  1c:	97ff 9ffe 	tjl	0 <analog_write>
			1c: R_TC32_CALL	analog_write
  20:	f424      	tshftls	r4, r4, #16
  22:	fe21      	tshftrs	r1, r4, #24
  24:	a011      	tmovs	r0, #17
  26:	97ff 9ffe 	tjl	0 <analog_write>
			26: R_TC32_CALL	analog_write
  2a:	6d10      	tpop	{r4, pc}
	...
			2c: R_TC32_ABS32	tick_1ms_adjust
			30: R_TC32_ABS32	tick_32k_bk

Disassembly of section .text.blt_set_32k_cal_mode:

00000000 <blt_set_32k_cal_mode>:
blt_set_32k_cal_mode():
   0:	0b01      	tloadr	r3, [pc, #4]	; (8 <blt_set_32k_cal_mode+0x8>)
   2:	4018      	tstorerb	r0, [r3, #0]
   4:	0770      	tjex	lr
   6:	46c0      	tnop			; (mov r8, r8)
   8:	00000000 	tandeq	r0, r0, r0
			8: R_TC32_ABS32	.bss.blt_32k_cal_mode

Disassembly of section .text.blt_get_32k_cal_mode:

00000000 <blt_get_32k_cal_mode>:
blt_get_32k_cal_mode():
   0:	0b01      	tloadr	r3, [pc, #4]	; (8 <blt_get_32k_cal_mode+0x8>)
   2:	4818      	tloadrb	r0, [r3, #0]
   4:	0770      	tjex	lr
   6:	46c0      	tnop			; (mov r8, r8)
   8:	00000000 	tandeq	r0, r0, r0
			8: R_TC32_ABS32	.bss.blt_32k_cal_mode

Disassembly of section .text.cpu_sleep_wakeup:

00000000 <cpu_sleep_wakeup>:
cpu_sleep_wakeup():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6082      	tsub	sp, #8
   4:	ec05      	tadds	r5, r0, #0
   6:	ec0c      	tadds	r4, r1, #0
   8:	ec16      	tadds	r6, r2, #0
   a:	a013      	tmovs	r0, #19
   c:	a170      	tmovs	r1, #112	; 0x70
   e:	97ff 9ffe 	tjl	0 <analog_write>
			e: R_TC32_CALL	analog_write
  12:	a080      	tmovs	r0, #128	; 0x80
  14:	97ff 9ffe 	tjl	0 <analog_read>
			14: R_TC32_CALL	analog_read
  18:	3000      	tstorer	r0, [sp, #0]
  1a:	a081      	tmovs	r0, #129	; 0x81
  1c:	97ff 9ffe 	tjl	0 <analog_read>
			1c: R_TC32_CALL	analog_read
  20:	3001      	tstorer	r0, [sp, #4]
  22:	a201      	tmovs	r2, #1
  24:	0022      	tands	r2, r4
  26:	f0d2      	tshftls	r2, r2, #3
  28:	0b30      	tloadr	r3, [pc, #192]	; (ec <cpu_sleep_wakeup+0xec>)
  2a:	401a      	tstorerb	r2, [r3, #0]
  2c:	a081      	tmovs	r0, #129	; 0x81
  2e:	a1c0      	tmovs	r1, #192	; 0xc0
  30:	97ff 9ffe 	tjl	0 <analog_write>
			30: R_TC32_CALL	analog_write
  34:	a080      	tmovs	r0, #128	; 0x80
  36:	a1a1      	tmovs	r1, #161	; 0xa1
  38:	97ff 9ffe 	tjl	0 <analog_write>
			38: R_TC32_CALL	analog_write
  3c:	a35e      	tmovs	r3, #94	; 0x5e
  3e:	ad00      	tcmp	r5, #0
  40:	c000      	tjeq.n	44 <cpu_sleep_wakeup+0x44>
  42:	a3fe      	tmovs	r3, #254	; 0xfe
  44:	a502      	tmovs	r5, #2
  46:	0025      	tands	r5, r4
  48:	0269      	tnegs	r1, r5
  4a:	0169      	taddcs	r1, r5
  4c:	0319      	tors	r1, r3
  4e:	a018      	tmovs	r0, #24
  50:	97ff 9ffe 	tjl	0 <analog_write>
			50: R_TC32_CALL	analog_write
  54:	0b26      	tloadr	r3, [pc, #152]	; (f0 <cpu_sleep_wakeup+0xf0>)
  56:	481f      	tloadrb	r7, [r3, #0]
  58:	ad00      	tcmp	r5, #0
  5a:	c01f      	tjeq.n	9c <cpu_sleep_wakeup+0x9c>
  5c:	f175      	tshftls	r5, r6, #5
  5e:	a012      	tmovs	r0, #18
  60:	a100      	tmovs	r1, #0
  62:	97ff 9ffe 	tjl	0 <analog_write>
			62: R_TC32_CALL	analog_write
  66:	a017      	tmovs	r0, #23
  68:	a108      	tmovs	r1, #8
  6a:	97ff 9ffe 	tjl	0 <analog_write>
			6a: R_TC32_CALL	analog_write
  6e:	a017      	tmovs	r0, #23
  70:	a100      	tmovs	r1, #0
  72:	97ff 9ffe 	tjl	0 <analog_write>
			72: R_TC32_CALL	analog_write
  76:	f776      	tshftls	r6, r6, #29
  78:	fe31      	tshftrs	r1, r6, #24
  7a:	a00f      	tmovs	r0, #15
  7c:	97ff 9ffe 	tjl	0 <analog_write>
			7c: R_TC32_CALL	analog_write
  80:	f429      	tshftls	r1, r5, #16
  82:	fe09      	tshftrs	r1, r1, #24
  84:	a010      	tmovs	r0, #16
  86:	97ff 9ffe 	tjl	0 <analog_write>
			86: R_TC32_CALL	analog_write
  8a:	f22d      	tshftls	r5, r5, #8
  8c:	fe29      	tshftrs	r1, r5, #24
  8e:	a011      	tmovs	r0, #17
  90:	97ff 9ffe 	tjl	0 <analog_write>
			90: R_TC32_CALL	analog_write
  94:	a012      	tmovs	r0, #18
  96:	a102      	tmovs	r1, #2
  98:	97ff 9ffe 	tjl	0 <analog_write>
			98: R_TC32_CALL	analog_write
  9c:	a023      	tmovs	r0, #35	; 0x23
  9e:	a10f      	tmovs	r1, #15
  a0:	97ff 9ffe 	tjl	0 <analog_write>
			a0: R_TC32_CALL	analog_write
  a4:	f624      	tshftls	r4, r4, #24
  a6:	fe21      	tshftrs	r1, r4, #24
  a8:	a017      	tmovs	r0, #23
  aa:	97ff 9ffe 	tjl	0 <analog_write>
			aa: R_TC32_CALL	analog_write
  ae:	0e10      	tloadr	r6, [pc, #64]	; (f0 <cpu_sleep_wakeup+0xf0>)
  b0:	a300      	tmovs	r3, #0
  b2:	4033      	tstorerb	r3, [r6, #0]
  b4:	0c0f      	tloadr	r4, [pc, #60]	; (f4 <cpu_sleep_wakeup+0xf4>)
  b6:	5822      	tloadr	r2, [r4, #0]
  b8:	0d0f      	tloadr	r5, [pc, #60]	; (f8 <cpu_sleep_wakeup+0xf8>)
  ba:	582b      	tloadr	r3, [r5, #0]
  bc:	ead2      	tsubs	r2, r2, r3
  be:	0b0f      	tloadr	r3, [pc, #60]	; (fc <cpu_sleep_wakeup+0xfc>)
  c0:	501a      	tstorer	r2, [r3, #0]
  c2:	97ff 9ffe 	tjl	0 <cpu_sleep_wakeup>
			c2: R_TC32_CALL	sleep_start
  c6:	5823      	tloadr	r3, [r4, #0]
  c8:	502b      	tstorer	r3, [r5, #0]
  ca:	4037      	tstorerb	r7, [r6, #0]
  cc:	a023      	tmovs	r0, #35	; 0x23
  ce:	97ff 9ffe 	tjl	0 <analog_read>
			ce: R_TC32_CALL	analog_read
  d2:	ec04      	tadds	r4, r0, #0
  d4:	a080      	tmovs	r0, #128	; 0x80
  d6:	3900      	tloadr	r1, [sp, #0]
  d8:	97ff 9ffe 	tjl	0 <analog_write>
			d8: R_TC32_CALL	analog_write
  dc:	a081      	tmovs	r0, #129	; 0x81
  de:	3901      	tloadr	r1, [sp, #4]
  e0:	97ff 9ffe 	tjl	0 <analog_write>
			e0: R_TC32_CALL	analog_write
  e4:	ec20      	tadds	r0, r4, #0
  e6:	6002      	tadd	sp, #8
  e8:	6df0      	tpop	{r4, r5, r6, r7, pc}
  ea:	46c0      	tnop			; (mov r8, r8)
  ec:	0080006e 	taddeq	r0, r0, lr, rrx
  f0:	00800066 	taddeq	r0, r0, r6, rrx
  f4:	00800740 	taddeq	r0, r0, r0, asr #14
	...
			f8: R_TC32_ABS32	cpu_wakup_last_tick
			fc: R_TC32_ABS32	cpu_working_tick

Disassembly of section .text.cpu_suspend_wakeup_sim:

00000000 <cpu_suspend_wakeup_sim>:
cpu_suspend_wakeup_sim():
   0:	0b06      	tloadr	r3, [pc, #24]	; (1c <cpu_suspend_wakeup_sim+0x1c>)
   2:	581a      	tloadr	r2, [r3, #0]
   4:	f140      	tshftls	r0, r0, #5
   6:	0b06      	tloadr	r3, [pc, #24]	; (20 <cpu_suspend_wakeup_sim+0x20>)
   8:	5819      	tloadr	r1, [r3, #0]
   a:	ea89      	tsubs	r1, r1, r2
   c:	0281      	tcmp	r1, r0
   e:	c9fb      	tjls.n	8 <cpu_suspend_wakeup_sim+0x8>
  10:	0b03      	tloadr	r3, [pc, #12]	; (20 <cpu_suspend_wakeup_sim+0x20>)
  12:	581a      	tloadr	r2, [r3, #0]
  14:	0b01      	tloadr	r3, [pc, #4]	; (1c <cpu_suspend_wakeup_sim+0x1c>)
  16:	501a      	tstorer	r2, [r3, #0]
  18:	0770      	tjex	lr
  1a:	46c0      	tnop			; (mov r8, r8)
  1c:	00000000 	tandeq	r0, r0, r0
			1c: R_TC32_ABS32	.bss.tick.2662
  20:	00800740 	taddeq	r0, r0, r0, asr #14

Disassembly of section .text.blt_sleep_wakeup:

00000000 <blt_sleep_wakeup>:
blt_sleep_wakeup():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6087      	tsub	sp, #28
   4:	3004      	tstorer	r0, [sp, #16]
   6:	ec0e      	tadds	r6, r1, #0
   8:	3202      	tstorer	r2, [sp, #8]
   a:	0b7d      	tloadr	r3, [pc, #500]	; (200 <blt_sleep_wakeup+0x200>)
   c:	481b      	tloadrb	r3, [r3, #0]
   e:	3300      	tstorer	r3, [sp, #0]
  10:	a302      	tmovs	r3, #2
  12:	ec18      	tadds	r0, r3, #0
  14:	0008      	tands	r0, r1
  16:	3001      	tstorer	r0, [sp, #4]
  18:	c063      	tjeq.n	e2 <blt_sleep_wakeup+0xe2>
  1a:	0b7a      	tloadr	r3, [pc, #488]	; (204 <blt_sleep_wakeup+0x204>)
  1c:	281b      	tloadrh	r3, [r3, #0]
  1e:	ab00      	tcmp	r3, #0
  20:	c107      	tjne.n	32 <blt_sleep_wakeup+0x32>
  22:	0a79      	tloadr	r2, [pc, #484]	; (208 <blt_sleep_wakeup+0x208>)
  24:	5810      	tloadr	r0, [r2, #0]
  26:	0979      	tloadr	r1, [pc, #484]	; (20c <blt_sleep_wakeup+0x20c>)
  28:	0a79      	tloadr	r2, [pc, #484]	; (210 <blt_sleep_wakeup+0x210>)
  2a:	580c      	tloadr	r4, [r1, #0]
  2c:	ea24      	tsubs	r4, r4, r0
  2e:	0294      	tcmp	r4, r2
  30:	c9fb      	tjls.n	2a <blt_sleep_wakeup+0x2a>
  32:	0c76      	tloadr	r4, [pc, #472]	; (20c <blt_sleep_wakeup+0x20c>)
  34:	5825      	tloadr	r5, [r4, #0]
  36:	3a02      	tloadr	r2, [sp, #8]
  38:	eb55      	tsubs	r5, r2, r5
  3a:	0a76      	tloadr	r2, [pc, #472]	; (214 <blt_sleep_wakeup+0x214>)
  3c:	0295      	tcmp	r5, r2
  3e:	c905      	tjls.n	4c <blt_sleep_wakeup+0x4c>
  40:	a023      	tmovs	r0, #35	; 0x23
  42:	97ff 9ffe 	tjl	0 <analog_read>
			42: R_TC32_CALL	analog_read
  46:	a50f      	tmovs	r5, #15
  48:	0028      	tands	r0, r5
  4a:	80d7      	tj.n	1fc <blt_sleep_wakeup+0x1fc>
  4c:	0a72      	tloadr	r2, [pc, #456]	; (218 <blt_sleep_wakeup+0x218>)
  4e:	0295      	tcmp	r5, r2
  50:	c811      	tjhi.n	76 <blt_sleep_wakeup+0x76>
  52:	5826      	tloadr	r6, [r4, #0]
  54:	a023      	tmovs	r0, #35	; 0x23
  56:	a10f      	tmovs	r1, #15
  58:	97ff 9ffe 	tjl	0 <analog_write>
			58: R_TC32_CALL	analog_write
  5c:	a70f      	tmovs	r7, #15
  5e:	a023      	tmovs	r0, #35	; 0x23
  60:	97ff 9ffe 	tjl	0 <analog_read>
			60: R_TC32_CALL	analog_read
  64:	0038      	tands	r0, r7
  66:	5823      	tloadr	r3, [r4, #0]
  68:	eb9b      	tsubs	r3, r3, r6
  6a:	02ab      	tcmp	r3, r5
  6c:	c300      	tjcc.n	70 <blt_sleep_wakeup+0x70>
  6e:	80c5      	tj.n	1fc <blt_sleep_wakeup+0x1fc>
  70:	a800      	tcmp	r0, #0
  72:	c0f4      	tjeq.n	5e <blt_sleep_wakeup+0x5e>
  74:	80c2      	tj.n	1fc <blt_sleep_wakeup+0x1fc>
  76:	0a69      	tloadr	r2, [pc, #420]	; (21c <blt_sleep_wakeup+0x21c>)
  78:	2814      	tloadrh	r4, [r2, #0]
  7a:	ab00      	tcmp	r3, #0
  7c:	c000      	tjeq.n	80 <blt_sleep_wakeup+0x80>
  7e:	ec1c      	tadds	r4, r3, #0
  80:	0867      	tloadr	r0, [pc, #412]	; (220 <blt_sleep_wakeup+0x220>)
  82:	ec21      	tadds	r1, r4, #0
  84:	97ff 9ffe 	tjl	0 <__divsi3>
			84: R_TC32_CALL	__divsi3
  88:	f607      	tshftls	r7, r0, #24
  8a:	fe3f      	tshftrs	r7, r7, #24
  8c:	ec79      	tadds	r1, r7, #1
  8e:	e049      	tasrs	r1, r1, #1
  90:	0249      	tnegs	r1, r1
  92:	b17f      	tadds	r1, #127	; 0x7f
  94:	f609      	tshftls	r1, r1, #24
  96:	fe09      	tshftrs	r1, r1, #24
  98:	a013      	tmovs	r0, #19
  9a:	97ff 9ffe 	tjl	0 <analog_write>
			9a: R_TC32_CALL	analog_write
  9e:	f128      	tshftls	r0, r5, #4
  a0:	ec21      	tadds	r1, r4, #0
  a2:	97ff 9ffe 	tjl	0 <__udivsi3>
			a2: R_TC32_CALL	__udivsi3
  a6:	ebc5      	tsubs	r5, r0, r7
  a8:	f629      	tshftls	r1, r5, #24
  aa:	fe09      	tshftrs	r1, r1, #24
  ac:	a00f      	tmovs	r0, #15
  ae:	97ff 9ffe 	tjl	0 <analog_write>
			ae: R_TC32_CALL	analog_write
  b2:	f429      	tshftls	r1, r5, #16
  b4:	fe09      	tshftrs	r1, r1, #24
  b6:	a010      	tmovs	r0, #16
  b8:	97ff 9ffe 	tjl	0 <analog_write>
			b8: R_TC32_CALL	analog_write
  bc:	f22d      	tshftls	r5, r5, #8
  be:	fe29      	tshftrs	r1, r5, #24
  c0:	a011      	tmovs	r0, #17
  c2:	97ff 9ffe 	tjl	0 <analog_write>
			c2: R_TC32_CALL	analog_write
  c6:	97ff 9ffe 	tjl	0 <blt_get_32k_tick>
			c6: R_TC32_CALL	blt_get_32k_tick
  ca:	a017      	tmovs	r0, #23
  cc:	a108      	tmovs	r1, #8
  ce:	97ff 9ffe 	tjl	0 <analog_write>
			ce: R_TC32_CALL	analog_write
  d2:	0b4e      	tloadr	r3, [pc, #312]	; (20c <blt_sleep_wakeup+0x20c>)
  d4:	581b      	tloadr	r3, [r3, #0]
  d6:	3303      	tstorer	r3, [sp, #12]
  d8:	f631      	tshftls	r1, r6, #24
  da:	fe09      	tshftrs	r1, r1, #24
  dc:	a017      	tmovs	r0, #23
  de:	97ff 9ffe 	tjl	0 <analog_write>
			de: R_TC32_CALL	analog_write
  e2:	a200      	tmovs	r2, #0
  e4:	0b46      	tloadr	r3, [pc, #280]	; (200 <blt_sleep_wakeup+0x200>)
  e6:	401a      	tstorerb	r2, [r3, #0]
  e8:	a201      	tmovs	r2, #1
  ea:	0032      	tands	r2, r6
  ec:	f0d2      	tshftls	r2, r2, #3
  ee:	b308      	tadds	r3, #8
  f0:	401a      	tstorerb	r2, [r3, #0]
  f2:	a001      	tmovs	r0, #1
  f4:	97ff 9ffe 	tjl	0 <analog_read>
			f4: R_TC32_CALL	analog_read
  f8:	3005      	tstorer	r0, [sp, #20]
  fa:	a002      	tmovs	r0, #2
  fc:	97ff 9ffe 	tjl	0 <analog_read>
			fc: R_TC32_CALL	analog_read
 100:	3006      	tstorer	r0, [sp, #24]
 102:	a084      	tmovs	r0, #132	; 0x84
 104:	97ff 9ffe 	tjl	0 <analog_read>
			104: R_TC32_CALL	analog_read
 108:	ec07      	tadds	r7, r0, #0
 10a:	3b04      	tloadr	r3, [sp, #16]
 10c:	ab00      	tcmp	r3, #0
 10e:	c005      	tjeq.n	11c <blt_sleep_wakeup+0x11c>
 110:	a005      	tmovs	r0, #5
 112:	a100      	tmovs	r1, #0
 114:	97ff 9ffe 	tjl	0 <analog_write>
			114: R_TC32_CALL	analog_write
 118:	a3fe      	tmovs	r3, #254	; 0xfe
 11a:	8008      	tj.n	12e <blt_sleep_wakeup+0x12e>
 11c:	a001      	tmovs	r0, #1
 11e:	a15c      	tmovs	r1, #92	; 0x5c
 120:	97ff 9ffe 	tjl	0 <analog_write>
			120: R_TC32_CALL	analog_write
 124:	a002      	tmovs	r0, #2
 126:	a101      	tmovs	r1, #1
 128:	97ff 9ffe 	tjl	0 <analog_write>
			128: R_TC32_CALL	analog_write
 12c:	a35e      	tmovs	r3, #94	; 0x5e
 12e:	3801      	tloadr	r0, [sp, #4]
 130:	0241      	tnegs	r1, r0
 132:	0141      	taddcs	r1, r0
 134:	0319      	tors	r1, r3
 136:	a018      	tmovs	r0, #24
 138:	97ff 9ffe 	tjl	0 <analog_write>
			138: R_TC32_CALL	analog_write
 13c:	a023      	tmovs	r0, #35	; 0x23
 13e:	a10f      	tmovs	r1, #15
 140:	97ff 9ffe 	tjl	0 <analog_write>
			140: R_TC32_CALL	analog_write
 144:	f636      	tshftls	r6, r6, #24
 146:	fe31      	tshftrs	r1, r6, #24
 148:	a017      	tmovs	r0, #23
 14a:	97ff 9ffe 	tjl	0 <analog_write>
			14a: R_TC32_CALL	analog_write
 14e:	a084      	tmovs	r0, #132	; 0x84
 150:	a121      	tmovs	r1, #33	; 0x21
 152:	97ff 9ffe 	tjl	0 <analog_write>
			152: R_TC32_CALL	analog_write
 156:	a006      	tmovs	r0, #6
 158:	97ff 9ffe 	tjl	0 <analog_read>
			158: R_TC32_CALL	analog_read
 15c:	ec05      	tadds	r5, r0, #0
 15e:	a006      	tmovs	r0, #6
 160:	a1ff      	tmovs	r1, #255	; 0xff
 162:	97ff 9ffe 	tjl	0 <analog_write>
			162: R_TC32_CALL	analog_write
 166:	97ff 9ffe 	tjl	0 <blt_sleep_wakeup>
			166: R_TC32_CALL	sleep_start
 16a:	a084      	tmovs	r0, #132	; 0x84
 16c:	ec39      	tadds	r1, r7, #0
 16e:	97ff 9ffe 	tjl	0 <analog_write>
			16e: R_TC32_CALL	analog_write
 172:	a006      	tmovs	r0, #6
 174:	ec29      	tadds	r1, r5, #0
 176:	97ff 9ffe 	tjl	0 <analog_write>
			176: R_TC32_CALL	analog_write
 17a:	a001      	tmovs	r0, #1
 17c:	3905      	tloadr	r1, [sp, #20]
 17e:	97ff 9ffe 	tjl	0 <analog_write>
			17e: R_TC32_CALL	analog_write
 182:	a002      	tmovs	r0, #2
 184:	3906      	tloadr	r1, [sp, #24]
 186:	97ff 9ffe 	tjl	0 <analog_write>
			186: R_TC32_CALL	analog_write
 18a:	a023      	tmovs	r0, #35	; 0x23
 18c:	97ff 9ffe 	tjl	0 <analog_read>
			18c: R_TC32_CALL	analog_read
 190:	ec05      	tadds	r5, r0, #0
 192:	a005      	tmovs	r0, #5
 194:	a180      	tmovs	r1, #128	; 0x80
 196:	97ff 9ffe 	tjl	0 <analog_write>
			196: R_TC32_CALL	analog_write
 19a:	a01e      	tmovs	r0, #30
 19c:	97ff 9ffe 	tjl	0 <sleep_us>
			19c: R_TC32_CALL	sleep_us
 1a0:	a005      	tmovs	r0, #5
 1a2:	a100      	tmovs	r1, #0
 1a4:	97ff 9ffe 	tjl	0 <analog_write>
			1a4: R_TC32_CALL	analog_write
 1a8:	a01e      	tmovs	r0, #30
 1aa:	97ff 9ffe 	tjl	0 <sleep_us>
			1aa: R_TC32_CALL	sleep_us
 1ae:	3a01      	tloadr	r2, [sp, #4]
 1b0:	aa00      	tcmp	r2, #0
 1b2:	c014      	tjeq.n	1de <blt_sleep_wakeup+0x1de>
 1b4:	0b12      	tloadr	r3, [pc, #72]	; (200 <blt_sleep_wakeup+0x200>)
 1b6:	0668      	tmov	r0, sp
 1b8:	4800      	tloadrb	r0, [r0, #0]
 1ba:	4018      	tstorerb	r0, [r3, #0]
 1bc:	97ff 9ffe 	tjl	0 <blt_get_32k_tick>
			1bc: R_TC32_CALL	blt_get_32k_tick
 1c0:	f7aa      	tshftls	r2, r5, #30
 1c2:	c505      	tjpl.n	1d0 <blt_sleep_wakeup+0x1d0>
 1c4:	97ff 9ffe 	tjl	0 <blt_get_32k_tick>
			1c4: R_TC32_CALL	blt_get_32k_tick
 1c8:	0b10      	tloadr	r3, [pc, #64]	; (20c <blt_sleep_wakeup+0x20c>)
 1ca:	3802      	tloadr	r0, [sp, #8]
 1cc:	5018      	tstorer	r0, [r3, #0]
 1ce:	800a      	tj.n	1e6 <blt_sleep_wakeup+0x1e6>
 1d0:	0344      	tmuls	r4, r0
 1d2:	f924      	tshftrs	r4, r4, #4
 1d4:	3a03      	tloadr	r2, [sp, #12]
 1d6:	e8a4      	tadds	r4, r4, r2
 1d8:	0b0c      	tloadr	r3, [pc, #48]	; (20c <blt_sleep_wakeup+0x20c>)
 1da:	501c      	tstorer	r4, [r3, #0]
 1dc:	8003      	tj.n	1e6 <blt_sleep_wakeup+0x1e6>
 1de:	0b08      	tloadr	r3, [pc, #32]	; (200 <blt_sleep_wakeup+0x200>)
 1e0:	0668      	tmov	r0, sp
 1e2:	4800      	tloadrb	r0, [r0, #0]
 1e4:	4018      	tstorerb	r0, [r3, #0]
 1e6:	0b09      	tloadr	r3, [pc, #36]	; (20c <blt_sleep_wakeup+0x20c>)
 1e8:	581a      	tloadr	r2, [r3, #0]
 1ea:	0b07      	tloadr	r3, [pc, #28]	; (208 <blt_sleep_wakeup+0x208>)
 1ec:	501a      	tstorer	r2, [r3, #0]
 1ee:	a2a6      	tmovs	r2, #166	; 0xa6
 1f0:	0b0c      	tloadr	r3, [pc, #48]	; (224 <blt_sleep_wakeup+0x224>)
 1f2:	401a      	tstorerb	r2, [r3, #0]
 1f4:	a200      	tmovs	r2, #0
 1f6:	0b03      	tloadr	r3, [pc, #12]	; (204 <blt_sleep_wakeup+0x204>)
 1f8:	201a      	tstorerh	r2, [r3, #0]
 1fa:	ec28      	tadds	r0, r5, #0
 1fc:	6007      	tadd	sp, #28
 1fe:	6df0      	tpop	{r4, r5, r6, r7, pc}
 200:	00800066 	taddeq	r0, r0, r6, rrx
	...
			204: R_TC32_ABS32	.bss.remington_32k_calibration_cnt
			208: R_TC32_ABS32	.bss.remington_suspend_wakeup_tick
 20c:	00800740 	taddeq	r0, r0, r0, asr #14
 210:	00007cff 	undefined instruction 0x00007cff
 214:	f85edfff 	undefined instruction 0xf85edfff
 218:	0000f9ff 	undefined instruction 0x0000f9ff
 21c:	00800024 	taddeq	r0, r0, r4, lsr #32
 220:	000d4800 	tandeq	r4, sp, r0, lsl #16
 224:	00800026 	taddeq	r0, r0, r6, lsr #32

Disassembly of section .bss.remington_32k_calibration_cnt:

00000000 <remington_32k_calibration_cnt>:
	...

Disassembly of section .bss.remington_suspend_wakeup_tick:

00000000 <remington_suspend_wakeup_tick>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .rodata.tbl_cpu_wakeup_init:

00000000 <tbl_cpu_wakeup_init>:
   0:	c3000060 	tnandgt	r0, #96	; 0x60
   4:	c3000061 	tnandgt	r0, #97	; 0x61
   8:	c3000062 	tnandgt	r0, #98	; 0x62
   c:	c3ff0063 	tmovnsgt	r0, #99	; 0x63
  10:	c3cf0064 	tbclrgt	r0, pc, #100	; 0x64
  14:	c3010620 	tnandgt	r1, #33554432	; 0x2000000
  18:	c8d00081 	tloadmgt	r0, {r0, r7}^
  1c:	c8010002 	tstormmdagt	r1, {r1}
  20:	c70f0000 	tstorergt	r0, [pc, -r0]
  24:	c8050002 	tstormmdagt	r5, {r1}
  28:	c70f0000 	tstorergt	r0, [pc, -r0]
  2c:	c8800005 	tstoremgt	r0, {r0, r2}
  30:	c70f0000 	tstorergt	r0, [pc, -r0]
  34:	c8000005 	tstormmdagt	r0, {r0, r2}
  38:	c70f0000 	tstorergt	r0, [pc, -r0]
  3c:	c8000018 	tstormmdagt	r0, {r3, r4}
  40:	c8680013 	tstormmdagt	r8!, {r0, r1, r4}^
  44:	c8400026 	tstormmdagt	r0, {r1, r2, r5}^
  48:	c8080010 	tstormmdagt	r8, {r4}
  4c:	c8020012 	tstormmdagt	r2, {r1, r4}
  50:	c3010065 	tnandgt	r1, #101	; 0x65
  54:	c30f0027 	tnandgt	pc, #39	; 0x27
  58:	c3a60026 	undefined instruction 0xc3a60026
  5c:	c8100083 	tloadmdagt	r0, {r0, r1, r7}
  60:	c8200084 	tstormmdagt	r0!, {r2, r7}
  64:	c7000008 	tstorergt	r0, [r0, -r8]

Disassembly of section .bss.tick.2662:

00000000 <tick.2662>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_32k_cal_mode:

00000000 <blt_32k_cal_mode>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

rf_drv_17H26.o:     file format elf32-littletc32
rw-rw-rw- 0/0  11460 Jan 30 00:17 2019 rf_drv_17H26.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.rf_drv_2m 00000044  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.rf_drv_1m 0000004c  00000000  00000000  00000078  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.rf_drv_250k 00000010  00000000  00000000  000000c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.rf_drv_init 00000074  00000000  00000000  000000d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.rf_drv_1M_init_OTP 00000044  00000000  00000000  00000148  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.rf_drv_1M_init_flash 0000004c  00000000  00000000  0000018c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.set_tp_OTP 0000003c  00000000  00000000  000001d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.set_tp_flash 00000078  00000000  00000000  00000214  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.rf_set_power_level_index 0000003c  00000000  00000000  0000028c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text.rf_power_down 00000018  00000000  00000000  000002c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .ram_code     000000e4  00000000  00000000  000002e0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text.rf_trx_off 0000000c  00000000  00000000  000003c4  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text.rf_set_tp_gain 00000028  00000000  00000000  000003d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text.rf_set_ble_channel 00000078  00000000  00000000  000003f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text.rf_set_tx_rx_off 00000020  00000000  00000000  00000470  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.rf_set_rxmode 00000018  00000000  00000000  00000490  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.rf_set_rxmode_250k 00000018  00000000  00000000  000004a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.rf_set_txmode 0000000c  00000000  00000000  000004c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.rf_send_packet_from_rx 00000028  00000000  00000000  000004cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.rf_send_single_packet 00000038  00000000  00000000  000004f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 23 .text.rf_multi_receiving_init 00000020  00000000  00000000  0000052c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.rf_receiving_pipe_enble 00000010  00000000  00000000  0000054c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.rf_multi_receiving_start 0000002c  00000000  00000000  0000055c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 26 .text.rf_multi_receiving_send_packet 00000038  00000000  00000000  00000588  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.rf_start_stx 0000002c  00000000  00000000  000005c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.rf_start_stx2rx 0000002c  00000000  00000000  000005ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.rf_start_btx 0000002c  00000000  00000000  00000618  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.rf_start_srx2tx 00000038  00000000  00000000  00000644  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.rf_start_brx 00000034  00000000  00000000  0000067c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.rf_set_ack_packet 00000010  00000000  00000000  000006b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.SetRxMode 00000014  00000000  00000000  000006c0  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 34 .text.SetTxMode 0000001c  00000000  00000000  000006d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 35 .text.TxPkt   00000014  00000000  00000000  000006f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .data.rf_tp_gain 00000004  00000000  00000000  00000704  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 37 .data.rfhw_tx_power 00000001  00000000  00000000  00000708  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 38 .bss.rf_tx_mode 00000001  00000000  00000000  00000709  2**0
                  ALLOC
 39 .data.rf_tp_base 00000004  00000000  00000000  0000070c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 40 .rodata.tbl_agc 0000001c  00000000  00000000  00000710  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 41 .rodata.rf_chn 00000010  00000000  00000000  0000072c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 42 .rodata.tbl_rf_ini_12M 0000000c  00000000  00000000  0000073c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 43 .rodata.tbl_rf_2m 00000048  00000000  00000000  00000748  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 44 .rodata.tbl_rf_250k 00000058  00000000  00000000  00000790  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 45 .bss.rf_external_crystal_type 00000001  00000000  00000000  000007e8  2**0
                  ALLOC
 46 .rodata.tbl_rf_ini 000000c0  00000000  00000000  000007e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 47 .rodata.tbl_rf_power 00000030  00000000  00000000  000008a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 48 .rodata.tbl_tp_close 00000008  00000000  00000000  000008d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 49 .rodata.tbl_tp_ini 00000008  00000000  00000000  000008e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 50 .rodata.tbl_rf_1m_ini 000000bc  00000000  00000000  000008e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 51 .rodata.tbl_rf_1m 00000040  00000000  00000000  000009a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 52 .rodata.tbl_rf_ini_16M 0000000c  00000000  00000000  000009e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 53 .comment      0000001b  00000000  00000000  000009f0  2**0
                  CONTENTS, READONLY
 54 .TC32.attributes 00000010  00000000  00000000  00000a0b  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 rf_drv_17H26.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.rf_drv_2m	00000000 .text.rf_drv_2m
00000000 l    d  .text.rf_drv_1m	00000000 .text.rf_drv_1m
00000000 l    d  .text.rf_drv_250k	00000000 .text.rf_drv_250k
00000000 l    d  .text.rf_drv_init	00000000 .text.rf_drv_init
00000000 l    d  .text.rf_drv_1M_init_OTP	00000000 .text.rf_drv_1M_init_OTP
00000000 l    d  .text.rf_drv_1M_init_flash	00000000 .text.rf_drv_1M_init_flash
00000000 l    d  .text.set_tp_OTP	00000000 .text.set_tp_OTP
00000000 l    d  .text.set_tp_flash	00000000 .text.set_tp_flash
00000000 l    d  .text.rf_set_power_level_index	00000000 .text.rf_set_power_level_index
00000000 l    d  .text.rf_power_down	00000000 .text.rf_power_down
00000000 l    d  .ram_code	00000000 .ram_code
00000000 l    d  .text.rf_trx_off	00000000 .text.rf_trx_off
00000000 l    d  .text.rf_set_tp_gain	00000000 .text.rf_set_tp_gain
00000000 l    d  .text.rf_set_ble_channel	00000000 .text.rf_set_ble_channel
00000000 l    d  .text.rf_set_tx_rx_off	00000000 .text.rf_set_tx_rx_off
00000000 l    d  .text.rf_set_rxmode	00000000 .text.rf_set_rxmode
00000000 l    d  .text.rf_set_rxmode_250k	00000000 .text.rf_set_rxmode_250k
00000000 l    d  .text.rf_set_txmode	00000000 .text.rf_set_txmode
00000000 l    d  .text.rf_send_packet_from_rx	00000000 .text.rf_send_packet_from_rx
00000000 l    d  .text.rf_send_single_packet	00000000 .text.rf_send_single_packet
00000000 l    d  .text.rf_multi_receiving_init	00000000 .text.rf_multi_receiving_init
00000000 l    d  .text.rf_receiving_pipe_enble	00000000 .text.rf_receiving_pipe_enble
00000000 l    d  .text.rf_multi_receiving_start	00000000 .text.rf_multi_receiving_start
00000000 l    d  .text.rf_multi_receiving_send_packet	00000000 .text.rf_multi_receiving_send_packet
00000000 l    d  .text.rf_start_stx	00000000 .text.rf_start_stx
00000000 l    d  .text.rf_start_stx2rx	00000000 .text.rf_start_stx2rx
00000000 l    d  .text.rf_start_btx	00000000 .text.rf_start_btx
00000000 l    d  .text.rf_start_srx2tx	00000000 .text.rf_start_srx2tx
00000000 l    d  .text.rf_start_brx	00000000 .text.rf_start_brx
00000000 l    d  .text.rf_set_ack_packet	00000000 .text.rf_set_ack_packet
00000000 l    d  .text.SetRxMode	00000000 .text.SetRxMode
00000000 l    d  .text.SetTxMode	00000000 .text.SetTxMode
00000000 l    d  .text.TxPkt	00000000 .text.TxPkt
00000000 l    d  .data.rf_tp_gain	00000000 .data.rf_tp_gain
00000000 l    d  .data.rfhw_tx_power	00000000 .data.rfhw_tx_power
00000000 l    d  .bss.rf_tx_mode	00000000 .bss.rf_tx_mode
00000000 l    d  .data.rf_tp_base	00000000 .data.rf_tp_base
00000000 l    d  .rodata.tbl_agc	00000000 .rodata.tbl_agc
00000000 l    d  .rodata.rf_chn	00000000 .rodata.rf_chn
00000000 l    d  .rodata.tbl_rf_ini_12M	00000000 .rodata.tbl_rf_ini_12M
00000000 l    d  .rodata.tbl_rf_2m	00000000 .rodata.tbl_rf_2m
00000000 l    d  .rodata.tbl_rf_250k	00000000 .rodata.tbl_rf_250k
00000000 l    d  .bss.rf_external_crystal_type	00000000 .bss.rf_external_crystal_type
00000000 l     O .bss.rf_external_crystal_type	00000001 rf_external_crystal_type
00000000 l    d  .rodata.tbl_rf_ini	00000000 .rodata.tbl_rf_ini
00000000 l    d  .rodata.tbl_rf_power	00000000 .rodata.tbl_rf_power
00000000 l    d  .rodata.tbl_tp_close	00000000 .rodata.tbl_tp_close
00000000 l    d  .rodata.tbl_tp_ini	00000000 .rodata.tbl_tp_ini
00000000 l    d  .rodata.tbl_rf_1m_ini	00000000 .rodata.tbl_rf_1m_ini
00000000 l    d  .rodata.tbl_rf_1m	00000000 .rodata.tbl_rf_1m
00000000 l    d  .rodata.tbl_rf_ini_16M	00000000 .rodata.tbl_rf_ini_16M
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 g     F .text.rf_drv_2m	00000044 rf_drv_2m
00000000         *UND*	00000000 analog_write
00000000         *UND*	00000000 LoadTblCmdSet
00000000 g     F .text.rf_drv_1m	0000004c rf_drv_1m
00000000 g     F .text.rf_drv_250k	00000010 rf_drv_250k
00000000 g     F .text.rf_drv_init	00000074 rf_drv_init
00000000 g     F .text.rf_drv_1M_init_OTP	00000044 rf_drv_1M_init_OTP
00000000 g     F .text.rf_drv_1M_init_flash	0000004c rf_drv_1M_init_flash
00000000         *UND*	00000000 otp_init_read
00000000         *UND*	00000000 otp_read
00000000         *UND*	00000000 __divsi3
00000000 g     F .text.set_tp_OTP	0000003c set_tp_OTP
00000000 g     F .text.set_tp_flash	00000078 set_tp_flash
00000000 g     F .text.rf_set_power_level_index	0000003c rf_set_power_level_index
00000000 g     F .text.rf_power_down	00000018 rf_power_down
00000000 g     F .ram_code	00000024 rf_power_enable
00000000 g     F .text.rf_trx_off	0000000c rf_trx_off
00000000 g     F .text.rf_set_tp_gain	00000028 rf_set_tp_gain
00000024 g     F .ram_code	0000007c rf_set_channel
00000000 g     F .text.rf_set_ble_channel	00000078 rf_set_ble_channel
00000000 g     F .text.rf_set_tx_rx_off	00000020 rf_set_tx_rx_off
00000000 g     F .text.rf_set_rxmode	00000018 rf_set_rxmode
00000000 g     F .text.rf_set_rxmode_250k	00000018 rf_set_rxmode_250k
00000000 g     F .text.rf_set_txmode	0000000c rf_set_txmode
000000a0 g     F .ram_code	00000044 rf_send_packet
00000000 g     F .text.rf_send_packet_from_rx	00000028 rf_send_packet_from_rx
00000000 g     F .text.rf_send_single_packet	00000038 rf_send_single_packet
00000000 g     F .text.rf_multi_receiving_init	00000020 rf_multi_receiving_init
00000000 g     F .text.rf_receiving_pipe_enble	00000010 rf_receiving_pipe_enble
00000000 g     F .text.rf_multi_receiving_start	0000002c rf_multi_receiving_start
00000000 g     F .text.rf_multi_receiving_send_packet	00000038 rf_multi_receiving_send_packet
00000000 g     F .text.rf_start_stx	0000002c rf_start_stx
00000000 g     F .text.rf_start_stx2rx	0000002c rf_start_stx2rx
00000000 g     F .text.rf_start_btx	0000002c rf_start_btx
00000000 g     F .text.rf_start_srx2tx	00000038 rf_start_srx2tx
00000000 g     F .text.rf_start_brx	00000034 rf_start_brx
00000000 g     F .text.rf_set_ack_packet	00000010 rf_set_ack_packet
00000000 g     F .text.SetRxMode	00000014 SetRxMode
00000000 g     F .text.SetTxMode	0000001c SetTxMode
00000000 g     F .text.TxPkt	00000014 TxPkt
00000000 g     O .data.rf_tp_base	00000004 rf_tp_base
00000000 g     O .data.rf_tp_gain	00000004 rf_tp_gain
00000000 g     O .bss.rf_tx_mode	00000001 rf_tx_mode
00000000 g     O .data.rfhw_tx_power	00000001 rfhw_tx_power
00000000 g     O .rodata.rf_chn	00000010 rf_chn
00000000 g     O .rodata.tbl_agc	0000001a tbl_agc
00000000 g     O .rodata.tbl_rf_ini	000000c0 tbl_rf_ini
00000000 g     O .rodata.tbl_rf_ini_16M	0000000c tbl_rf_ini_16M
00000000 g     O .rodata.tbl_rf_ini_12M	0000000c tbl_rf_ini_12M
00000000 g     O .rodata.tbl_rf_250k	00000058 tbl_rf_250k
00000000 g     O .rodata.tbl_rf_2m	00000048 tbl_rf_2m
00000000 g     O .rodata.tbl_rf_1m	00000040 tbl_rf_1m
00000000 g     O .rodata.tbl_rf_1m_ini	000000bc tbl_rf_1m_ini
00000000 g     O .rodata.tbl_tp_ini	00000008 tbl_tp_ini
00000000 g     O .rodata.tbl_tp_close	00000008 tbl_tp_close
00000000 g     O .rodata.tbl_rf_power	00000030 tbl_rf_power
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN
00000008       O *COM*	00000004 emi_var



Disassembly of section .text.rf_drv_2m:

00000000 <rf_drv_2m>:
rf_drv_2m():
   0:	6500      	tpush	{lr}
   2:	a25d      	tmovs	r2, #93	; 0x5d
   4:	0b0b      	tloadr	r3, [pc, #44]	; (34 <rf_drv_2m+0x34>)
   6:	501a      	tstorer	r2, [r3, #0]
   8:	a213      	tmovs	r2, #19
   a:	0b0b      	tloadr	r3, [pc, #44]	; (38 <rf_drv_2m+0x38>)
   c:	501a      	tstorer	r2, [r3, #0]
   e:	0b0b      	tloadr	r3, [pc, #44]	; (3c <rf_drv_2m+0x3c>)
  10:	481b      	tloadrb	r3, [r3, #0]
  12:	ab01      	tcmp	r3, #1
  14:	c102      	tjne.n	1c <rf_drv_2m+0x1c>
  16:	a09e      	tmovs	r0, #158	; 0x9e
  18:	a182      	tmovs	r1, #130	; 0x82
  1a:	8003      	tj.n	24 <rf_drv_2m+0x24>
  1c:	ab00      	tcmp	r3, #0
  1e:	c103      	tjne.n	28 <rf_drv_2m+0x28>
  20:	a09e      	tmovs	r0, #158	; 0x9e
  22:	a1ad      	tmovs	r1, #173	; 0xad
  24:	97ff 9ffe 	tjl	0 <analog_write>
			24: R_TC32_CALL	analog_write
  28:	0805      	tloadr	r0, [pc, #20]	; (40 <rf_drv_2m+0x40>)
  2a:	a112      	tmovs	r1, #18
  2c:	97ff 9ffe 	tjl	0 <LoadTblCmdSet>
			2c: R_TC32_CALL	LoadTblCmdSet
  30:	6d00      	tpop	{pc}
  32:	46c0      	tnop			; (mov r8, r8)
	...
			34: R_TC32_ABS32	.data.rf_tp_base
			38: R_TC32_ABS32	.data.rf_tp_gain
			3c: R_TC32_ABS32	.bss.rf_external_crystal_type
			40: R_TC32_ABS32	.rodata.tbl_rf_2m

Disassembly of section .text.rf_drv_1m:

00000000 <rf_drv_1m>:
rf_drv_1m():
   0:	6500      	tpush	{lr}
   2:	a27e      	tmovs	r2, #126	; 0x7e
   4:	0b0c      	tloadr	r3, [pc, #48]	; (38 <rf_drv_1m+0x38>)
   6:	401a      	tstorerb	r2, [r3, #0]
   8:	a21f      	tmovs	r2, #31
   a:	0b0c      	tloadr	r3, [pc, #48]	; (3c <rf_drv_1m+0x3c>)
   c:	501a      	tstorer	r2, [r3, #0]
   e:	a20c      	tmovs	r2, #12
  10:	0b0b      	tloadr	r3, [pc, #44]	; (40 <rf_drv_1m+0x40>)
  12:	501a      	tstorer	r2, [r3, #0]
  14:	0b0b      	tloadr	r3, [pc, #44]	; (44 <rf_drv_1m+0x44>)
  16:	481b      	tloadrb	r3, [r3, #0]
  18:	ab01      	tcmp	r3, #1
  1a:	c102      	tjne.n	22 <rf_drv_1m+0x22>
  1c:	a09e      	tmovs	r0, #158	; 0x9e
  1e:	a141      	tmovs	r1, #65	; 0x41
  20:	8003      	tj.n	2a <rf_drv_1m+0x2a>
  22:	ab00      	tcmp	r3, #0
  24:	c103      	tjne.n	2e <rf_drv_1m+0x2e>
  26:	a09e      	tmovs	r0, #158	; 0x9e
  28:	a156      	tmovs	r1, #86	; 0x56
  2a:	97ff 9ffe 	tjl	0 <analog_write>
			2a: R_TC32_CALL	analog_write
  2e:	0806      	tloadr	r0, [pc, #24]	; (48 <rf_drv_1m+0x48>)
  30:	a110      	tmovs	r1, #16
  32:	97ff 9ffe 	tjl	0 <LoadTblCmdSet>
			32: R_TC32_CALL	LoadTblCmdSet
  36:	6d00      	tpop	{pc}
  38:	00800012 	taddeq	r0, r0, r2, lsl r0
	...
			3c: R_TC32_ABS32	.data.rf_tp_base
			40: R_TC32_ABS32	.data.rf_tp_gain
			44: R_TC32_ABS32	.bss.rf_external_crystal_type
			48: R_TC32_ABS32	.rodata.tbl_rf_1m

Disassembly of section .text.rf_drv_250k:

00000000 <rf_drv_250k>:
rf_drv_250k():
   0:	6500      	tpush	{lr}
   2:	0802      	tloadr	r0, [pc, #8]	; (c <rf_drv_250k+0xc>)
   4:	a116      	tmovs	r1, #22
   6:	97ff 9ffe 	tjl	0 <LoadTblCmdSet>
			6: R_TC32_CALL	LoadTblCmdSet
   a:	6d00      	tpop	{pc}
   c:	00000000 	tandeq	r0, r0, r0
			c: R_TC32_ABS32	.rodata.tbl_rf_250k

Disassembly of section .text.rf_drv_init:

00000000 <rf_drv_init>:
rf_drv_init():
   0:	6510      	tpush	{r4, lr}
   2:	ec04      	tadds	r4, r0, #0
   4:	0b11      	tloadr	r3, [pc, #68]	; (4c <rf_drv_init+0x4c>)
   6:	4018      	tstorerb	r0, [r3, #0]
   8:	a200      	tmovs	r2, #0
   a:	0b11      	tloadr	r3, [pc, #68]	; (50 <rf_drv_init+0x50>)
   c:	401a      	tstorerb	r2, [r3, #0]
   e:	a240      	tmovs	r2, #64	; 0x40
  10:	0b10      	tloadr	r3, [pc, #64]	; (54 <rf_drv_init+0x54>)
  12:	401a      	tstorerb	r2, [r3, #0]
  14:	0810      	tloadr	r0, [pc, #64]	; (58 <rf_drv_init+0x58>)
  16:	a130      	tmovs	r1, #48	; 0x30
  18:	97ff 9ffe 	tjl	0 <LoadTblCmdSet>
			18: R_TC32_CALL	LoadTblCmdSet
  1c:	ac00      	tcmp	r4, #0
  1e:	c107      	tjne.n	30 <rf_drv_init+0x30>
  20:	080e      	tloadr	r0, [pc, #56]	; (5c <rf_drv_init+0x5c>)
  22:	a103      	tmovs	r1, #3
  24:	97ff 9ffe 	tjl	0 <LoadTblCmdSet>
			24: R_TC32_CALL	LoadTblCmdSet
  28:	0b0d      	tloadr	r3, [pc, #52]	; (60 <rf_drv_init+0x60>)
  2a:	090e      	tloadr	r1, [pc, #56]	; (64 <rf_drv_init+0x64>)
  2c:	0a0e      	tloadr	r2, [pc, #56]	; (68 <rf_drv_init+0x68>)
  2e:	8003      	tj.n	38 <rf_drv_init+0x38>
  30:	ac01      	tcmp	r4, #1
  32:	c1f9      	tjne.n	28 <rf_drv_init+0x28>
  34:	080d      	tloadr	r0, [pc, #52]	; (6c <rf_drv_init+0x6c>)
  36:	87f4      	tj.n	22 <rf_drv_init+0x22>
  38:	e8c8      	tadds	r0, r1, r3
  3a:	0c0d      	tloadr	r4, [pc, #52]	; (70 <rf_drv_init+0x70>)
  3c:	e900      	tadds	r0, r0, r4
  3e:	4800      	tloadrb	r0, [r0, #0]
  40:	4018      	tstorerb	r0, [r3, #0]
  42:	b301      	tadds	r3, #1
  44:	0293      	tcmp	r3, r2
  46:	c1f7      	tjne.n	38 <rf_drv_init+0x38>
  48:	6d10      	tpop	{r4, pc}
  4a:	46c0      	tnop			; (mov r8, r8)
	...
			4c: R_TC32_ABS32	.bss.rf_external_crystal_type
			50: R_TC32_ABS32	.bss.rf_tx_mode
			54: R_TC32_ABS32	.data.rfhw_tx_power
			58: R_TC32_ABS32	.rodata.tbl_rf_ini
			5c: R_TC32_ABS32	.rodata.tbl_rf_ini_12M
  60:	01000480 	tnandeq	r0, r0, lsl #9
  64:	00000000 	tandeq	r0, r0, r0
			64: R_TC32_ABS32	.rodata.tbl_agc
  68:	0100049a 	undefined instruction 0x0100049a
  6c:	00000000 	tandeq	r0, r0, r0
			6c: R_TC32_ABS32	.rodata.tbl_rf_ini_16M
  70:	fefffb80 	undefined instruction 0xfefffb80

Disassembly of section .text.rf_drv_1M_init_OTP:

00000000 <rf_drv_1M_init_OTP>:
rf_drv_1M_init_OTP():
   0:	6510      	tpush	{r4, lr}
   2:	0b0a      	tloadr	r3, [pc, #40]	; (2c <rf_drv_1M_init_OTP+0x2c>)
   4:	481b      	tloadrb	r3, [r3, #0]
   6:	ab0e      	tcmp	r3, #14
   8:	c903      	tjls.n	12 <rf_drv_1M_init_OTP+0x12>
   a:	0809      	tloadr	r0, [pc, #36]	; (30 <rf_drv_1M_init_OTP+0x30>)
   c:	a12f      	tmovs	r1, #47	; 0x2f
   e:	97ff 9ffe 	tjl	0 <LoadTblCmdSet>
			e: R_TC32_CALL	LoadTblCmdSet
  12:	0b08      	tloadr	r3, [pc, #32]	; (34 <rf_drv_1M_init_OTP+0x34>)
  14:	0908      	tloadr	r1, [pc, #32]	; (38 <rf_drv_1M_init_OTP+0x38>)
  16:	0a09      	tloadr	r2, [pc, #36]	; (3c <rf_drv_1M_init_OTP+0x3c>)
  18:	e8c8      	tadds	r0, r1, r3
  1a:	0c09      	tloadr	r4, [pc, #36]	; (40 <rf_drv_1M_init_OTP+0x40>)
  1c:	e900      	tadds	r0, r0, r4
  1e:	4800      	tloadrb	r0, [r0, #0]
  20:	4018      	tstorerb	r0, [r3, #0]
  22:	b301      	tadds	r3, #1
  24:	0293      	tcmp	r3, r2
  26:	c1f7      	tjne.n	18 <rf_drv_1M_init_OTP+0x18>
  28:	6d10      	tpop	{r4, pc}
  2a:	46c0      	tnop			; (mov r8, r8)
  2c:	00003fee 	tandeq	r3, r0, lr, ror #31
  30:	00000000 	tandeq	r0, r0, r0
			30: R_TC32_ABS32	.rodata.tbl_rf_1m_ini
  34:	01000480 	tnandeq	r0, r0, lsl #9
  38:	00000000 	tandeq	r0, r0, r0
			38: R_TC32_ABS32	.rodata.tbl_agc
  3c:	0100049a 	undefined instruction 0x0100049a
  40:	fefffb80 	undefined instruction 0xfefffb80

Disassembly of section .text.rf_drv_1M_init_flash:

00000000 <rf_drv_1M_init_flash>:
rf_drv_1M_init_flash():
   0:	6510      	tpush	{r4, lr}
   2:	97ff 9ffe 	tjl	0 <otp_init_read>
			2: R_TC32_CALL	otp_init_read
   6:	080b      	tloadr	r0, [pc, #44]	; (30 <otp_read+0x30>)
   8:	97ff 9ffe 	tjl	0 <otp_read>
			8: R_TC32_CALL	otp_read
   c:	f600      	tshftls	r0, r0, #24
   e:	fe00      	tshftrs	r0, r0, #24
  10:	a80e      	tcmp	r0, #14
  12:	c903      	tjls.n	1c <rf_drv_1M_init_flash+0x1c>
  14:	0808      	tloadr	r0, [pc, #32]	; (38 <rf_drv_1M_init_flash+0x38>)
  16:	a12f      	tmovs	r1, #47	; 0x2f
  18:	97ff 9ffe 	tjl	0 <LoadTblCmdSet>
			18: R_TC32_CALL	LoadTblCmdSet
  1c:	0b07      	tloadr	r3, [pc, #28]	; (3c <rf_drv_1M_init_flash+0x3c>)
  1e:	0908      	tloadr	r1, [pc, #32]	; (40 <rf_drv_1M_init_flash+0x40>)
  20:	0a08      	tloadr	r2, [pc, #32]	; (44 <rf_drv_1M_init_flash+0x44>)
  22:	e8c8      	tadds	r0, r1, r3
  24:	0c08      	tloadr	r4, [pc, #32]	; (48 <rf_drv_1M_init_flash+0x48>)
  26:	e900      	tadds	r0, r0, r4
  28:	4800      	tloadrb	r0, [r0, #0]
  2a:	4018      	tstorerb	r0, [r3, #0]
  2c:	b301      	tadds	r3, #1
  2e:	0293      	tcmp	r3, r2
  30:	c1f7      	tjne.n	22 <rf_drv_1M_init_flash+0x22>
  32:	6d10      	tpop	{r4, pc}
  34:	00003fee 	tandeq	r3, r0, lr, ror #31
  38:	00000000 	tandeq	r0, r0, r0
			38: R_TC32_ABS32	.rodata.tbl_rf_1m_ini
  3c:	01000480 	tnandeq	r0, r0, lsl #9
  40:	00000000 	tandeq	r0, r0, r0
			40: R_TC32_ABS32	.rodata.tbl_agc
  44:	0100049a 	undefined instruction 0x0100049a
  48:	fefffb80 	undefined instruction 0xfefffb80

Disassembly of section .text.set_tp_OTP:

00000000 <set_tp_OTP>:
set_tp_OTP():
   0:	6500      	tpush	{lr}
   2:	0b0a      	tloadr	r3, [pc, #40]	; (2c <set_tp_OTP+0x2c>)
   4:	281b      	tloadrh	r3, [r3, #0]
   6:	ee59      	tsubs	r1, r3, #1
   8:	f409      	tshftls	r1, r1, #16
   a:	fc09      	tshftrs	r1, r1, #16
   c:	0a08      	tloadr	r2, [pc, #32]	; (30 <set_tp_OTP+0x30>)
   e:	0291      	tcmp	r1, r2
  10:	c80b      	tjhi.n	2a <set_tp_OTP+0x2a>
  12:	a2ff      	tmovs	r2, #255	; 0xff
  14:	001a      	tands	r2, r3
  16:	0907      	tloadr	r1, [pc, #28]	; (34 <set_tp_OTP+0x34>)
  18:	500a      	tstorer	r2, [r1, #0]
  1a:	fa1b      	tshftrs	r3, r3, #8
  1c:	ead2      	tsubs	r2, r2, r3
  1e:	f210      	tshftls	r0, r2, #8
  20:	a150      	tmovs	r1, #80	; 0x50
  22:	97ff 9ffe 	tjl	0 <__divsi3>
			22: R_TC32_CALL	__divsi3
  26:	0b04      	tloadr	r3, [pc, #16]	; (38 <set_tp_OTP+0x38>)
  28:	5018      	tstorer	r0, [r3, #0]
  2a:	6d00      	tpop	{pc}
  2c:	00003fe6 	tandeq	r3, r0, r6, ror #31
  30:	0000fffd 	undefined instruction 0x0000fffd
	...
			34: R_TC32_ABS32	.data.rf_tp_base
			38: R_TC32_ABS32	.data.rf_tp_gain

Disassembly of section .text.set_tp_flash:

00000000 <set_tp_flash>:
set_tp_flash():
   0:	6510      	tpush	{r4, lr}
   2:	0816      	tloadr	r0, [pc, #88]	; (5c <set_tp_flash+0x5c>)
   4:	97ff 9ffe 	tjl	0 <otp_read>
			4: R_TC32_CALL	otp_read
   8:	ec04      	tadds	r4, r0, #0
   a:	0815      	tloadr	r0, [pc, #84]	; (60 <set_tp_flash+0x60>)
   c:	97ff 9ffe 	tjl	0 <otp_read>
			c: R_TC32_CALL	otp_read
  10:	f200      	tshftls	r0, r0, #8
  12:	0304      	tors	r4, r0
  14:	f424      	tshftls	r4, r4, #16
  16:	fc23      	tshftrs	r3, r4, #16
  18:	0a12      	tloadr	r2, [pc, #72]	; (64 <set_tp_flash+0x64>)
  1a:	e8a1      	tadds	r1, r4, r2
  1c:	fc09      	tshftrs	r1, r1, #16
  1e:	0a12      	tloadr	r2, [pc, #72]	; (68 <set_tp_flash+0x68>)
  20:	0291      	tcmp	r1, r2
  22:	c807      	tjhi.n	34 <set_tp_flash+0x34>
  24:	a2ff      	tmovs	r2, #255	; 0xff
  26:	0013      	tands	r3, r2
  28:	0a10      	tloadr	r2, [pc, #64]	; (6c <set_tp_flash+0x6c>)
  2a:	5013      	tstorer	r3, [r2, #0]
  2c:	fe24      	tshftrs	r4, r4, #24
  2e:	eb1b      	tsubs	r3, r3, r4
  30:	f218      	tshftls	r0, r3, #8
  32:	800d      	tj.n	50 <set_tp_flash+0x50>
  34:	0b0e      	tloadr	r3, [pc, #56]	; (70 <set_tp_flash+0x70>)
  36:	281b      	tloadrh	r3, [r3, #0]
  38:	ee59      	tsubs	r1, r3, #1
  3a:	f409      	tshftls	r1, r1, #16
  3c:	fc09      	tshftrs	r1, r1, #16
  3e:	0291      	tcmp	r1, r2
  40:	c80b      	tjhi.n	5a <set_tp_flash+0x5a>
  42:	a2ff      	tmovs	r2, #255	; 0xff
  44:	001a      	tands	r2, r3
  46:	0909      	tloadr	r1, [pc, #36]	; (6c <set_tp_flash+0x6c>)
  48:	500a      	tstorer	r2, [r1, #0]
  4a:	fa1b      	tshftrs	r3, r3, #8
  4c:	ead2      	tsubs	r2, r2, r3
  4e:	f210      	tshftls	r0, r2, #8
  50:	a150      	tmovs	r1, #80	; 0x50
  52:	97ff 9ffe 	tjl	0 <__divsi3>
			52: R_TC32_CALL	__divsi3
  56:	0b07      	tloadr	r3, [pc, #28]	; (74 <set_tp_flash+0x74>)
  58:	5018      	tstorer	r0, [r3, #0]
  5a:	6d10      	tpop	{r4, pc}
  5c:	00003fe6 	tandeq	r3, r0, r6, ror #31
  60:	00003fe7 	tandeq	r3, r0, r7, ror #31
  64:	ffff0000 	undefined instruction 0xffff0000
  68:	0000fffd 	undefined instruction 0x0000fffd
  6c:	00000000 	tandeq	r0, r0, r0
			6c: R_TC32_ABS32	.data.rf_tp_base
  70:	00076006 	tandeq	r6, r7, r6
  74:	00000000 	tandeq	r0, r0, r0
			74: R_TC32_ABS32	.data.rf_tp_gain

Disassembly of section .text.rf_set_power_level_index:

00000000 <rf_set_power_level_index>:
rf_set_power_level_index():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	ec43      	tadds	r3, r0, #1
   4:	ab0c      	tcmp	r3, #12
   6:	c900      	tjls.n	a <rf_set_power_level_index+0xa>
   8:	a00b      	tmovs	r0, #11
   a:	f080      	tshftls	r0, r0, #2
   c:	0b0a      	tloadr	r3, [pc, #40]	; (38 <rf_set_power_level_index+0x38>)
   e:	e81c      	tadds	r4, r3, r0
  10:	ec65      	tadds	r5, r4, #1
  12:	1c19      	tloadrb	r1, [r3, r0]
  14:	a0a2      	tmovs	r0, #162	; 0xa2
  16:	97ff 9ffe 	tjl	0 <analog_write>
			16: R_TC32_CALL	analog_write
  1a:	ec6e      	tadds	r6, r5, #1
  1c:	4861      	tloadrb	r1, [r4, #1]
  1e:	a004      	tmovs	r0, #4
  20:	97ff 9ffe 	tjl	0 <analog_write>
			20: R_TC32_CALL	analog_write
  24:	4869      	tloadrb	r1, [r5, #1]
  26:	a0a7      	tmovs	r0, #167	; 0xa7
  28:	97ff 9ffe 	tjl	0 <analog_write>
			28: R_TC32_CALL	analog_write
  2c:	4871      	tloadrb	r1, [r6, #1]
  2e:	a08d      	tmovs	r0, #141	; 0x8d
  30:	97ff 9ffe 	tjl	0 <analog_write>
			30: R_TC32_CALL	analog_write
  34:	6d70      	tpop	{r4, r5, r6, pc}
  36:	46c0      	tnop			; (mov r8, r8)
  38:	00000000 	tandeq	r0, r0, r0
			38: R_TC32_ABS32	.rodata.tbl_rf_power

Disassembly of section .text.rf_power_down:

00000000 <rf_power_down>:
rf_power_down():
   0:	6500      	tpush	{lr}
   2:	a221      	tmovs	r2, #33	; 0x21
   4:	0b03      	tloadr	r3, [pc, #12]	; (14 <rf_power_down+0x14>)
   6:	401a      	tstorerb	r2, [r3, #0]
   8:	a006      	tmovs	r0, #6
   a:	a1fe      	tmovs	r1, #254	; 0xfe
   c:	97ff 9ffe 	tjl	0 <analog_write>
			c: R_TC32_CALL	analog_write
  10:	6d00      	tpop	{pc}
  12:	46c0      	tnop			; (mov r8, r8)
  14:	01000f16 	tnandeq	r0, r6, lsl pc

Disassembly of section .ram_code:

00000000 <rf_power_enable>:
rf_power_enable():
   0:	6510      	tpush	{r4, lr}
   2:	ec04      	tadds	r4, r0, #0
   4:	a1ff      	tmovs	r1, #255	; 0xff
   6:	0243      	tnegs	r3, r0
   8:	0143      	taddcs	r3, r0
   a:	025b      	tnegs	r3, r3
   c:	0019      	tands	r1, r3
   e:	a006      	tmovs	r0, #6
  10:	97ff 9ffe 	tjl	0 <analog_write>
			10: R_TC32_CALL	analog_write
  14:	a1e2      	tmovs	r1, #226	; 0xe2
  16:	ac00      	tcmp	r4, #0
  18:	c000      	tjeq.n	1c <rf_power_enable+0x1c>
  1a:	a102      	tmovs	r1, #2
  1c:	a005      	tmovs	r0, #5
  1e:	97ff 9ffe 	tjl	0 <analog_write>
			1e: R_TC32_CALL	analog_write
  22:	6d10      	tpop	{r4, pc}

00000024 <rf_set_channel>:
rf_set_channel():
  24:	6530      	tpush	{r4, r5, lr}
  26:	f604      	tshftls	r4, r0, #24
  28:	e624      	tasrs	r4, r4, #24
  2a:	f40d      	tshftls	r5, r1, #16
  2c:	fc2d      	tshftrs	r5, r5, #16
  2e:	a006      	tmovs	r0, #6
  30:	a100      	tmovs	r1, #0
  32:	97ff 9ffe 	tjl	0 <analog_write>
			32: R_TC32_CALL	analog_write
  36:	a229      	tmovs	r2, #41	; 0x29
  38:	0b11      	tloadr	r3, [pc, #68]	; (80 <rf_set_channel+0x5c>)
  3a:	401a      	tstorerb	r2, [r3, #0]
  3c:	a280      	tmovs	r2, #128	; 0x80
  3e:	0b11      	tloadr	r3, [pc, #68]	; (84 <rf_set_channel+0x60>)
  40:	401a      	tstorerb	r2, [r3, #0]
  42:	f46a      	tshftls	r2, r5, #17
  44:	c501      	tjpl.n	4a <rf_set_channel+0x26>
  46:	a255      	tmovs	r2, #85	; 0x55
  48:	8000      	tj.n	4c <rf_set_channel+0x28>
  4a:	a244      	tmovs	r2, #68	; 0x44
  4c:	0b0e      	tloadr	r3, [pc, #56]	; (88 <rf_set_channel+0x64>)
  4e:	401a      	tstorerb	r2, [r3, #0]
  50:	f42d      	tshftls	r5, r5, #16
  52:	ad00      	tcmp	r5, #0
  54:	ca03      	tjge.n	5e <rf_set_channel+0x3a>
  56:	0b0d      	tloadr	r3, [pc, #52]	; (8c <rf_set_channel+0x68>)
  58:	1d1c      	tloadrb	r4, [r3, r4]
  5a:	f624      	tshftls	r4, r4, #24
  5c:	e624      	tasrs	r4, r4, #24
  5e:	a296      	tmovs	r2, #150	; 0x96
  60:	f112      	tshftls	r2, r2, #4
  62:	e8a3      	tadds	r3, r4, r2
  64:	f419      	tshftls	r1, r3, #16
  66:	fc09      	tshftrs	r1, r1, #16
  68:	0a09      	tloadr	r2, [pc, #36]	; (90 <rf_set_channel+0x6c>)
  6a:	2011      	tstorerh	r1, [r2, #0]
  6c:	0a09      	tloadr	r2, [pc, #36]	; (94 <rf_set_channel+0x70>)
  6e:	0353      	tmuls	r3, r2
  70:	0a09      	tloadr	r2, [pc, #36]	; (98 <rf_set_channel+0x74>)
  72:	e89b      	tadds	r3, r3, r2
  74:	0a09      	tloadr	r2, [pc, #36]	; (9c <rf_set_channel+0x78>)
  76:	5013      	tstorer	r3, [r2, #0]
  78:	ec20      	tadds	r0, r4, #0
  7a:	97ff 9ffe 	tjl	0 <rf_power_enable>
			7a: R_TC32_CALL	rf_set_tp_gain
  7e:	6d30      	tpop	{r4, r5, pc}
  80:	01000f16 	tnandeq	r0, r6, lsl pc
  84:	01000428 	tnandeq	r0, r8, lsr #8
  88:	01000f02 	tnandeq	r0, r2, lsl #30
  8c:	00000000 	tandeq	r0, r0, r0
			8c: R_TC32_ABS32	.rodata.rf_chn
  90:	010004d6 	undefined instruction 0x010004d6
  94:	0000e38e 	tandeq	lr, r0, lr, lsl #7
  98:	fffe3d49 	undefined instruction 0xfffe3d49
  9c:	010004d0 	undefined instruction 0x010004d0

000000a0 <rf_send_packet>:
rf_send_packet():
  a0:	6570      	tpush	{r4, r5, r6, lr}
  a2:	ec05      	tadds	r5, r0, #0
  a4:	f40e      	tshftls	r6, r1, #16
  a6:	fc36      	tshftrs	r6, r6, #16
  a8:	f614      	tshftls	r4, r2, #24
  aa:	fe24      	tshftrs	r4, r4, #24
  ac:	a006      	tmovs	r0, #6
  ae:	a100      	tmovs	r1, #0
  b0:	97ff 9ffe 	tjl	0 <analog_write>
			b0: R_TC32_CALL	analog_write
  b4:	0b06      	tloadr	r3, [pc, #24]	; (d0 <analog_write+0xd0>)
  b6:	a280      	tmovs	r2, #128	; 0x80
  b8:	401a      	tstorerb	r2, [r3, #0]
  ba:	0a06      	tloadr	r2, [pc, #24]	; (d4 <analog_write+0xd4>)
  bc:	4014      	tstorerb	r4, [r2, #0]
  be:	f42d      	tshftls	r5, r5, #16
  c0:	fc2d      	tshftrs	r5, r5, #16
  c2:	0a05      	tloadr	r2, [pc, #20]	; (d8 <analog_write+0xd8>)
  c4:	2015      	tstorerh	r5, [r2, #0]
  c6:	0a05      	tloadr	r2, [pc, #20]	; (dc <analog_write+0xdc>)
  c8:	2016      	tstorerh	r6, [r2, #0]
  ca:	0a05      	tloadr	r2, [pc, #20]	; (e0 <analog_write+0xe0>)
  cc:	201a      	tstorerh	r2, [r3, #0]
  ce:	6d70      	tpop	{r4, r5, r6, pc}
  d0:	01000f00 	tnandeq	r0, r0, lsl #30
  d4:	01000f14 	tnandeq	r0, r4, lsl pc
  d8:	0100050c 	tnandeq	r0, ip, lsl #10
  dc:	01000f0a 	tnandeq	r0, sl, lsl #30
  e0:	00003f81 	tandeq	r3, r0, r1, lsl #31

Disassembly of section .text.rf_trx_off:

00000000 <rf_trx_off>:
rf_trx_off():
   0:	6500      	tpush	{lr}
   2:	a006      	tmovs	r0, #6
   4:	a1fe      	tmovs	r1, #254	; 0xfe
   6:	97ff 9ffe 	tjl	0 <analog_write>
			6: R_TC32_CALL	analog_write
   a:	6d00      	tpop	{pc}

Disassembly of section .text.rf_set_tp_gain:

00000000 <rf_set_tp_gain>:
rf_set_tp_gain():
   0:	6500      	tpush	{lr}
   2:	f601      	tshftls	r1, r0, #24
   4:	e609      	tasrs	r1, r1, #24
   6:	0b06      	tloadr	r3, [pc, #24]	; (20 <rf_set_tp_gain+0x20>)
   8:	581b      	tloadr	r3, [r3, #0]
   a:	0a06      	tloadr	r2, [pc, #24]	; (24 <rf_set_tp_gain+0x24>)
   c:	5812      	tloadr	r2, [r2, #0]
   e:	0351      	tmuls	r1, r2
  10:	e209      	tasrs	r1, r1, #8
  12:	ea59      	tsubs	r1, r3, r1
  14:	f609      	tshftls	r1, r1, #24
  16:	fe09      	tshftrs	r1, r1, #24
  18:	a093      	tmovs	r0, #147	; 0x93
  1a:	97ff 9ffe 	tjl	0 <analog_write>
			1a: R_TC32_CALL	analog_write
  1e:	6d00      	tpop	{pc}
	...
			20: R_TC32_ABS32	.data.rf_tp_base
			24: R_TC32_ABS32	.data.rf_tp_gain

Disassembly of section .text.rf_set_ble_channel:

00000000 <rf_set_ble_channel>:
rf_set_ble_channel():
   0:	6500      	tpush	{lr}
   2:	f600      	tshftls	r0, r0, #24
   4:	e600      	tasrs	r0, r0, #24
   6:	ec83      	tadds	r3, r0, #2
   8:	a80a      	tcmp	r0, #10
   a:	cd02      	tjle.n	12 <rf_set_ble_channel+0x12>
   c:	a824      	tcmp	r0, #36	; 0x24
   e:	cc03      	tjgt.n	18 <rf_set_ble_channel+0x18>
  10:	ecc3      	tadds	r3, r0, #3
  12:	f61b      	tshftls	r3, r3, #24
  14:	e61b      	tasrs	r3, r3, #24
  16:	8006      	tj.n	26 <rf_set_ble_channel+0x26>
  18:	a301      	tmovs	r3, #1
  1a:	a825      	tcmp	r0, #37	; 0x25
  1c:	c003      	tjeq.n	26 <rf_set_ble_channel+0x26>
  1e:	a328      	tmovs	r3, #40	; 0x28
  20:	a826      	tcmp	r0, #38	; 0x26
  22:	c100      	tjne.n	26 <rf_set_ble_channel+0x26>
  24:	a30d      	tmovs	r3, #13
  26:	a129      	tmovs	r1, #41	; 0x29
  28:	0a0c      	tloadr	r2, [pc, #48]	; (5c <rf_set_ble_channel+0x5c>)
  2a:	4011      	tstorerb	r1, [r2, #0]
  2c:	a180      	tmovs	r1, #128	; 0x80
  2e:	0a0c      	tloadr	r2, [pc, #48]	; (60 <rf_set_ble_channel+0x60>)
  30:	4011      	tstorerb	r1, [r2, #0]
  32:	a144      	tmovs	r1, #68	; 0x44
  34:	0a0b      	tloadr	r2, [pc, #44]	; (64 <rf_set_ble_channel+0x64>)
  36:	4011      	tstorerb	r1, [r2, #0]
  38:	f65b      	tshftls	r3, r3, #25
  3a:	e618      	tasrs	r0, r3, #24
  3c:	a296      	tmovs	r2, #150	; 0x96
  3e:	f112      	tshftls	r2, r2, #4
  40:	e883      	tadds	r3, r0, r2
  42:	f419      	tshftls	r1, r3, #16
  44:	fc09      	tshftrs	r1, r1, #16
  46:	0a08      	tloadr	r2, [pc, #32]	; (68 <rf_set_ble_channel+0x68>)
  48:	2011      	tstorerh	r1, [r2, #0]
  4a:	0a08      	tloadr	r2, [pc, #32]	; (6c <rf_set_ble_channel+0x6c>)
  4c:	0353      	tmuls	r3, r2
  4e:	0a08      	tloadr	r2, [pc, #32]	; (70 <rf_set_ble_channel+0x70>)
  50:	e89b      	tadds	r3, r3, r2
  52:	0a08      	tloadr	r2, [pc, #32]	; (74 <rf_set_ble_channel+0x74>)
  54:	5013      	tstorer	r3, [r2, #0]
  56:	97ff 9ffe 	tjl	0 <rf_set_ble_channel>
			56: R_TC32_CALL	rf_set_tp_gain
  5a:	6d00      	tpop	{pc}
  5c:	01000f16 	tnandeq	r0, r6, lsl pc
  60:	01000428 	tnandeq	r0, r8, lsr #8
  64:	01000f02 	tnandeq	r0, r2, lsl #30
  68:	010004d6 	undefined instruction 0x010004d6
  6c:	0000e38e 	tandeq	lr, r0, lr, lsl #7
  70:	fffe3d49 	undefined instruction 0xfffe3d49
  74:	010004d0 	undefined instruction 0x010004d0

Disassembly of section .text.rf_set_tx_rx_off:

00000000 <rf_set_tx_rx_off>:
rf_set_tx_rx_off():
   0:	a229      	tmovs	r2, #41	; 0x29
   2:	0b04      	tloadr	r3, [pc, #16]	; (14 <rf_set_tx_rx_off+0x14>)
   4:	401a      	tstorerb	r2, [r3, #0]
   6:	a280      	tmovs	r2, #128	; 0x80
   8:	0b03      	tloadr	r3, [pc, #12]	; (18 <rf_set_tx_rx_off+0x18>)
   a:	401a      	tstorerb	r2, [r3, #0]
   c:	a244      	tmovs	r2, #68	; 0x44
   e:	0b03      	tloadr	r3, [pc, #12]	; (1c <rf_set_tx_rx_off+0x1c>)
  10:	401a      	tstorerb	r2, [r3, #0]
  12:	0770      	tjex	lr
  14:	01000f16 	tnandeq	r0, r6, lsl pc
  18:	01000428 	tnandeq	r0, r8, lsr #8
  1c:	01000f02 	tnandeq	r0, r2, lsl #30

Disassembly of section .text.rf_set_rxmode:

00000000 <rf_set_rxmode>:
rf_set_rxmode():
   0:	a281      	tmovs	r2, #129	; 0x81
   2:	0b03      	tloadr	r3, [pc, #12]	; (10 <rf_set_rxmode+0x10>)
   4:	401a      	tstorerb	r2, [r3, #0]
   6:	a264      	tmovs	r2, #100	; 0x64
   8:	0b02      	tloadr	r3, [pc, #8]	; (14 <rf_set_rxmode+0x14>)
   a:	401a      	tstorerb	r2, [r3, #0]
   c:	0770      	tjex	lr
   e:	46c0      	tnop			; (mov r8, r8)
  10:	01000428 	tnandeq	r0, r8, lsr #8
  14:	01000f02 	tnandeq	r0, r2, lsl #30

Disassembly of section .text.rf_set_rxmode_250k:

00000000 <rf_set_rxmode_250k>:
rf_set_rxmode_250k():
   0:	a2e1      	tmovs	r2, #225	; 0xe1
   2:	0b03      	tloadr	r3, [pc, #12]	; (10 <rf_set_rxmode_250k+0x10>)
   4:	401a      	tstorerb	r2, [r3, #0]
   6:	a264      	tmovs	r2, #100	; 0x64
   8:	0b02      	tloadr	r3, [pc, #8]	; (14 <rf_set_rxmode_250k+0x14>)
   a:	401a      	tstorerb	r2, [r3, #0]
   c:	0770      	tjex	lr
   e:	46c0      	tnop			; (mov r8, r8)
  10:	01000428 	tnandeq	r0, r8, lsr #8
  14:	01000f02 	tnandeq	r0, r2, lsl #30

Disassembly of section .text.rf_set_txmode:

00000000 <rf_set_txmode>:
rf_set_txmode():
   0:	a254      	tmovs	r2, #84	; 0x54
   2:	0b01      	tloadr	r3, [pc, #4]	; (8 <rf_set_txmode+0x8>)
   4:	401a      	tstorerb	r2, [r3, #0]
   6:	0770      	tjex	lr
   8:	01000f02 	tnandeq	r0, r2, lsl #30

Disassembly of section .text.rf_send_packet_from_rx:

00000000 <rf_send_packet_from_rx>:
rf_send_packet_from_rx():
   0:	a244      	tmovs	r2, #68	; 0x44
   2:	0b05      	tloadr	r3, [pc, #20]	; (18 <rf_send_packet_from_rx+0x18>)
   4:	401a      	tstorerb	r2, [r3, #0]
   6:	f400      	tshftls	r0, r0, #16
   8:	fc00      	tshftrs	r0, r0, #16
   a:	0b04      	tloadr	r3, [pc, #16]	; (1c <rf_send_packet_from_rx+0x1c>)
   c:	2018      	tstorerh	r0, [r3, #0]
   e:	0a04      	tloadr	r2, [pc, #16]	; (20 <rf_send_packet_from_rx+0x20>)
  10:	0b04      	tloadr	r3, [pc, #16]	; (24 <rf_send_packet_from_rx+0x24>)
  12:	201a      	tstorerh	r2, [r3, #0]
  14:	0770      	tjex	lr
  16:	46c0      	tnop			; (mov r8, r8)
  18:	01000f02 	tnandeq	r0, r2, lsl #30
  1c:	0100050c 	tnandeq	r0, ip, lsl #10
  20:	00003f81 	tandeq	r3, r0, r1, lsl #31
  24:	01000f00 	tnandeq	r0, r0, lsl #30

Disassembly of section .text.rf_send_single_packet:

00000000 <rf_send_single_packet>:
rf_send_single_packet():
   0:	6510      	tpush	{r4, lr}
   2:	ec04      	tadds	r4, r0, #0
   4:	a244      	tmovs	r2, #68	; 0x44
   6:	0b08      	tloadr	r3, [pc, #32]	; (28 <rf_send_single_packet+0x28>)
   8:	401a      	tstorerb	r2, [r3, #0]
   a:	a006      	tmovs	r0, #6
   c:	a100      	tmovs	r1, #0
   e:	97ff 9ffe 	tjl	0 <analog_write>
			e: R_TC32_CALL	analog_write
  12:	0b06      	tloadr	r3, [pc, #24]	; (2c <analog_write+0x2c>)
  14:	a280      	tmovs	r2, #128	; 0x80
  16:	401a      	tstorerb	r2, [r3, #0]
  18:	f424      	tshftls	r4, r4, #16
  1a:	fc24      	tshftrs	r4, r4, #16
  1c:	0a04      	tloadr	r2, [pc, #16]	; (30 <analog_write+0x30>)
  1e:	2014      	tstorerh	r4, [r2, #0]
  20:	0a04      	tloadr	r2, [pc, #16]	; (34 <analog_write+0x34>)
  22:	201a      	tstorerh	r2, [r3, #0]
  24:	6d10      	tpop	{r4, pc}
  26:	46c0      	tnop			; (mov r8, r8)
  28:	01000f02 	tnandeq	r0, r2, lsl #30
  2c:	01000f00 	tnandeq	r0, r0, lsl #30
  30:	0100050c 	tnandeq	r0, ip, lsl #10
  34:	00003f81 	tandeq	r3, r0, r1, lsl #31

Disassembly of section .text.rf_multi_receiving_init:

00000000 <rf_multi_receiving_init>:
rf_multi_receiving_init():
   0:	f600      	tshftls	r0, r0, #24
   2:	fe00      	tshftrs	r0, r0, #24
   4:	a230      	tmovs	r2, #48	; 0x30
   6:	0b04      	tloadr	r3, [pc, #16]	; (18 <analog_write+0x18>)
   8:	401a      	tstorerb	r2, [r3, #0]
   a:	a2e0      	tmovs	r2, #224	; 0xe0
   c:	b312      	tadds	r3, #18
   e:	401a      	tstorerb	r2, [r3, #0]
  10:	0b02      	tloadr	r3, [pc, #8]	; (1c <analog_write+0x1c>)
  12:	4018      	tstorerb	r0, [r3, #0]
  14:	0770      	tjex	lr
  16:	46c0      	tnop			; (mov r8, r8)
  18:	01000f03 	tnandeq	r0, r3, lsl #30
  1c:	01000407 	tnandeq	r0, r7, lsl #8

Disassembly of section .text.rf_receiving_pipe_enble:

00000000 <rf_receiving_pipe_enble>:
rf_receiving_pipe_enble():
   0:	f600      	tshftls	r0, r0, #24
   2:	fe00      	tshftrs	r0, r0, #24
   4:	0b01      	tloadr	r3, [pc, #4]	; (c <analog_write+0xc>)
   6:	4018      	tstorerb	r0, [r3, #0]
   8:	0770      	tjex	lr
   a:	46c0      	tnop			; (mov r8, r8)
   c:	01000407 	tnandeq	r0, r7, lsl #8

Disassembly of section .text.rf_multi_receiving_start:

00000000 <rf_multi_receiving_start>:
rf_multi_receiving_start():
   0:	6510      	tpush	{r4, lr}
   2:	f600      	tshftls	r0, r0, #24
   4:	e600      	tasrs	r0, r0, #24
   6:	f409      	tshftls	r1, r1, #16
   8:	fc09      	tshftrs	r1, r1, #16
   a:	0c05      	tloadr	r4, [pc, #20]	; (20 <rf_multi_receiving_start+0x20>)
   c:	a380      	tmovs	r3, #128	; 0x80
   e:	4023      	tstorerb	r3, [r4, #0]
  10:	a244      	tmovs	r2, #68	; 0x44
  12:	0b04      	tloadr	r3, [pc, #16]	; (24 <rf_multi_receiving_start+0x24>)
  14:	401a      	tstorerb	r2, [r3, #0]
  16:	97ff 9ffe 	tjl	24 <rf_multi_receiving_start+0x24>
			16: R_TC32_CALL	rf_set_channel
  1a:	0b03      	tloadr	r3, [pc, #12]	; (4c <rf_set_channel+0x28>)
  1c:	2023      	tstorerh	r3, [r4, #0]
  1e:	6d10      	tpop	{r4, pc}
  20:	01000f00 	tnandeq	r0, r0, lsl #30
  24:	01000f02 	tnandeq	r0, r2, lsl #30
  28:	00003f84 	tandeq	r3, r0, r4, lsl #31

Disassembly of section .text.rf_multi_receiving_send_packet:

00000000 <rf_multi_receiving_send_packet>:
rf_multi_receiving_send_packet():
   0:	a200      	tmovs	r2, #0
   2:	0b08      	tloadr	r3, [pc, #32]	; (48 <rf_set_channel+0x24>)
   4:	401a      	tstorerb	r2, [r3, #0]
   6:	f400      	tshftls	r0, r0, #16
   8:	fc00      	tshftrs	r0, r0, #16
   a:	0b07      	tloadr	r3, [pc, #28]	; (4c <rf_set_channel+0x28>)
   c:	2018      	tstorerh	r0, [r3, #0]
   e:	a201      	tmovs	r2, #1
  10:	0b06      	tloadr	r3, [pc, #24]	; (50 <rf_set_channel+0x2c>)
  12:	201a      	tstorerh	r2, [r3, #0]
  14:	0a06      	tloadr	r2, [pc, #24]	; (54 <rf_set_channel+0x30>)
  16:	bb0a      	tsubs	r3, #10
  18:	201a      	tstorerh	r2, [r3, #0]
  1a:	a208      	tmovs	r2, #8
  1c:	0b05      	tloadr	r3, [pc, #20]	; (58 <rf_set_channel+0x34>)
  1e:	401a      	tstorerb	r2, [r3, #0]
  20:	0770      	tjex	lr
  22:	46c0      	tnop			; (mov r8, r8)
  24:	01000f14 	tnandeq	r0, r4, lsl pc
  28:	0100050c 	tnandeq	r0, ip, lsl #10
  2c:	01000f0a 	tnandeq	r0, sl, lsl #30
  30:	00003f83 	tandeq	r3, r0, r3, lsl #31
  34:	01000524 	tnandeq	r0, r4, lsr #10

Disassembly of section .text.rf_start_stx:

00000000 <rf_start_stx>:
rf_start_stx():
   0:	0b08      	tloadr	r3, [pc, #32]	; (48 <rf_set_channel+0x24>)
   2:	5019      	tstorer	r1, [r3, #0]
   4:	bb02      	tsubs	r3, #2
   6:	4819      	tloadrb	r1, [r3, #0]
   8:	a204      	tmovs	r2, #4
   a:	030a      	tors	r2, r1
   c:	f612      	tshftls	r2, r2, #24
   e:	fe12      	tshftrs	r2, r2, #24
  10:	401a      	tstorerb	r2, [r3, #0]
  12:	a285      	tmovs	r2, #133	; 0x85
  14:	bb16      	tsubs	r3, #22
  16:	401a      	tstorerb	r2, [r3, #0]
  18:	f400      	tshftls	r0, r0, #16
  1a:	fc00      	tshftrs	r0, r0, #16
  1c:	0b02      	tloadr	r3, [pc, #8]	; (4c <rf_set_channel+0x28>)
  1e:	2018      	tstorerh	r0, [r3, #0]
  20:	0770      	tjex	lr
  22:	46c0      	tnop			; (mov r8, r8)
  24:	01000f18 	tnandeq	r0, r8, lsl pc
  28:	0100050c 	tnandeq	r0, ip, lsl #10

Disassembly of section .text.rf_start_stx2rx:

00000000 <rf_start_stx2rx>:
rf_start_stx2rx():
   0:	0b08      	tloadr	r3, [pc, #32]	; (48 <rf_set_channel+0x24>)
   2:	5019      	tstorer	r1, [r3, #0]
   4:	bb02      	tsubs	r3, #2
   6:	4819      	tloadrb	r1, [r3, #0]
   8:	a204      	tmovs	r2, #4
   a:	030a      	tors	r2, r1
   c:	f612      	tshftls	r2, r2, #24
   e:	fe12      	tshftrs	r2, r2, #24
  10:	401a      	tstorerb	r2, [r3, #0]
  12:	a287      	tmovs	r2, #135	; 0x87
  14:	bb16      	tsubs	r3, #22
  16:	401a      	tstorerb	r2, [r3, #0]
  18:	f400      	tshftls	r0, r0, #16
  1a:	fc00      	tshftrs	r0, r0, #16
  1c:	0b02      	tloadr	r3, [pc, #8]	; (4c <rf_set_channel+0x28>)
  1e:	2018      	tstorerh	r0, [r3, #0]
  20:	0770      	tjex	lr
  22:	46c0      	tnop			; (mov r8, r8)
  24:	01000f18 	tnandeq	r0, r8, lsl pc
  28:	0100050c 	tnandeq	r0, ip, lsl #10

Disassembly of section .text.rf_start_btx:

00000000 <rf_start_btx>:
rf_start_btx():
   0:	0b08      	tloadr	r3, [pc, #32]	; (48 <rf_set_channel+0x24>)
   2:	5019      	tstorer	r1, [r3, #0]
   4:	bb02      	tsubs	r3, #2
   6:	4819      	tloadrb	r1, [r3, #0]
   8:	a204      	tmovs	r2, #4
   a:	030a      	tors	r2, r1
   c:	f612      	tshftls	r2, r2, #24
   e:	fe12      	tshftrs	r2, r2, #24
  10:	401a      	tstorerb	r2, [r3, #0]
  12:	a281      	tmovs	r2, #129	; 0x81
  14:	bb16      	tsubs	r3, #22
  16:	401a      	tstorerb	r2, [r3, #0]
  18:	f400      	tshftls	r0, r0, #16
  1a:	fc00      	tshftrs	r0, r0, #16
  1c:	0b02      	tloadr	r3, [pc, #8]	; (4c <rf_set_channel+0x28>)
  1e:	2018      	tstorerh	r0, [r3, #0]
  20:	0770      	tjex	lr
  22:	46c0      	tnop			; (mov r8, r8)
  24:	01000f18 	tnandeq	r0, r8, lsl pc
  28:	0100050c 	tnandeq	r0, ip, lsl #10

Disassembly of section .text.rf_start_srx2tx:

00000000 <rf_start_srx2tx>:
rf_start_srx2tx():
   0:	0a09      	tloadr	r2, [pc, #36]	; (4c <rf_set_channel+0x28>)
   2:	0b0a      	tloadr	r3, [pc, #40]	; (50 <rf_set_channel+0x2c>)
   4:	501a      	tstorer	r2, [r3, #0]
   6:	bb10      	tsubs	r3, #16
   8:	5019      	tstorer	r1, [r3, #0]
   a:	bb02      	tsubs	r3, #2
   c:	4819      	tloadrb	r1, [r3, #0]
   e:	a204      	tmovs	r2, #4
  10:	030a      	tors	r2, r1
  12:	f612      	tshftls	r2, r2, #24
  14:	fe12      	tshftrs	r2, r2, #24
  16:	401a      	tstorerb	r2, [r3, #0]
  18:	0a05      	tloadr	r2, [pc, #20]	; (54 <rf_set_channel+0x30>)
  1a:	bb16      	tsubs	r3, #22
  1c:	201a      	tstorerh	r2, [r3, #0]
  1e:	f400      	tshftls	r0, r0, #16
  20:	fc00      	tshftrs	r0, r0, #16
  22:	0b04      	tloadr	r3, [pc, #16]	; (58 <rf_set_channel+0x34>)
  24:	2018      	tstorerh	r0, [r3, #0]
  26:	0770      	tjex	lr
  28:	0fffffff 	tserveq	0x00ffffff
  2c:	01000f28 	tnandeq	r0, r8, lsr #30
  30:	00003f88 	tandeq	r3, r0, r8, lsl #31
  34:	0100050c 	tnandeq	r0, ip, lsl #10

Disassembly of section .text.rf_start_brx:

00000000 <rf_start_brx>:
rf_start_brx():
   0:	0a09      	tloadr	r2, [pc, #36]	; (4c <rf_set_channel+0x28>)
   2:	0b0a      	tloadr	r3, [pc, #40]	; (50 <rf_set_channel+0x2c>)
   4:	501a      	tstorer	r2, [r3, #0]
   6:	bb10      	tsubs	r3, #16
   8:	5019      	tstorer	r1, [r3, #0]
   a:	bb02      	tsubs	r3, #2
   c:	4819      	tloadrb	r1, [r3, #0]
   e:	a204      	tmovs	r2, #4
  10:	030a      	tors	r2, r1
  12:	f612      	tshftls	r2, r2, #24
  14:	fe12      	tshftrs	r2, r2, #24
  16:	401a      	tstorerb	r2, [r3, #0]
  18:	a282      	tmovs	r2, #130	; 0x82
  1a:	bb16      	tsubs	r3, #22
  1c:	401a      	tstorerb	r2, [r3, #0]
  1e:	f400      	tshftls	r0, r0, #16
  20:	fc00      	tshftrs	r0, r0, #16
  22:	0b03      	tloadr	r3, [pc, #12]	; (54 <rf_set_channel+0x30>)
  24:	2018      	tstorerh	r0, [r3, #0]
  26:	0770      	tjex	lr
  28:	0fffffff 	tserveq	0x00ffffff
  2c:	01000f28 	tnandeq	r0, r8, lsr #30
  30:	0100050c 	tnandeq	r0, ip, lsl #10

Disassembly of section .text.rf_set_ack_packet:

00000000 <rf_set_ack_packet>:
rf_set_ack_packet():
   0:	f400      	tshftls	r0, r0, #16
   2:	fc00      	tshftrs	r0, r0, #16
   4:	0b01      	tloadr	r3, [pc, #4]	; (30 <rf_set_channel+0xc>)
   6:	2018      	tstorerh	r0, [r3, #0]
   8:	0770      	tjex	lr
   a:	46c0      	tnop			; (mov r8, r8)
   c:	0100050c 	tnandeq	r0, ip, lsl #10

Disassembly of section .text.SetRxMode:

00000000 <SetRxMode>:
SetRxMode():
   0:	6500      	tpush	{lr}
   2:	f600      	tshftls	r0, r0, #24
   4:	e600      	tasrs	r0, r0, #24
   6:	f409      	tshftls	r1, r1, #16
   8:	fc09      	tshftrs	r1, r1, #16
   a:	97ff 9ffe 	tjl	24 <rf_set_channel>
			a: R_TC32_CALL	rf_set_channel
   e:	97ff 9ffe 	tjl	0 <SetRxMode>
			e: R_TC32_CALL	rf_set_rxmode
  12:	6d00      	tpop	{pc}

Disassembly of section .text.SetTxMode:

00000000 <SetTxMode>:
SetTxMode():
   0:	6500      	tpush	{lr}
   2:	f600      	tshftls	r0, r0, #24
   4:	e600      	tasrs	r0, r0, #24
   6:	f409      	tshftls	r1, r1, #16
   8:	fc09      	tshftrs	r1, r1, #16
   a:	97ff 9ffe 	tjl	24 <rf_set_channel>
			a: R_TC32_CALL	rf_set_channel
   e:	a254      	tmovs	r2, #84	; 0x54
  10:	0b01      	tloadr	r3, [pc, #4]	; (3c <rf_set_channel+0x18>)
  12:	401a      	tstorerb	r2, [r3, #0]
  14:	6d00      	tpop	{pc}
  16:	46c0      	tnop			; (mov r8, r8)
  18:	01000f02 	tnandeq	r0, r2, lsl #30

Disassembly of section .text.TxPkt:

00000000 <TxPkt>:
TxPkt():
   0:	f400      	tshftls	r0, r0, #16
   2:	fc00      	tshftrs	r0, r0, #16
   4:	0b02      	tloadr	r3, [pc, #8]	; (34 <rf_set_channel+0x10>)
   6:	2018      	tstorerh	r0, [r3, #0]
   8:	a208      	tmovs	r2, #8
   a:	b318      	tadds	r3, #24
   c:	401a      	tstorerb	r2, [r3, #0]
   e:	0770      	tjex	lr
  10:	0100050c 	tnandeq	r0, ip, lsl #10

Disassembly of section .data.rf_tp_gain:

00000000 <rf_tp_gain>:
   0:	0000000c 	tandeq	r0, r0, ip

Disassembly of section .data.rfhw_tx_power:

00000000 <rfhw_tx_power>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .bss.rf_tx_mode:

00000000 <rf_tx_mode>:
	...

Disassembly of section .data.rf_tp_base:

00000000 <rf_tp_base>:
   0:	0000001f 	tandeq	r0, r0, pc, lsl r0

Disassembly of section .rodata.tbl_agc:

00000000 <tbl_agc>:
   0:	30333231 	txorscc	r3, r3, r1, lsr r2
   4:	182c3c38 	tstormmdane	ip!, {r3, r4, r5, sl, fp, ip, sp}
   8:	000c0c1c 	tandeq	r0, ip, ip, lsl ip
   c:	00000000 	tandeq	r0, r0, r0
  10:	1b150f0a 	tjlne	543c64 <rf_send_packet+0x543bc4>
  14:	322e2721 	txorcc	r2, lr, #8650752	; 0x840000
  18:	00003e38 	tandeq	r3, r0, r8, lsr lr

Disassembly of section .rodata.rf_chn:

00000000 <rf_chn>:
   0:	110d0905 	tnandne	sp, r5, lsl #18
   4:	231e1a16 	tnandcs	lr, #90112	; 0x16000
   8:	37322d28 	tloadrcc	r2, [r2, -r8, lsr #26]!
   c:	4c46413c 	undefined instruction 0x4c46413c

Disassembly of section .rodata.tbl_rf_ini_12M:

00000000 <tbl_rf_ini_12M>:
   0:	c8b10099 	tloadmgt	r1!, {r0, r3, r4, r7}
   4:	c8000082 	tstormmdagt	r0, {r1, r7}
   8:	c882009e 	tstoremgt	r2, {r1, r2, r3, r4, r7}

Disassembly of section .rodata.tbl_rf_2m:

00000000 <tbl_rf_2m>:
   0:	c81000a3 	tloadmdagt	r0, {r0, r1, r5, r7}
   4:	c82e00aa 	tstormmdagt	lr!, {r1, r3, r5, r7}
   8:	c830008f 	tloadmdagt	r0!, {r0, r1, r2, r3, r7}
   c:	c30f0400 	tnandgt	pc, #0
  10:	c3000401 	tnandgt	r0, #16777216	; 0x1000000
  14:	c32c0402 	teqgt	ip, #33554432	; 0x2000000
  18:	c3ca0404 	tbclrgt	r0, sl, #67108864	; 0x4000000
  1c:	c3050405 	tnandgt	r5, #83886080	; 0x5000000
  20:	c3260420 	teqgt	r6, #536870912	; 0x20000000
  24:	c3040421 	tnandgt	r4, #553648128	; 0x21000000
  28:	c3000422 	tnandgt	r0, #570425344	; 0x22000000
  2c:	c3120424 	tnandgt	r2, #603979776	; 0x24000000
  30:	c3f1042b 	tmovnsgt	r0, #721420288	; 0x2b000000
  34:	c330042c 	teqgt	r0, #738197504	; 0x2c000000
  38:	c3120430 	tnandgt	r2, #805306368	; 0x30000000
  3c:	c371043d 	tcmpngt	r1, #1023410176	; 0x3d000000
  40:	c3070464 	tnandgt	r7, #1677721600	; 0x64000000
  44:	c3360f03 	teqgt	r6, #12

Disassembly of section .rodata.tbl_rf_250k:

00000000 <tbl_rf_250k>:
   0:	c8ad009e 	tstormmiagt	sp!, {r1, r2, r3, r4, r7}
   4:	c81000a3 	tloadmdagt	r0, {r0, r1, r5, r7}
   8:	c82a00aa 	tstormmdagt	sl!, {r1, r3, r5, r7}
   c:	c3030400 	tnandgt	r3, #0
  10:	c3400401 	tcmpgt	r0, #16777216	; 0x1000000
  14:	c3260402 	teqgt	r6, #33554432	; 0x2000000
  18:	c3c00404 	tbclrgt	r0, r0, #67108864	; 0x4000000
  1c:	c3040405 	tnandgt	r4, #83886080	; 0x5000000
  20:	c3c90408 	tbclrgt	r0, r9, #134217728	; 0x8000000
  24:	c38a0409 	torgt	r0, sl, #150994944	; 0x9000000
  28:	c311040a 	tnandgt	r1, #167772160	; 0xa000000
  2c:	c3f8040b 	tmovnsgt	r0, #184549376	; 0xb000000
  30:	c3900420 	torsgt	r0, r0, #536870912	; 0x20000000
  34:	c3000421 	tnandgt	r0, #553648128	; 0x21000000
  38:	c31a0422 	tnandgt	sl, #570425344	; 0x22000000
  3c:	c3520424 	tcmpgt	r2, #603979776	; 0x24000000
  40:	c3f5042b 	tmovnsgt	r0, #721420288	; 0x2b000000
  44:	c380042c 	torgt	r0, r0, #738197504	; 0x2c000000
  48:	c3170430 	tnandgt	r7, #805306368	; 0x30000000
  4c:	c3fd043d 	tmovnsgt	r0, #1023410176	; 0x3d000000
  50:	c3060464 	tnandgt	r6, #1677721600	; 0x64000000
  54:	c31e0f03 	tnandgt	lr, #12

Disassembly of section .bss.rf_external_crystal_type:

00000000 <rf_external_crystal_type>:
	...

Disassembly of section .rodata.tbl_rf_ini:

00000000 <tbl_rf_ini>:
   0:	c8610080 	tstormmdagt	r1!, {r7}^
   4:	c8000006 	tstormmdagt	r0, {r1, r2}
   8:	c8d80081 	tloadmgt	r8, {r0, r7}^
   c:	c8100083 	tloadmdagt	r0, {r0, r1, r7}
  10:	c8200084 	tstormmdagt	r0!, {r2, r7}
  14:	c838008f 	tloadmdagt	r8!, {r0, r1, r2, r3, r7}
  18:	c862008d 	tstormmdagt	r2!, {r0, r2, r3, r7}^
  1c:	c32c0402 	teqgt	ip, #33554432	; 0x2000000
  20:	c8500093 	tloadmdagt	r0, {r0, r1, r4, r7}^
  24:	c82600a0 	tstormmdagt	r6!, {r5, r7}
  28:	c82c00a2 	tstormmdagt	ip!, {r1, r5, r7}
  2c:	c81000a3 	tloadmdagt	r0, {r0, r1, r5, r7}
  30:	c8aa00ac 	tstormmiagt	sl!, {r2, r3, r5, r7}
  34:	c82e00aa 	tstormmdagt	lr!, {r1, r3, r5, r7}
  38:	c301074f 	tnandgt	r1, #20709376	; 0x13c0000
  3c:	c3500f04 	tcmpgt	r0, #16
  40:	c3000f06 	tnandgt	r0, #24
  44:	c3500f0c 	tcmpgt	r0, #48	; 0x30
  48:	c3000f10 	tnandgt	r0, #64	; 0x40
  4c:	c3360f03 	teqgt	r6, #12
  50:	c30f0400 	tnandgt	pc, #0
  54:	c3ca0404 	tbclrgt	r0, sl, #67108864	; 0x4000000
  58:	c3050405 	tnandgt	r5, #83886080	; 0x5000000
  5c:	c3710408 	tcmpngt	r1, #134217728	; 0x8000000
  60:	c3760409 	tcmpngt	r6, #150994944	; 0x9000000
  64:	c351040a 	tcmpgt	r1, #167772160	; 0xa000000
  68:	c339040b 	teqgt	r9, #184549376	; 0xb000000
  6c:	c3260420 	teqgt	r6, #536870912	; 0x20000000
  70:	c3040421 	tnandgt	r4, #553648128	; 0x21000000
  74:	c3000422 	tnandgt	r0, #570425344	; 0x22000000
  78:	c3120424 	tnandgt	r2, #603979776	; 0x24000000
  7c:	c3f1042b 	tmovnsgt	r0, #721420288	; 0x2b000000
  80:	c3120430 	tnandgt	r2, #805306368	; 0x30000000
  84:	c3720439 	tcmpngt	r2, #956301312	; 0x39000000
  88:	c371043d 	tcmpngt	r1, #1023410176	; 0x3d000000
  8c:	c3fc043b 	tmovnsgt	r0, #989855744	; 0x3b000000
  90:	c3070464 	tnandgt	r7, #1677721600	; 0x64000000
  94:	c30404cd 	tnandgt	r4, #-855638016	; 0xcd000000
  98:	c38804ca 	torgt	r0, r8, #-905969664	; 0xca000000
  9c:	c30404cb 	tnandgt	r4, #-889192448	; 0xcb000000
  a0:	c333042d 	teqgt	r3, #754974720	; 0x2d000000
  a4:	c3000433 	tnandgt	r0, #855638016	; 0x33000000
  a8:	c3010434 	tnandgt	r1, #872415232	; 0x34000000
  ac:	c377043a 	tcmpngt	r7, #973078528	; 0x3a000000
  b0:	c3c9043e 	tbclrgt	r0, r9, #1040187392	; 0x3e000000
  b4:	c30604cd 	tnandgt	r6, #-855638016	; 0xcd000000
  b8:	c38104c0 	torgt	r0, r1, #-1073741824	; 0xc0000000
  bc:	c86a008e 	tstormmdagt	sl!, {r1, r2, r3, r7}^

Disassembly of section .rodata.tbl_rf_power:

00000000 <tbl_rf_power>:
   0:	67677c25 	tstorerbvs	r7, [r7, -r5, lsr #24]!
   4:	67677c0a 	tstorerbvs	r7, [r7, -sl, lsl #24]!
   8:	61437406 	tcmpvs	r3, r6, lsl #8
   c:	61c26406 	tbclrvs	r6, r2, r6, lsl #8
  10:	61c16406 	tbclrvs	r6, r1, r6, lsl #8
  14:	67677c05 	tstorerbvs	r7, [r7, -r5, lsl #24]!
  18:	67677c03 	tstorerbvs	r7, [r7, -r3, lsl #24]!
  1c:	67677c02 	tstorerbvs	r7, [r7, -r2, lsl #24]!
  20:	67677c01 	tstorerbvs	r7, [r7, -r1, lsl #24]!
  24:	67677c00 	tstorerbvs	r7, [r7, -r0, lsl #24]!
  28:	61436400 	tcmpvs	r3, r0, lsl #8
  2c:	61cb6400 	tbclrvs	r6, fp, r0, lsl #8

Disassembly of section .rodata.tbl_tp_close:

00000000 <tbl_tp_close>:
   0:	c3400e0c 	tcmpgt	r0, #192	; 0xc0
   4:	c3000065 	tnandgt	r0, #101	; 0x65

Disassembly of section .rodata.tbl_tp_ini:

00000000 <tbl_tp_ini>:
   0:	c3400e0c 	tcmpgt	r0, #192	; 0xc0
   4:	c3010065 	tnandgt	r1, #101	; 0x65

Disassembly of section .rodata.tbl_rf_1m_ini:

00000000 <tbl_rf_1m_ini>:
   0:	c8000006 	tstormmdagt	r0, {r1, r2}
   4:	c862008d 	tstormmdagt	r2!, {r0, r2, r3, r7}^
   8:	c8500093 	tloadmdagt	r0, {r0, r1, r4, r7}^
   c:	c82600a0 	tstormmdagt	r6!, {r5, r7}
  10:	c82c00a2 	tstormmdagt	ip!, {r1, r5, r7}
  14:	c81000a3 	tloadmdagt	r0, {r0, r1, r5, r7}
  18:	c8a700ac 	tstormmiagt	r7!, {r2, r3, r5, r7}
  1c:	c301074f 	tnandgt	r1, #20709376	; 0x13c0000
  20:	c3500f04 	tcmpgt	r0, #16
  24:	c3000f06 	tnandgt	r0, #24
  28:	c3500f0c 	tcmpgt	r0, #48	; 0x30
  2c:	c3000f10 	tnandgt	r0, #64	; 0x40
  30:	c3120430 	tnandgt	r2, #805306368	; 0x30000000
  34:	c3720439 	tcmpngt	r2, #956301312	; 0x39000000
  38:	c371043d 	tcmpngt	r1, #1023410176	; 0x3d000000
  3c:	c3fc043b 	tmovnsgt	r0, #989855744	; 0x3b000000
  40:	c38804ca 	torgt	r0, r8, #-905969664	; 0xca000000
  44:	c30404cb 	tnandgt	r4, #-889192448	; 0xcb000000
  48:	c333042d 	teqgt	r3, #754974720	; 0x2d000000
  4c:	c3000433 	tnandgt	r0, #855638016	; 0x33000000
  50:	c3010434 	tnandgt	r1, #872415232	; 0x34000000
  54:	c377043a 	tcmpngt	r7, #973078528	; 0x3a000000
  58:	c3c9043e 	tbclrgt	r0, r9, #1040187392	; 0x3e000000
  5c:	c30604cd 	tnandgt	r6, #-855638016	; 0xcd000000
  60:	c38104c0 	torgt	r0, r1, #-1073741824	; 0xc0000000
  64:	c86a008e 	tstormmdagt	sl!, {r1, r2, r3, r7}^
  68:	c8b10099 	tloadmgt	r1!, {r0, r3, r4, r7}
  6c:	c8000082 	tstormmdagt	r0, {r1, r7}
  70:	c856009e 	tloadmdagt	r6, {r1, r2, r3, r4, r7}^
  74:	c8f000a3 	tloadmgt	r0!, {r0, r1, r5, r7}^
  78:	c82600aa 	tstormmdagt	r6!, {r1, r3, r5, r7}
  7c:	c838008f 	tloadmdagt	r8!, {r0, r1, r2, r3, r7}
  80:	c30d0400 	tnandgt	sp, #0
  84:	c3000401 	tnandgt	r0, #16777216	; 0x1000000
  88:	c3250402 	teqgt	r5, #33554432	; 0x2000000
  8c:	c3f50404 	tmovnsgt	r0, #67108864	; 0x4000000
  90:	c3040405 	tnandgt	r4, #83886080	; 0x5000000
  94:	c31d0420 	tnandgt	sp, #536870912	; 0x20000000
  98:	c3040421 	tnandgt	r4, #553648128	; 0x21000000
  9c:	c3000422 	tnandgt	r0, #570425344	; 0x22000000
  a0:	c3120424 	tnandgt	r2, #603979776	; 0x24000000
  a4:	c3f1042b 	tmovnsgt	r0, #721420288	; 0x2b000000
  a8:	c330042c 	teqgt	r0, #738197504	; 0x2c000000
  ac:	c3070464 	tnandgt	r7, #1677721600	; 0x64000000
  b0:	c31e0f03 	tnandgt	lr, #12
  b4:	c30c0489 	tnandgt	ip, #-1996488704	; 0x89000000
  b8:	c33e0499 	teqgt	lr, #-1728053248	; 0x99000000

Disassembly of section .rodata.tbl_rf_1m:

00000000 <tbl_rf_1m>:
   0:	c8f000a3 	tloadmgt	r0!, {r0, r1, r5, r7}^
   4:	c82600aa 	tstormmdagt	r6!, {r1, r3, r5, r7}
   8:	c838008f 	tloadmdagt	r8!, {r0, r1, r2, r3, r7}
   c:	c30d0400 	tnandgt	sp, #0
  10:	c3000401 	tnandgt	r0, #16777216	; 0x1000000
  14:	c3240402 	teqgt	r4, #33554432	; 0x2000000
  18:	c3f50404 	tmovnsgt	r0, #67108864	; 0x4000000
  1c:	c3040405 	tnandgt	r4, #83886080	; 0x5000000
  20:	c31f0420 	tnandgt	pc, #536870912	; 0x20000000
  24:	c3040421 	tnandgt	r4, #553648128	; 0x21000000
  28:	c3000422 	tnandgt	r0, #570425344	; 0x22000000
  2c:	c3120424 	tnandgt	r2, #603979776	; 0x24000000
  30:	c3f1042b 	tmovnsgt	r0, #721420288	; 0x2b000000
  34:	c330042c 	teqgt	r0, #738197504	; 0x2c000000
  38:	c3070464 	tnandgt	r7, #1677721600	; 0x64000000
  3c:	c31e0f03 	tnandgt	lr, #12

Disassembly of section .rodata.tbl_rf_ini_16M:

00000000 <tbl_rf_ini_16M>:
   0:	c36004eb 	tcmpngt	r0, #-352321536	; 0xeb000000
   4:	c8310099 	tloadmdagt	r1!, {r0, r3, r4, r7}
   8:	c8140082 	tloadmdagt	r4, {r1, r7}

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

ble_ll_smp_master.o:     file format elf32-littletc32
rw-rw-rw- 0/0   7944 Jan 30 00:17 2019 ble_ll_smp_master.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.master_msmp_enc 00000018  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.blt_msmp_pair_busy 0000001c  00000000  00000000  0000004c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.push_pkt_encm 00000058  00000000  00000000  00000068  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.push_pkt_smp_master 000000ec  00000000  00000000  000000c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.master_msmp_send_info 0000003c  00000000  00000000  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.msmp_set_address 0000005c  00000000  00000000  000001e8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.master_msmp_init 0000002c  00000000  00000000  00000244  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.l2cap_msmp_master_handler 00000148  00000000  00000000  00000270  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.master_btx_rx 000000d8  00000000  00000000  000003b8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text.master_smp_func_init 0000002c  00000000  00000000  00000490  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .bss.msmp_key 00000010  00000000  00000000  000004bc  2**2
                  ALLOC
 14 .data.msmp_randm 00000010  00000000  00000000  000004bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss.msmp_st  00000001  00000000  00000000  000004cc  2**0
                  ALLOC
 16 .bss.msmp_p1  00000010  00000000  00000000  000004cc  2**2
                  ALLOC
 17 .bss.msmp_rands 00000010  00000000  00000000  000004cc  2**2
                  ALLOC
 18 .data.pkt_smp_master 00000020  00000000  00000000  000004cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .bss.ll_menc_st 00000004  00000000  00000000  000004ec  2**2
                  ALLOC
 20 .data.msmp_rand 00000010  00000000  00000000  000004ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .bss.msmp_confirm 00000010  00000000  00000000  000004fc  2**2
                  ALLOC
 22 .bss.msmp_bonded 00000001  00000000  00000000  000004fc  2**0
                  ALLOC
 23 .bss.msmp_ediv 00000002  00000000  00000000  000004fc  2**1
                  ALLOC
 24 .data.menc_ivm 00000004  00000000  00000000  000004fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss.msmp_pair_busy 00000001  00000000  00000000  00000500  2**0
                  ALLOC
 26 .data.menc_ivs 00000004  00000000  00000000  00000500  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 27 .data.msmp_preq 00000008  00000000  00000000  00000504  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 28 .data.menc_skdm 00000008  00000000  00000000  0000050c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 29 .bss.msmp_p2  00000010  00000000  00000000  00000514  2**2
                  ALLOC
 30 .bss.msmp_pres 00000008  00000000  00000000  00000514  2**2
                  ALLOC
 31 .data.menc_skds 00000008  00000000  00000000  00000514  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 32 .bss.menc_ltk 00000010  00000000  00000000  0000051c  2**2
                  ALLOC
 33 .bss.ll_menc_en 00000004  00000000  00000000  0000051c  2**2
                  ALLOC
 34 .bss.blt_msmp_paring_req_recvd 00000001  00000000  00000000  0000051c  2**0
                  ALLOC
 35 .bss.msmp_sk  00000010  00000000  00000000  0000051c  2**2
                  ALLOC
 36 .data.msmp_adv_pkt 00000014  00000000  00000000  0000051c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 37 .data.msmp_ltk 00000010  00000000  00000000  00000530  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 38 .comment      0000001b  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY
 39 .TC32.attributes 00000010  00000000  00000000  0000055b  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ble_ll_smp_master.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.master_msmp_enc	00000000 .text.master_msmp_enc
00000000 l    d  .text.blt_msmp_pair_busy	00000000 .text.blt_msmp_pair_busy
00000000 l    d  .text.push_pkt_encm	00000000 .text.push_pkt_encm
00000000 l    d  .text.push_pkt_smp_master	00000000 .text.push_pkt_smp_master
00000000 l    d  .text.master_msmp_send_info	00000000 .text.master_msmp_send_info
00000000 l    d  .text.msmp_set_address	00000000 .text.msmp_set_address
00000000 l    d  .text.master_msmp_init	00000000 .text.master_msmp_init
00000000 l    d  .text.l2cap_msmp_master_handler	00000000 .text.l2cap_msmp_master_handler
00000000 l    d  .text.master_btx_rx	00000000 .text.master_btx_rx
00000000 l    d  .text.master_smp_func_init	00000000 .text.master_smp_func_init
00000000 l    d  .bss.msmp_key	00000000 .bss.msmp_key
00000000 l    d  .data.msmp_randm	00000000 .data.msmp_randm
00000000 l    d  .bss.msmp_st	00000000 .bss.msmp_st
00000000 l    d  .bss.msmp_p1	00000000 .bss.msmp_p1
00000000 l    d  .bss.msmp_rands	00000000 .bss.msmp_rands
00000000 l    d  .data.pkt_smp_master	00000000 .data.pkt_smp_master
00000000 l    d  .bss.ll_menc_st	00000000 .bss.ll_menc_st
00000000 l    d  .data.msmp_rand	00000000 .data.msmp_rand
00000000 l    d  .bss.msmp_confirm	00000000 .bss.msmp_confirm
00000000 l    d  .bss.msmp_bonded	00000000 .bss.msmp_bonded
00000000 l    d  .bss.msmp_ediv	00000000 .bss.msmp_ediv
00000000 l    d  .data.menc_ivm	00000000 .data.menc_ivm
00000000 l    d  .bss.msmp_pair_busy	00000000 .bss.msmp_pair_busy
00000000 l    d  .data.menc_ivs	00000000 .data.menc_ivs
00000000 l    d  .data.msmp_preq	00000000 .data.msmp_preq
00000000 l    d  .data.menc_skdm	00000000 .data.menc_skdm
00000000 l    d  .bss.msmp_p2	00000000 .bss.msmp_p2
00000000 l    d  .bss.msmp_pres	00000000 .bss.msmp_pres
00000000 l    d  .data.menc_skds	00000000 .data.menc_skds
00000000 l    d  .bss.menc_ltk	00000000 .bss.menc_ltk
00000000 l    d  .bss.ll_menc_en	00000000 .bss.ll_menc_en
00000000 l    d  .bss.blt_msmp_paring_req_recvd	00000000 .bss.blt_msmp_paring_req_recvd
00000000 l    d  .bss.msmp_sk	00000000 .bss.msmp_sk
00000000 l    d  .data.msmp_adv_pkt	00000000 .data.msmp_adv_pkt
00000000 l    d  .data.msmp_ltk	00000000 .data.msmp_ltk
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 g     F .text.master_msmp_enc	00000018 master_msmp_enc
00000000         *UND*	00000000 aes_ll_ccm_encryption
00000000 g     F .text.blt_msmp_pair_busy	0000001c blt_msmp_pair_busy
00000000 g     F .text.push_pkt_encm	00000058 push_pkt_encm
00000000         *UND*	00000000 memset
00000000         *UND*	00000000 memcpy
00000000         *UND*	00000000 master_push_fifo
00000024       O *COM*	00000004 pkt_encm
00000000 g     F .text.push_pkt_smp_master	000000ec push_pkt_smp_master
00000000         *UND*	00000000 aes_ll_c1
00000000 g     F .text.master_msmp_send_info	0000003c master_msmp_send_info
00000000 g     F .text.msmp_set_address	0000005c msmp_set_address
00000000 g     F .text.master_msmp_init	0000002c master_msmp_init
00000000 g     F .text.l2cap_msmp_master_handler	00000148 l2cap_msmp_master_handler
00000000         *UND*	00000000 memcmp
00000000 g     F .text.master_btx_rx	000000d8 master_btx_rx
00000000         *UND*	00000000 aes_ll_ccm_decryption
00000000         *UND*	00000000 aes_ll_s1
00000000         *UND*	00000000 aes_ll_ccm_encryption_init
00000000 g     F .text.master_smp_func_init	0000002c master_smp_func_init
00000000         *UND*	00000000 func_msmp_brx
00000000         *UND*	00000000 func_msmp_init
00000000         *UND*	00000000 func_msmp_enc
00000000 g     O .bss.msmp_st	00000001 msmp_st
00000000 g     O .bss.msmp_pres	00000007 msmp_pres
00000000 g     O .data.msmp_preq	00000007 msmp_preq
00000000 g     O .data.msmp_randm	00000010 msmp_randm
00000000 g     O .bss.msmp_rands	00000010 msmp_rands
00000000 g     O .bss.msmp_confirm	00000010 msmp_confirm
00000000 g     O .bss.msmp_p2	00000010 msmp_p2
00000000 g     O .bss.msmp_p1	00000010 msmp_p1
00000000 g     O .bss.msmp_key	00000010 msmp_key
00000000 g     O .bss.msmp_sk	00000010 msmp_sk
00000000 g     O .data.msmp_ltk	00000010 msmp_ltk
00000000 g     O .data.msmp_rand	00000010 msmp_rand
00000000 g     O .bss.msmp_ediv	00000002 msmp_ediv
00000000 g     O .data.msmp_adv_pkt	00000012 msmp_adv_pkt
00000000 g     O .data.pkt_smp_master	00000020 pkt_smp_master
00000000 g     O .bss.msmp_bonded	00000001 msmp_bonded
00000000 g     O .bss.msmp_pair_busy	00000001 msmp_pair_busy
00000000 g     O .bss.blt_msmp_paring_req_recvd	00000001 blt_msmp_paring_req_recvd
00000000 g     O .bss.ll_menc_st	00000004 ll_menc_st
00000000 g     O .bss.ll_menc_en	00000004 ll_menc_en
00000000 g     O .bss.menc_ltk	00000010 menc_ltk
00000000 g     O .data.menc_skdm	00000008 menc_skdm
00000000 g     O .data.menc_ivm	00000004 menc_ivm
00000000 g     O .data.menc_skds	00000008 menc_skds
00000000 g     O .data.menc_ivs	00000004 menc_ivs
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN



Disassembly of section .text.master_msmp_enc:

00000000 <master_msmp_enc>:
master_msmp_enc():
   0:	6500      	tpush	{lr}
   2:	0b04      	tloadr	r3, [pc, #16]	; (14 <master_msmp_enc+0x14>)
   4:	581b      	tloadr	r3, [r3, #0]
   6:	ab00      	tcmp	r3, #0
   8:	c002      	tjeq.n	10 <master_msmp_enc+0x10>
   a:	a101      	tmovs	r1, #1
   c:	97ff 9ffe 	tjl	0 <aes_ll_ccm_encryption>
			c: R_TC32_CALL	aes_ll_ccm_encryption
  10:	6d00      	tpop	{pc}
  12:	46c0      	tnop			; (mov r8, r8)
  14:	00000000 	tandeq	r0, r0, r0
			14: R_TC32_ABS32	.bss.ll_menc_en

Disassembly of section .text.blt_msmp_pair_busy:

00000000 <blt_msmp_pair_busy>:
blt_msmp_pair_busy():
   0:	0b04      	tloadr	r3, [pc, #16]	; (14 <blt_msmp_pair_busy+0x14>)
   2:	481b      	tloadrb	r3, [r3, #0]
   4:	a000      	tmovs	r0, #0
   6:	ab00      	tcmp	r3, #0
   8:	c003      	tjeq.n	12 <blt_msmp_pair_busy+0x12>
   a:	0b03      	tloadr	r3, [pc, #12]	; (18 <blt_msmp_pair_busy+0x18>)
   c:	4818      	tloadrb	r0, [r3, #0]
   e:	ee43      	tsubs	r3, r0, #1
  10:	0198      	tsubcs	r0, r3
  12:	0770      	tjex	lr
	...
			14: R_TC32_ABS32	.bss.msmp_pair_busy
			18: R_TC32_ABS32	.bss.blt_msmp_paring_req_recvd

Disassembly of section .text.push_pkt_encm:

00000000 <push_pkt_encm>:
push_pkt_encm():
   0:	6530      	tpush	{r4, r5, lr}
   2:	ec05      	tadds	r5, r0, #0
   4:	0c11      	tloadr	r4, [pc, #68]	; (4c <push_pkt_encm+0x4c>)
   6:	a303      	tmovs	r3, #3
   8:	4123      	tstorerb	r3, [r4, #4]
   a:	a803      	tcmp	r0, #3
   c:	c113      	tjne.n	36 <push_pkt_encm+0x36>
   e:	a317      	tmovs	r3, #23
  10:	4163      	tstorerb	r3, [r4, #5]
  12:	ede0      	tadds	r0, r4, #7
  14:	a100      	tmovs	r1, #0
  16:	a20a      	tmovs	r2, #10
  18:	97ff 9ffe 	tjl	0 <memset>
			18: R_TC32_CALL	memset
  1c:	ec20      	tadds	r0, r4, #0
  1e:	b011      	tadds	r0, #17
  20:	090b      	tloadr	r1, [pc, #44]	; (50 <push_pkt_encm+0x50>)
  22:	a208      	tmovs	r2, #8
  24:	97ff 9ffe 	tjl	0 <memcpy>
			24: R_TC32_CALL	memcpy
  28:	ec20      	tadds	r0, r4, #0
  2a:	b019      	tadds	r0, #25
  2c:	0909      	tloadr	r1, [pc, #36]	; (54 <push_pkt_encm+0x54>)
  2e:	a204      	tmovs	r2, #4
  30:	97ff 9ffe 	tjl	0 <memcpy>
			30: R_TC32_CALL	memcpy
  34:	8001      	tj.n	3a <push_pkt_encm+0x3a>
  36:	a301      	tmovs	r3, #1
  38:	4163      	tstorerb	r3, [r4, #5]
  3a:	0804      	tloadr	r0, [pc, #16]	; (4c <push_pkt_encm+0x4c>)
  3c:	4185      	tstorerb	r5, [r0, #6]
  3e:	4943      	tloadrb	r3, [r0, #5]
  40:	b302      	tadds	r3, #2
  42:	4003      	tstorerb	r3, [r0, #0]
  44:	97ff 9ffe 	tjl	0 <master_push_fifo>
			44: R_TC32_CALL	master_push_fifo
  48:	6d30      	tpop	{r4, r5, pc}
  4a:	46c0      	tnop			; (mov r8, r8)
	...
			4c: R_TC32_ABS32	pkt_encm
			50: R_TC32_ABS32	.data.menc_skdm
			54: R_TC32_ABS32	.data.menc_ivm

Disassembly of section .text.push_pkt_smp_master:

00000000 <push_pkt_smp_master>:
push_pkt_smp_master():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6081      	tsub	sp, #4
   4:	ec04      	tadds	r4, r0, #0
   6:	a801      	tcmp	r0, #1
   8:	c106      	tjne.n	18 <push_pkt_smp_master+0x18>
   a:	082e      	tloadr	r0, [pc, #184]	; (c4 <push_pkt_smp_master+0xc4>)
   c:	a307      	tmovs	r3, #7
   e:	4183      	tstorerb	r3, [r0, #6]
  10:	b00a      	tadds	r0, #10
  12:	092d      	tloadr	r1, [pc, #180]	; (c8 <push_pkt_smp_master+0xc8>)
  14:	a207      	tmovs	r2, #7
  16:	8041      	tj.n	9c <push_pkt_smp_master+0x9c>
  18:	a803      	tcmp	r0, #3
  1a:	c11a      	tjne.n	52 <push_pkt_smp_master+0x52>
  1c:	0e29      	tloadr	r6, [pc, #164]	; (c4 <push_pkt_smp_master+0xc4>)
  1e:	a311      	tmovs	r3, #17
  20:	41b3      	tstorerb	r3, [r6, #6]
  22:	0d2a      	tloadr	r5, [pc, #168]	; (cc <push_pkt_smp_master+0xcc>)
  24:	eca8      	tadds	r0, r5, #2
  26:	0928      	tloadr	r1, [pc, #160]	; (c8 <push_pkt_smp_master+0xc8>)
  28:	a207      	tmovs	r2, #7
  2a:	97ff 9ffe 	tjl	0 <memcpy>
			2a: R_TC32_CALL	memcpy
  2e:	ec28      	tadds	r0, r5, #0
  30:	b009      	tadds	r0, #9
  32:	0927      	tloadr	r1, [pc, #156]	; (d0 <push_pkt_smp_master+0xd0>)
  34:	a207      	tmovs	r2, #7
  36:	97ff 9ffe 	tjl	0 <memcpy>
			36: R_TC32_CALL	memcpy
  3a:	0f26      	tloadr	r7, [pc, #152]	; (d4 <push_pkt_smp_master+0xd4>)
  3c:	3700      	tstorer	r7, [sp, #0]
  3e:	0826      	tloadr	r0, [pc, #152]	; (d8 <push_pkt_smp_master+0xd8>)
  40:	0926      	tloadr	r1, [pc, #152]	; (dc <push_pkt_smp_master+0xdc>)
  42:	ec2a      	tadds	r2, r5, #0
  44:	0b26      	tloadr	r3, [pc, #152]	; (e0 <push_pkt_smp_master+0xe0>)
  46:	97ff 9ffe 	tjl	0 <aes_ll_c1>
			46: R_TC32_CALL	aes_ll_c1
  4a:	ec30      	tadds	r0, r6, #0
  4c:	b00b      	tadds	r0, #11
  4e:	ec39      	tadds	r1, r7, #0
  50:	8006      	tj.n	60 <push_pkt_smp_master+0x60>
  52:	a804      	tcmp	r0, #4
  54:	c106      	tjne.n	64 <push_pkt_smp_master+0x64>
  56:	081b      	tloadr	r0, [pc, #108]	; (c4 <push_pkt_smp_master+0xc4>)
  58:	a311      	tmovs	r3, #17
  5a:	4183      	tstorerb	r3, [r0, #6]
  5c:	b00b      	tadds	r0, #11
  5e:	091f      	tloadr	r1, [pc, #124]	; (dc <push_pkt_smp_master+0xdc>)
  60:	a210      	tmovs	r2, #16
  62:	801b      	tj.n	9c <push_pkt_smp_master+0x9c>
  64:	a808      	tcmp	r0, #8
  66:	c10e      	tjne.n	86 <push_pkt_smp_master+0x86>
  68:	0a16      	tloadr	r2, [pc, #88]	; (c4 <push_pkt_smp_master+0xc4>)
  6a:	a311      	tmovs	r3, #17
  6c:	4193      	tstorerb	r3, [r2, #6]
  6e:	091d      	tloadr	r1, [pc, #116]	; (e4 <push_pkt_smp_master+0xe4>)
  70:	a300      	tmovs	r3, #0
  72:	081d      	tloadr	r0, [pc, #116]	; (e8 <push_pkt_smp_master+0xe8>)
  74:	d980      	tloadm	r1!, {r7}
  76:	e8d5      	tadds	r5, r2, r3
  78:	1cc6      	tloadrb	r6, [r0, r3]
  7a:	007e      	txors	r6, r7
  7c:	42ee      	tstorerb	r6, [r5, #11]
  7e:	b301      	tadds	r3, #1
  80:	ab10      	tcmp	r3, #16
  82:	c1f7      	tjne.n	74 <push_pkt_smp_master+0x74>
  84:	8014      	tj.n	b0 <push_pkt_smp_master+0xb0>
  86:	a809      	tcmp	r0, #9
  88:	c10b      	tjne.n	a2 <push_pkt_smp_master+0xa2>
  8a:	080e      	tloadr	r0, [pc, #56]	; (c4 <push_pkt_smp_master+0xc4>)
  8c:	a308      	tmovs	r3, #8
  8e:	4183      	tstorerb	r3, [r0, #6]
  90:	a300      	tmovs	r3, #0
  92:	42c3      	tstorerb	r3, [r0, #11]
  94:	b00c      	tadds	r0, #12
  96:	0912      	tloadr	r1, [pc, #72]	; (e0 <push_pkt_smp_master+0xe0>)
  98:	b106      	tadds	r1, #6
  9a:	a206      	tmovs	r2, #6
  9c:	97ff 9ffe 	tjl	0 <memcpy>
			9c: R_TC32_CALL	memcpy
  a0:	8006      	tj.n	b0 <push_pkt_smp_master+0xb0>
  a2:	a805      	tcmp	r0, #5
  a4:	c104      	tjne.n	b0 <push_pkt_smp_master+0xb0>
  a6:	0b07      	tloadr	r3, [pc, #28]	; (c4 <push_pkt_smp_master+0xc4>)
  a8:	a202      	tmovs	r2, #2
  aa:	419a      	tstorerb	r2, [r3, #6]
  ac:	a204      	tmovs	r2, #4
  ae:	42da      	tstorerb	r2, [r3, #11]
  b0:	0804      	tloadr	r0, [pc, #16]	; (c4 <push_pkt_smp_master+0xc4>)
  b2:	4284      	tstorerb	r4, [r0, #10]
  b4:	4983      	tloadrb	r3, [r0, #6]
  b6:	ed1a      	tadds	r2, r3, #4
  b8:	4142      	tstorerb	r2, [r0, #5]
  ba:	b306      	tadds	r3, #6
  bc:	4003      	tstorerb	r3, [r0, #0]
  be:	6001      	tadd	sp, #4
  c0:	6df0      	tpop	{r4, r5, r6, r7, pc}
  c2:	46c0      	tnop			; (mov r8, r8)
	...
			c4: R_TC32_ABS32	.data.pkt_smp_master
			c8: R_TC32_ABS32	.data.msmp_preq
			cc: R_TC32_ABS32	.bss.msmp_p1
			d0: R_TC32_ABS32	.bss.msmp_pres
			d4: R_TC32_ABS32	.bss.msmp_sk
			d8: R_TC32_ABS32	.bss.msmp_key
			dc: R_TC32_ABS32	.data.msmp_randm
			e0: R_TC32_ABS32	.bss.msmp_p2
			e4: R_TC32_ABS32	.data.msmp_ltk
			e8: R_TC32_ABS32	.bss.msmp_rands

Disassembly of section .text.master_msmp_send_info:

00000000 <master_msmp_send_info>:
master_msmp_send_info():
   0:	6500      	tpush	{lr}
   2:	0b0d      	tloadr	r3, [pc, #52]	; (38 <master_msmp_send_info+0x38>)
   4:	481a      	tloadrb	r2, [r3, #0]
   6:	aa01      	tcmp	r2, #1
   8:	c103      	tjne.n	12 <master_msmp_send_info+0x12>
   a:	a202      	tmovs	r2, #2
   c:	401a      	tstorerb	r2, [r3, #0]
   e:	a001      	tmovs	r0, #1
  10:	800f      	tj.n	32 <master_msmp_send_info+0x32>
  12:	aa04      	tcmp	r2, #4
  14:	c102      	tjne.n	1c <master_msmp_send_info+0x1c>
  16:	401a      	tstorerb	r2, [r3, #0]
  18:	a006      	tmovs	r0, #6
  1a:	800a      	tj.n	32 <master_msmp_send_info+0x32>
  1c:	aa08      	tcmp	r2, #8
  1e:	c103      	tjne.n	28 <master_msmp_send_info+0x28>
  20:	a209      	tmovs	r2, #9
  22:	401a      	tstorerb	r2, [r3, #0]
  24:	a008      	tmovs	r0, #8
  26:	8004      	tj.n	32 <master_msmp_send_info+0x32>
  28:	a000      	tmovs	r0, #0
  2a:	aa09      	tcmp	r2, #9
  2c:	c103      	tjne.n	36 <master_msmp_send_info+0x36>
  2e:	4018      	tstorerb	r0, [r3, #0]
  30:	a009      	tmovs	r0, #9
  32:	97ff 9ffe 	tjl	0 <master_msmp_send_info>
			32: R_TC32_CALL	push_pkt_smp_master
  36:	6d00      	tpop	{pc}
  38:	00000000 	tandeq	r0, r0, r0
			38: R_TC32_ABS32	.bss.msmp_st

Disassembly of section .text.msmp_set_address:

00000000 <msmp_set_address>:
msmp_set_address():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	ec04      	tadds	r4, r0, #0
   4:	0b12      	tloadr	r3, [pc, #72]	; (50 <msmp_set_address+0x50>)
   6:	4802      	tloadrb	r2, [r0, #0]
   8:	a540      	tmovs	r5, #64	; 0x40
   a:	002a      	tands	r2, r5
   c:	ee51      	tsubs	r1, r2, #1
   e:	018a      	tsubcs	r2, r1
  10:	401a      	tstorerb	r2, [r3, #0]
  12:	4802      	tloadrb	r2, [r0, #0]
  14:	f9d2      	tshftrs	r2, r2, #7
  16:	405a      	tstorerb	r2, [r3, #1]
  18:	0e0e      	tloadr	r6, [pc, #56]	; (54 <msmp_set_address+0x54>)
  1a:	ec01      	tadds	r1, r0, #0
  1c:	b108      	tadds	r1, #8
  1e:	ec30      	tadds	r0, r6, #0
  20:	a206      	tmovs	r2, #6
  22:	97ff 9ffe 	tjl	0 <memcpy>
			22: R_TC32_CALL	memcpy
  26:	eca7      	tadds	r7, r4, #2
  28:	edb0      	tadds	r0, r6, #6
  2a:	ec39      	tadds	r1, r7, #0
  2c:	a206      	tmovs	r2, #6
  2e:	97ff 9ffe 	tjl	0 <memcpy>
			2e: R_TC32_CALL	memcpy
  32:	4823      	tloadrb	r3, [r4, #0]
  34:	021d      	tnand	r5, r3
  36:	c109      	tjne.n	4c <msmp_set_address+0x4c>
  38:	0c07      	tloadr	r4, [pc, #28]	; (58 <msmp_set_address+0x58>)
  3a:	ec20      	tadds	r0, r4, #0
  3c:	b00c      	tadds	r0, #12
  3e:	ec39      	tadds	r1, r7, #0
  40:	a206      	tmovs	r2, #6
  42:	97ff 9ffe 	tjl	0 <memcpy>
			42: R_TC32_CALL	memcpy
  46:	4923      	tloadrb	r3, [r4, #4]
  48:	03ab      	tbclrs	r3, r5
  4a:	4123      	tstorerb	r3, [r4, #4]
  4c:	6df0      	tpop	{r4, r5, r6, r7, pc}
  4e:	46c0      	tnop			; (mov r8, r8)
	...
			50: R_TC32_ABS32	.bss.msmp_p1
			54: R_TC32_ABS32	.bss.msmp_p2
			58: R_TC32_ABS32	.data.msmp_adv_pkt

Disassembly of section .text.master_msmp_init:

00000000 <master_msmp_init>:
master_msmp_init():
   0:	6510      	tpush	{r4, lr}
   2:	a400      	tmovs	r4, #0
   4:	0b05      	tloadr	r3, [pc, #20]	; (1c <master_msmp_init+0x1c>)
   6:	501c      	tstorer	r4, [r3, #0]
   8:	0b05      	tloadr	r3, [pc, #20]	; (20 <master_msmp_init+0x20>)
   a:	501c      	tstorer	r4, [r3, #0]
   c:	97ff 9ffe 	tjl	0 <master_msmp_init>
			c: R_TC32_CALL	msmp_set_address
  10:	a201      	tmovs	r2, #1
  12:	0b04      	tloadr	r3, [pc, #16]	; (24 <master_msmp_init+0x24>)
  14:	401a      	tstorerb	r2, [r3, #0]
  16:	0b04      	tloadr	r3, [pc, #16]	; (28 <master_msmp_init+0x28>)
  18:	401c      	tstorerb	r4, [r3, #0]
  1a:	6d10      	tpop	{r4, pc}
	...
			1c: R_TC32_ABS32	.bss.ll_menc_en
			20: R_TC32_ABS32	.bss.ll_menc_st
			24: R_TC32_ABS32	.bss.msmp_pair_busy
			28: R_TC32_ABS32	.bss.blt_msmp_paring_req_recvd

Disassembly of section .text.l2cap_msmp_master_handler:

00000000 <l2cap_msmp_master_handler>:
l2cap_msmp_master_handler():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	6081      	tsub	sp, #4
   4:	ec04      	tadds	r4, r0, #0
   6:	4a83      	tloadrb	r3, [r0, #10]
   8:	a001      	tmovs	r0, #1
   a:	ab0b      	tcmp	r3, #11
   c:	c008      	tjeq.n	20 <l2cap_msmp_master_handler+0x20>
   e:	ab02      	tcmp	r3, #2
  10:	c10a      	tjne.n	28 <l2cap_msmp_master_handler+0x28>
  12:	ec21      	tadds	r1, r4, #0
  14:	b10a      	tadds	r1, #10
  16:	083f      	tloadr	r0, [pc, #252]	; (114 <l2cap_msmp_master_handler+0x114>)
  18:	a207      	tmovs	r2, #7
  1a:	97ff 9ffe 	tjl	0 <memcpy>
			1a: R_TC32_CALL	memcpy
  1e:	a003      	tmovs	r0, #3
  20:	97ff 9ffe 	tjl	0 <l2cap_msmp_master_handler>
			20: R_TC32_CALL	push_pkt_smp_master
  24:	ec05      	tadds	r5, r0, #0
  26:	8071      	tj.n	10c <l2cap_msmp_master_handler+0x10c>
  28:	ab03      	tcmp	r3, #3
  2a:	c107      	tjne.n	3c <l2cap_msmp_master_handler+0x3c>
  2c:	ec21      	tadds	r1, r4, #0
  2e:	b10b      	tadds	r1, #11
  30:	0839      	tloadr	r0, [pc, #228]	; (118 <l2cap_msmp_master_handler+0x118>)
  32:	a210      	tmovs	r2, #16
  34:	97ff 9ffe 	tjl	0 <memcpy>
			34: R_TC32_CALL	memcpy
  38:	a004      	tmovs	r0, #4
  3a:	87f1      	tj.n	20 <l2cap_msmp_master_handler+0x20>
  3c:	ab04      	tcmp	r3, #4
  3e:	c11f      	tjne.n	80 <l2cap_msmp_master_handler+0x80>
  40:	0d36      	tloadr	r5, [pc, #216]	; (11c <l2cap_msmp_master_handler+0x11c>)
  42:	ec21      	tadds	r1, r4, #0
  44:	b10b      	tadds	r1, #11
  46:	ec28      	tadds	r0, r5, #0
  48:	a210      	tmovs	r2, #16
  4a:	97ff 9ffe 	tjl	0 <memcpy>
			4a: R_TC32_CALL	memcpy
  4e:	0c34      	tloadr	r4, [pc, #208]	; (120 <l2cap_msmp_master_handler+0x120>)
  50:	3400      	tstorer	r4, [sp, #0]
  52:	0834      	tloadr	r0, [pc, #208]	; (124 <l2cap_msmp_master_handler+0x124>)
  54:	ec29      	tadds	r1, r5, #0
  56:	0a34      	tloadr	r2, [pc, #208]	; (128 <l2cap_msmp_master_handler+0x128>)
  58:	0b34      	tloadr	r3, [pc, #208]	; (12c <l2cap_msmp_master_handler+0x12c>)
  5a:	97ff 9ffe 	tjl	0 <aes_ll_c1>
			5a: R_TC32_CALL	aes_ll_c1
  5e:	082e      	tloadr	r0, [pc, #184]	; (118 <l2cap_msmp_master_handler+0x118>)
  60:	ec21      	tadds	r1, r4, #0
  62:	a210      	tmovs	r2, #16
  64:	97ff 9ffe 	tjl	0 <memcmp>
			64: R_TC32_CALL	memcmp
  68:	a800      	tcmp	r0, #0
  6a:	c107      	tjne.n	7c <l2cap_msmp_master_handler+0x7c>
  6c:	a20f      	tmovs	r2, #15
  6e:	0b30      	tloadr	r3, [pc, #192]	; (130 <l2cap_msmp_master_handler+0x130>)
  70:	401a      	tstorerb	r2, [r3, #0]
  72:	a003      	tmovs	r0, #3
  74:	97ff 9ffe 	tjl	0 <l2cap_msmp_master_handler>
			74: R_TC32_CALL	push_pkt_encm
  78:	a500      	tmovs	r5, #0
  7a:	8047      	tj.n	10c <l2cap_msmp_master_handler+0x10c>
  7c:	a005      	tmovs	r0, #5
  7e:	87cf      	tj.n	20 <l2cap_msmp_master_handler+0x20>
  80:	a500      	tmovs	r5, #0
  82:	ab08      	tcmp	r3, #8
  84:	c042      	tjeq.n	10c <l2cap_msmp_master_handler+0x10c>
  86:	ab09      	tcmp	r3, #9
  88:	c119      	tjne.n	be <l2cap_msmp_master_handler+0xbe>
  8a:	082a      	tloadr	r0, [pc, #168]	; (134 <l2cap_msmp_master_handler+0x134>)
  8c:	4ae2      	tloadrb	r2, [r4, #11]
  8e:	f1d2      	tshftls	r2, r2, #7
  90:	4903      	tloadrb	r3, [r0, #4]
  92:	a17f      	tmovs	r1, #127	; 0x7f
  94:	000b      	tands	r3, r1
  96:	0313      	tors	r3, r2
  98:	4103      	tstorerb	r3, [r0, #4]
  9a:	b00c      	tadds	r0, #12
  9c:	ec21      	tadds	r1, r4, #0
  9e:	b10c      	tadds	r1, #12
  a0:	a206      	tmovs	r2, #6
  a2:	97ff 9ffe 	tjl	0 <memcpy>
			a2: R_TC32_CALL	memcpy
  a6:	a201      	tmovs	r2, #1
  a8:	0b23      	tloadr	r3, [pc, #140]	; (138 <l2cap_msmp_master_handler+0x138>)
  aa:	401a      	tstorerb	r2, [r3, #0]
  ac:	0b19      	tloadr	r3, [pc, #100]	; (114 <l2cap_msmp_master_handler+0x114>)
  ae:	499b      	tloadrb	r3, [r3, #6]
  b0:	a206      	tmovs	r2, #6
  b2:	0013      	tands	r3, r2
  b4:	ab02      	tcmp	r3, #2
  b6:	c129      	tjne.n	10c <l2cap_msmp_master_handler+0x10c>
  b8:	0b20      	tloadr	r3, [pc, #128]	; (13c <l2cap_msmp_master_handler+0x13c>)
  ba:	401d      	tstorerb	r5, [r3, #0]
  bc:	8007      	tj.n	ce <l2cap_msmp_master_handler+0xce>
  be:	ab0a      	tcmp	r3, #10
  c0:	c108      	tjne.n	d4 <l2cap_msmp_master_handler+0xd4>
  c2:	0b1e      	tloadr	r3, [pc, #120]	; (13c <l2cap_msmp_master_handler+0x13c>)
  c4:	401d      	tstorerb	r5, [r3, #0]
  c6:	0b13      	tloadr	r3, [pc, #76]	; (114 <l2cap_msmp_master_handler+0x114>)
  c8:	499b      	tloadrb	r3, [r3, #6]
  ca:	f75a      	tshftls	r2, r3, #29
  cc:	c51e      	tjpl.n	10c <l2cap_msmp_master_handler+0x10c>
  ce:	a208      	tmovs	r2, #8
  d0:	0b17      	tloadr	r3, [pc, #92]	; (130 <l2cap_msmp_master_handler+0x130>)
  d2:	801a      	tj.n	10a <l2cap_msmp_master_handler+0x10a>
  d4:	ab06      	tcmp	r3, #6
  d6:	c106      	tjne.n	e6 <l2cap_msmp_master_handler+0xe6>
  d8:	ec21      	tadds	r1, r4, #0
  da:	b10b      	tadds	r1, #11
  dc:	0818      	tloadr	r0, [pc, #96]	; (140 <l2cap_msmp_master_handler+0x140>)
  de:	a210      	tmovs	r2, #16
  e0:	97ff 9ffe 	tjl	0 <memcpy>
			e0: R_TC32_CALL	memcpy
  e4:	8012      	tj.n	10c <l2cap_msmp_master_handler+0x10c>
  e6:	ab07      	tcmp	r3, #7
  e8:	c110      	tjne.n	10c <l2cap_msmp_master_handler+0x10c>
  ea:	ec21      	tadds	r1, r4, #0
  ec:	b10b      	tadds	r1, #11
  ee:	0e15      	tloadr	r6, [pc, #84]	; (144 <l2cap_msmp_master_handler+0x144>)
  f0:	ec30      	tadds	r0, r6, #0
  f2:	b008      	tadds	r0, #8
  f4:	a202      	tmovs	r2, #2
  f6:	97ff 9ffe 	tjl	0 <memcpy>
			f6: R_TC32_CALL	memcpy
  fa:	ec21      	tadds	r1, r4, #0
  fc:	b10d      	tadds	r1, #13
  fe:	ec30      	tadds	r0, r6, #0
 100:	a208      	tmovs	r2, #8
 102:	97ff 9ffe 	tjl	0 <memcpy>
			102: R_TC32_CALL	memcpy
 106:	a201      	tmovs	r2, #1
 108:	0b0b      	tloadr	r3, [pc, #44]	; (138 <l2cap_msmp_master_handler+0x138>)
 10a:	401a      	tstorerb	r2, [r3, #0]
 10c:	ec28      	tadds	r0, r5, #0
 10e:	6001      	tadd	sp, #4
 110:	6d70      	tpop	{r4, r5, r6, pc}
 112:	46c0      	tnop			; (mov r8, r8)
	...
			114: R_TC32_ABS32	.bss.msmp_pres
			118: R_TC32_ABS32	.bss.msmp_confirm
			11c: R_TC32_ABS32	.bss.msmp_rands
			120: R_TC32_ABS32	.bss.msmp_sk
			124: R_TC32_ABS32	.bss.msmp_key
			128: R_TC32_ABS32	.bss.msmp_p1
			12c: R_TC32_ABS32	.bss.msmp_p2
			130: R_TC32_ABS32	.bss.msmp_st
			134: R_TC32_ABS32	.data.msmp_adv_pkt
			138: R_TC32_ABS32	.bss.msmp_bonded
			13c: R_TC32_ABS32	.bss.msmp_pair_busy
			140: R_TC32_ABS32	.data.msmp_ltk
			144: R_TC32_ABS32	.data.msmp_rand

Disassembly of section .text.master_btx_rx:

00000000 <master_btx_rx>:
master_btx_rx():
   0:	6530      	tpush	{r4, r5, lr}
   2:	6081      	tsub	sp, #4
   4:	ec04      	tadds	r4, r0, #0
   6:	a900      	tcmp	r1, #0
   8:	c043      	tjeq.n	92 <master_btx_rx+0x92>
   a:	4b43      	tloadrb	r3, [r0, #13]
   c:	ab00      	tcmp	r3, #0
   e:	c040      	tjeq.n	92 <master_btx_rx+0x92>
  10:	0b26      	tloadr	r3, [pc, #152]	; (ac <master_btx_rx+0xac>)
  12:	581b      	tloadr	r3, [r3, #0]
  14:	ab00      	tcmp	r3, #0
  16:	c003      	tjeq.n	20 <master_btx_rx+0x20>
  18:	b00c      	tadds	r0, #12
  1a:	a100      	tmovs	r1, #0
  1c:	97ff 9ffe 	tjl	0 <aes_ll_ccm_decryption>
			1c: R_TC32_CALL	aes_ll_ccm_decryption
  20:	4ba5      	tloadrb	r5, [r4, #14]
  22:	4b23      	tloadrb	r3, [r4, #12]
  24:	a203      	tmovs	r2, #3
  26:	0013      	tands	r3, r2
  28:	ab03      	tcmp	r3, #3
  2a:	c127      	tjne.n	7c <master_btx_rx+0x7c>
  2c:	ad04      	tcmp	r5, #4
  2e:	c112      	tjne.n	56 <master_btx_rx+0x56>
  30:	ec21      	tadds	r1, r4, #0
  32:	b10f      	tadds	r1, #15
  34:	081e      	tloadr	r0, [pc, #120]	; (b0 <master_btx_rx+0xb0>)
  36:	a208      	tmovs	r2, #8
  38:	97ff 9ffe 	tjl	0 <memcpy>
			38: R_TC32_CALL	memcpy
  3c:	ec21      	tadds	r1, r4, #0
  3e:	b117      	tadds	r1, #23
  40:	081c      	tloadr	r0, [pc, #112]	; (b4 <master_btx_rx+0xb4>)
  42:	a204      	tmovs	r2, #4
  44:	97ff 9ffe 	tjl	0 <memcpy>
			44: R_TC32_CALL	memcpy
  48:	081b      	tloadr	r0, [pc, #108]	; (b8 <master_btx_rx+0xb8>)
  4a:	091c      	tloadr	r1, [pc, #112]	; (bc <master_btx_rx+0xbc>)
  4c:	0a1c      	tloadr	r2, [pc, #112]	; (c0 <master_btx_rx+0xc0>)
  4e:	0b1d      	tloadr	r3, [pc, #116]	; (c4 <master_btx_rx+0xc4>)
  50:	97ff 9ffe 	tjl	0 <aes_ll_s1>
			50: R_TC32_CALL	aes_ll_s1
  54:	801d      	tj.n	92 <master_btx_rx+0x92>
  56:	ad05      	tcmp	r5, #5
  58:	c11b      	tjne.n	92 <master_btx_rx+0x92>
  5a:	0b16      	tloadr	r3, [pc, #88]	; (b4 <master_btx_rx+0xb4>)
  5c:	3300      	tstorer	r3, [sp, #0]
  5e:	0819      	tloadr	r0, [pc, #100]	; (c4 <master_btx_rx+0xc4>)
  60:	0919      	tloadr	r1, [pc, #100]	; (c8 <master_btx_rx+0xc8>)
  62:	0a13      	tloadr	r2, [pc, #76]	; (b0 <master_btx_rx+0xb0>)
  64:	0b19      	tloadr	r3, [pc, #100]	; (cc <master_btx_rx+0xcc>)
  66:	97ff 9ffe 	tjl	0 <aes_ll_ccm_encryption_init>
			66: R_TC32_CALL	aes_ll_ccm_encryption_init
  6a:	a201      	tmovs	r2, #1
  6c:	0b0f      	tloadr	r3, [pc, #60]	; (ac <master_btx_rx+0xac>)
  6e:	501a      	tstorer	r2, [r3, #0]
  70:	a006      	tmovs	r0, #6
  72:	97ff 9ffe 	tjl	0 <master_btx_rx>
			72: R_TC32_CALL	push_pkt_encm
  76:	0b16      	tloadr	r3, [pc, #88]	; (d0 <master_btx_rx+0xd0>)
  78:	501d      	tstorer	r5, [r3, #0]
  7a:	800a      	tj.n	92 <master_btx_rx+0x92>
  7c:	2a23      	tloadrh	r3, [r4, #16]
  7e:	ab06      	tcmp	r3, #6
  80:	c107      	tjne.n	92 <master_btx_rx+0x92>
  82:	ec20      	tadds	r0, r4, #0
  84:	b008      	tadds	r0, #8
  86:	97ff 9ffe 	tjl	0 <master_btx_rx>
			86: R_TC32_CALL	l2cap_msmp_master_handler
  8a:	a800      	tcmp	r0, #0
  8c:	c001      	tjeq.n	92 <master_btx_rx+0x92>
  8e:	97ff 9ffe 	tjl	0 <master_push_fifo>
			8e: R_TC32_CALL	master_push_fifo
  92:	0b10      	tloadr	r3, [pc, #64]	; (d4 <master_btx_rx+0xd4>)
  94:	481b      	tloadrb	r3, [r3, #0]
  96:	ab00      	tcmp	r3, #0
  98:	c005      	tjeq.n	a6 <master_btx_rx+0xa6>
  9a:	97ff 9ffe 	tjl	0 <master_btx_rx>
			9a: R_TC32_CALL	master_msmp_send_info
  9e:	a800      	tcmp	r0, #0
  a0:	c001      	tjeq.n	a6 <master_btx_rx+0xa6>
  a2:	97ff 9ffe 	tjl	0 <master_push_fifo>
			a2: R_TC32_CALL	master_push_fifo
  a6:	a001      	tmovs	r0, #1
  a8:	6001      	tadd	sp, #4
  aa:	6d30      	tpop	{r4, r5, pc}
	...
			ac: R_TC32_ABS32	.bss.ll_menc_en
			b0: R_TC32_ABS32	.data.menc_skds
			b4: R_TC32_ABS32	.data.menc_ivs
			b8: R_TC32_ABS32	.bss.msmp_key
			bc: R_TC32_ABS32	.data.msmp_randm
			c0: R_TC32_ABS32	.bss.msmp_rands
			c4: R_TC32_ABS32	.bss.menc_ltk
			c8: R_TC32_ABS32	.data.menc_skdm
			cc: R_TC32_ABS32	.data.menc_ivm
			d0: R_TC32_ABS32	.bss.ll_menc_st
			d4: R_TC32_ABS32	.bss.msmp_st

Disassembly of section .text.master_smp_func_init:

00000000 <master_smp_func_init>:
master_smp_func_init():
   0:	0a04      	tloadr	r2, [pc, #16]	; (14 <master_smp_func_init+0x14>)
   2:	0b05      	tloadr	r3, [pc, #20]	; (18 <master_smp_func_init+0x18>)
   4:	501a      	tstorer	r2, [r3, #0]
   6:	0a05      	tloadr	r2, [pc, #20]	; (1c <master_smp_func_init+0x1c>)
   8:	0b05      	tloadr	r3, [pc, #20]	; (20 <master_smp_func_init+0x20>)
   a:	501a      	tstorer	r2, [r3, #0]
   c:	0a05      	tloadr	r2, [pc, #20]	; (24 <master_smp_func_init+0x24>)
   e:	0b06      	tloadr	r3, [pc, #24]	; (28 <master_smp_func_init+0x28>)
  10:	501a      	tstorer	r2, [r3, #0]
  12:	0770      	tjex	lr
	...
			14: R_TC32_ABS32	master_btx_rx
			18: R_TC32_ABS32	func_msmp_brx
			1c: R_TC32_ABS32	master_msmp_init
			20: R_TC32_ABS32	func_msmp_init
			24: R_TC32_ABS32	master_msmp_enc
			28: R_TC32_ABS32	func_msmp_enc

Disassembly of section .bss.msmp_key:

00000000 <msmp_key>:
	...

Disassembly of section .data.msmp_randm:

00000000 <msmp_randm>:
   0:	1490cf28 	tloadrne	ip, [r0], #3880	; 0xf28
   4:	7a9ce2db 	tjvc	fe738b78 <master_msmp_enc+0xfe738b78>
   8:	67f53b35 	undefined instruction 0x67f53b35
   c:	c1846e48 	torgt	r6, r4, r8, asr #28

Disassembly of section .bss.msmp_st:

00000000 <msmp_st>:
	...

Disassembly of section .bss.msmp_p1:

00000000 <msmp_p1>:
	...

Disassembly of section .bss.msmp_rands:

00000000 <msmp_rands>:
	...

Disassembly of section .data.pkt_smp_master:

00000000 <pkt_smp_master>:
   0:	00000017 	tandeq	r0, r0, r7, lsl r0
   4:	00111502 	tandseq	r1, r1, r2, lsl #10
   8:	00000006 	tandeq	r0, r0, r6
	...

Disassembly of section .bss.ll_menc_st:

00000000 <ll_menc_st>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .data.msmp_rand:

00000000 <msmp_rand>:
   0:	34567890 	tloadrbcc	r7, [r6], #-2192	; 0x890
   4:	abcdef12 	tjlge	ff37bc54 <master_msmp_enc+0xff37bc54>
   8:	00002474 	tandeq	r2, r0, r4, ror r4
   c:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.msmp_confirm:

00000000 <msmp_confirm>:
	...

Disassembly of section .bss.msmp_bonded:

00000000 <msmp_bonded>:
	...

Disassembly of section .bss.msmp_ediv:

00000000 <msmp_ediv>:
	...

Disassembly of section .data.menc_ivm:

00000000 <menc_ivm>:
   0:	badcab24 	tjlt	ff72ac98 <master_msmp_enc+0xff72ac98>

Disassembly of section .bss.msmp_pair_busy:

00000000 <msmp_pair_busy>:
	...

Disassembly of section .data.menc_ivs:

00000000 <menc_ivs>:
   0:	92ad77e1 	taddcls	r7, sp, #58982400	; 0x3840000

Disassembly of section .data.msmp_preq:

00000000 <msmp_preq>:
   0:	01000301 	tnandeq	r0, r1, lsl #6
   4:	00030210 	tandeq	r0, r3, r0, lsl r2

Disassembly of section .data.menc_skdm:

00000000 <menc_skdm>:
   0:	e0f10213 	trsubcs	r0, r1, r3, lsl r2
   4:	acbdcedf 	undefined instruction 0xacbdcedf

Disassembly of section .bss.msmp_p2:

00000000 <msmp_p2>:
	...

Disassembly of section .bss.msmp_pres:

00000000 <msmp_pres>:
	...

Disassembly of section .data.menc_skds:

00000000 <menc_skds>:
   0:	ae86ede8 	undefined instruction 0xae86ede8
   4:	00e3635a 	trsubceq	r6, r3, sl, asr r3

Disassembly of section .bss.menc_ltk:

00000000 <menc_ltk>:
	...

Disassembly of section .bss.ll_menc_en:

00000000 <ll_menc_en>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_msmp_paring_req_recvd:

00000000 <blt_msmp_paring_req_recvd>:
	...

Disassembly of section .bss.msmp_sk:

00000000 <msmp_sk>:
	...

Disassembly of section .data.msmp_adv_pkt:

00000000 <msmp_adv_pkt>:
   0:	0000000e 	tandeq	r0, r0, lr
   4:	01000c01 	tnandeq	r0, r1, lsl #24
   8:	05040302 	tstorereq	r0, [r4, #-770]	; 0x302
   c:	03020100 	tnandeq	r2, #0
  10:	00000504 	tandeq	r0, r0, r4, lsl #10

Disassembly of section .data.msmp_ltk:

00000000 <msmp_ltk>:
   0:	9dfb01bf 	undefined instruction 0x9dfb01bf
   4:	36bcf34e 	tloadrtcc	pc, [ip], lr, asr #6
   8:	39f574d8 	tloadmibcc	r5!, {r3, r4, r6, r7, sl, ip, sp, lr}^
   c:	4c683841 	undefined instruction 0x4c683841

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

blt_ll_17H26.o:     file format elf32-littletc32
rw-rw-rw- 0/0  29244 Jan 30 00:17 2019 blt_ll_17H26.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002c  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000060  2**0
                  ALLOC
  3 .text.blt_brx_timing_update 00000098  00000000  00000000  00000060  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.blt_ll_channelTable_calc 00000080  00000000  00000000  000000f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.blt_next_channel 00000028  00000000  00000000  00000178  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.irq_blt_tx 00000028  00000000  00000000  000001a0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.blt_adv_init 00000058  00000000  00000000  000001c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.blt_init_timing_hid 00000010  00000000  00000000  00000220  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.blt_init_timing 00000010  00000000  00000000  00000230  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.blt_pn_init 00000054  00000000  00000000  00000240  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .ram_code     00000408  00000000  00000000  00000294  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text.blt_get_crc_table 00000038  00000000  00000000  0000069c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text.blt_push_notify_data 00000098  00000000  00000000  000006d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text.blt_packet_tx_crc 00000034  00000000  00000000  0000076c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text.blt_nm_set_adv 0000005c  00000000  00000000  000007a0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text.blt_set_adv 00000048  00000000  00000000  000007fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text.blt_init 0000008c  00000000  00000000  00000844  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .text.blt_set_channel 00000084  00000000  00000000  000008d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .text.blt_set_adv_interval 00000020  00000000  00000000  00000954  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 20 .text.blt_enable_adv_latency 0000000c  00000000  00000000  00000974  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 21 .text.blt_set_adv_channel 0000000c  00000000  00000000  00000980  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 22 .text.blt_set_adv_type 0000001c  00000000  00000000  0000098c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 23 .text.blt_stall_mcu 00000054  00000000  00000000  000009a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.blt_change_system_clock 00000024  00000000  00000000  000009fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 25 .text.blt_send_adv 000003b0  00000000  00000000  00000a20  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 26 .text.blt_fifo_num 00000018  00000000  00000000  00000dd0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 27 .text.blt_fifo_empty 00000018  00000000  00000000  00000de8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 28 .text.blt_push_fifo 000000c0  00000000  00000000  00000e00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 29 .text.blt_push_notify 00000038  00000000  00000000  00000ec0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 30 .text.blt_set_connParaUpReq 0000000c  00000000  00000000  00000ef8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 31 .text.blt_terminate 0000000c  00000000  00000000  00000f04  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 32 .text.blt_brx 00000360  00000000  00000000  00000f10  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 33 .text.blt_brx_sleep 000001b0  00000000  00000000  00001270  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 34 .text.blt_enable_suspend 00000010  00000000  00000000  00001420  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 35 .text.blt_set_wakeup_source 0000000c  00000000  00000000  00001430  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 36 .text.blt_rc_calib 00000002  00000000  00000000  0000143c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.blt_update_conn_para 00000028  00000000  00000000  00001440  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 38 .text.blt_update_parameter_request 00000044  00000000  00000000  00001468  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 39 .text.blt_update_connPara_request 00000024  00000000  00000000  000014ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 40 .text.device_status_update 00000034  00000000  00000000  000014d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 41 .text.register_mesh_node_status_callback 0000000c  00000000  00000000  00001504  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 42 .text.mesh_node_init 0000003c  00000000  00000000  00001510  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 43 .text.mesh_node_keep_alive 00000030  00000000  00000000  0000154c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 44 .text.mesh_node_update_status 00000150  00000000  00000000  0000157c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 45 .text.mesh_node_flush_status 000000a4  00000000  00000000  000016cc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 46 .text.mesh_node_report_status 00000074  00000000  00000000  00001770  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 47 .text.mesh_node_adv_status 00000088  00000000  00000000  000017e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 48 .text.mesh_report_status_enable 00000048  00000000  00000000  0000186c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 49 .text.mesh_node_report_init 00000014  00000000  00000000  000018b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 50 .text.register_mesh_node_monitor 0000000c  00000000  00000000  000018c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 51 .bss.mesh_node_max 00000001  00000000  00000000  000018d4  2**0
                  ALLOC
 52 .data.mesh_node_cur 00000001  00000000  00000000  000018d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 53 .rodata.pkt_slave_terminate 00000008  00000000  00000000  000018d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 54 .bss.blt_tx_crc_empty 00000010  00000000  00000000  000018e0  2**2
                  ALLOC
 55 .bss.func_smp_enc 00000004  00000000  00000000  000018e0  2**2
                  ALLOC
 56 .bss.blt_pn_table_1 0000002c  00000000  00000000  000018e0  2**2
                  ALLOC
 57 .bss.blt_pn_table_2 0000002c  00000000  00000000  000018e0  2**2
                  ALLOC
 58 .bss.beacon_pn_table 0000000c  00000000  00000000  000018e0  2**2
                  ALLOC
 59 .data.blt_tx_empty_packet 00000008  00000000  00000000  000018e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 60 .rodata.pkt_version_ind 0000000c  00000000  00000000  000018e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 61 .data.pkt_unknown 00000008  00000000  00000000  000018f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 62 .bss.blt_p_mac 00000004  00000000  00000000  000018fc  2**2
                  ALLOC
 63 .bss.flag_channel_current 00000001  00000000  00000000  000018fc  2**0
                  ALLOC
 64 .data.pkt_notify_short 00000014  00000000  00000000  000018fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 65 .bss.ConnExpectDiff 00000004  00000000  00000000  00001910  2**2
                  ALLOC
 66 .bss.tick_node_report.4357 00000004  00000000  00000000  00001910  2**2
                  ALLOC
 67 .bss.blt_state 00000001  00000000  00000000  00001910  2**0
                  ALLOC
 68 .bss.blt_32k_cal_time_last 00000004  00000000  00000000  00001910  2**2
                  ALLOC
 69 .bss.blt_crc_init 00000004  00000000  00000000  00001910  2**2
                  ALLOC
 70 .data.pkt_ping_rsp 00000008  00000000  00000000  00001910  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 71 .bss.blt_p_adv 00000004  00000000  00000000  00001918  2**2
                  ALLOC
 72 .bss.func_smp_brx 00000004  00000000  00000000  00001918  2**2
                  ALLOC
 73 .bss.func_smp_init 00000004  00000000  00000000  00001918  2**2
                  ALLOC
 74 .bss.blt_conn_winsize_next 00000004  00000000  00000000  00001918  2**2
                  ALLOC
 75 .bss.irq_enabled_flag 00000001  00000000  00000000  00001918  2**0
                  ALLOC
 76 .bss.blt_p_connParaUpReq 00000004  00000000  00000000  00001918  2**2
                  ALLOC
 77 .data.blt_adv_chn_mask 00000001  00000000  00000000  00001918  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 78 .bss.p_mesh_node_status_callback 00000004  00000000  00000000  0000191c  2**2
                  ALLOC
 79 .bss.blt_wakeup_src 00000004  00000000  00000000  0000191c  2**2
                  ALLOC
 80 .data.blt_rx_len 00000001  00000000  00000000  0000191c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 81 .bss.func_pair_proc 00000004  00000000  00000000  00001920  2**2
                  ALLOC
 82 .bss.blt_retry 00000001  00000000  00000000  00001920  2**0
                  ALLOC
 83 .bss.blt_conn_tick_1stRx 00000004  00000000  00000000  00001920  2**2
                  ALLOC
 84 .bss.func_pair_init 00000004  00000000  00000000  00001920  2**2
                  ALLOC
 85 .bss.blt_new_connection 00000001  00000000  00000000  00001920  2**0
                  ALLOC
 86 .bss.blt_tx_pkt_hold 00000004  00000000  00000000  00001920  2**2
                  ALLOC
 87 .bss.blt_test_dongle_conn 00000001  00000000  00000000  00001920  2**0
                  ALLOC
 88 .bss.func_timing_update 00000004  00000000  00000000  00001920  2**2
                  ALLOC
 89 .data.device_node_sn 00000001  00000000  00000000  00001920  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 90 .bss.blt_tx_send 00000001  00000000  00000000  00001921  2**0
                  ALLOC
 91 .bss.mesh_node_st 00000100  00000000  00000000  00001924  2**2
                  ALLOC
 92 .bss.variant.4244 00000004  00000000  00000000  00001924  2**2
                  ALLOC
 93 .bss.beacon_adv_tx_pn_ptr 0000000c  00000000  00000000  00001924  2**2
                  ALLOC
 94 .data.blt_adv_interval 00000004  00000000  00000000  00001924  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 95 .bss.blt_conn_chn_map_next 00000008  00000000  00000000  00001928  2**2
                  ALLOC
 96 .bss.blt_conn_offset_next 00000004  00000000  00000000  00001928  2**2
                  ALLOC
 97 .bss.tick_last_tx.4003 00000004  00000000  00000000  00001928  2**2
                  ALLOC
 98 .data.connParaUpReq 00000018  00000000  00000000  00001928  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 99 .bss.blt_conn_update 00000001  00000000  00000000  00001940  2**0
                  ALLOC
100 .bss.blt_p_rsp 00000004  00000000  00000000  00001940  2**2
                  ALLOC
101 .bss.mesh_node_mask 00000004  00000000  00000000  00001940  2**2
                  ALLOC
102 .bss.dbg_st.4320 00000002  00000000  00000000  00001940  2**1
                  ALLOC
103 .bss.flag_pn_table_1 00000001  00000000  00000000  00001940  2**0
                  ALLOC
104 .bss.blt_adv_latency 00000001  00000000  00000000  00001940  2**0
                  ALLOC
105 .rodata.C.191.6366 00000010  00000000  00000000  00001940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
106 .bss.mesh_node_report_enable 00000001  00000000  00000000  00001950  2**0
                  ALLOC
107 .bss.conn_req_handle 00000004  00000000  00000000  00001950  2**2
                  ALLOC
108 .data.current_pn_table 00000004  00000000  00000000  00001950  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
109 .bss.blt_mesh_group 00000008  00000000  00000000  00001954  2**2
                  ALLOC
110 .rodata.pkt_feature_rsp 00000010  00000000  00000000  00001954  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
111 .bss.blt_tx_sending 00000001  00000000  00000000  00001964  2**0
                  ALLOC
112 .bss.blt_conn_chn_map 00000008  00000000  00000000  00001964  2**2
                  ALLOC
113 .bss.blt_conn_start_tick 00000004  00000000  00000000  00001964  2**2
                  ALLOC
114 .data.online_status_timeout 00000004  00000000  00000000  00001964  2**2
                  CONTENTS, ALLOC, LOAD, DATA
115 .bss.slave_func_monitor 00000004  00000000  00000000  00001968  2**2
                  ALLOC
116 .bss.blt_brx_synced 00000004  00000000  00000000  00001968  2**2
                  ALLOC
117 .bss.flag_pn_table_0 00000001  00000000  00000000  00001968  2**0
                  ALLOC
118 .bss.blt_connParaUpReq_sent 00000001  00000000  00000000  00001968  2**0
                  ALLOC
119 .comment      0000001b  00000000  00000000  00001968  2**0
                  CONTENTS, READONLY
120 .TC32.attributes 00000010  00000000  00000000  00001983  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 blt_ll_17H26.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.blt_brx_timing_update	00000000 .text.blt_brx_timing_update
00000000 l    d  .text.blt_ll_channelTable_calc	00000000 .text.blt_ll_channelTable_calc
00000000 l    d  .text.blt_next_channel	00000000 .text.blt_next_channel
00000000 l    d  .text.irq_blt_tx	00000000 .text.irq_blt_tx
00000000 l    d  .text.blt_adv_init	00000000 .text.blt_adv_init
00000000 l    d  .text.blt_init_timing_hid	00000000 .text.blt_init_timing_hid
00000000 l    d  .text.blt_init_timing	00000000 .text.blt_init_timing
00000000 l    d  .text.blt_pn_init	00000000 .text.blt_pn_init
00000000 l    d  .ram_code	00000000 .ram_code
00000000 l    d  .text.blt_get_crc_table	00000000 .text.blt_get_crc_table
00000000 l    d  .text.blt_push_notify_data	00000000 .text.blt_push_notify_data
00000000 l    d  .text.blt_packet_tx_crc	00000000 .text.blt_packet_tx_crc
00000000 l    d  .text.blt_nm_set_adv	00000000 .text.blt_nm_set_adv
00000000 l    d  .text.blt_set_adv	00000000 .text.blt_set_adv
00000000 l    d  .text.blt_init	00000000 .text.blt_init
00000000 l    d  .text.blt_set_channel	00000000 .text.blt_set_channel
00000000 l    d  .text.blt_set_adv_interval	00000000 .text.blt_set_adv_interval
00000000 l    d  .text.blt_enable_adv_latency	00000000 .text.blt_enable_adv_latency
00000000 l    d  .text.blt_set_adv_channel	00000000 .text.blt_set_adv_channel
00000000 l    d  .text.blt_set_adv_type	00000000 .text.blt_set_adv_type
00000000 l    d  .text.blt_stall_mcu	00000000 .text.blt_stall_mcu
00000000 l    d  .text.blt_change_system_clock	00000000 .text.blt_change_system_clock
00000000 l    d  .text.blt_send_adv	00000000 .text.blt_send_adv
00000000 l    d  .text.blt_fifo_num	00000000 .text.blt_fifo_num
00000000 l    d  .text.blt_fifo_empty	00000000 .text.blt_fifo_empty
00000000 l    d  .text.blt_push_fifo	00000000 .text.blt_push_fifo
00000000 l    d  .text.blt_push_notify	00000000 .text.blt_push_notify
00000000 l    d  .text.blt_set_connParaUpReq	00000000 .text.blt_set_connParaUpReq
00000000 l    d  .text.blt_terminate	00000000 .text.blt_terminate
00000000 l    d  .text.blt_brx	00000000 .text.blt_brx
00000000 l    d  .text.blt_brx_sleep	00000000 .text.blt_brx_sleep
00000000 l    d  .text.blt_enable_suspend	00000000 .text.blt_enable_suspend
00000000 l    d  .text.blt_set_wakeup_source	00000000 .text.blt_set_wakeup_source
00000000 l    d  .text.blt_rc_calib	00000000 .text.blt_rc_calib
00000000 l    d  .text.blt_update_conn_para	00000000 .text.blt_update_conn_para
00000000 l    d  .text.blt_update_parameter_request	00000000 .text.blt_update_parameter_request
00000000 l    d  .text.blt_update_connPara_request	00000000 .text.blt_update_connPara_request
00000000 l    d  .text.device_status_update	00000000 .text.device_status_update
00000000 l    d  .text.register_mesh_node_status_callback	00000000 .text.register_mesh_node_status_callback
00000000 l    d  .text.mesh_node_init	00000000 .text.mesh_node_init
00000000 l    d  .text.mesh_node_keep_alive	00000000 .text.mesh_node_keep_alive
00000000 l    d  .text.mesh_node_update_status	00000000 .text.mesh_node_update_status
00000000 l    d  .text.mesh_node_flush_status	00000000 .text.mesh_node_flush_status
00000000 l    d  .text.mesh_node_report_status	00000000 .text.mesh_node_report_status
00000000 l    d  .text.mesh_node_adv_status	00000000 .text.mesh_node_adv_status
00000000 l    d  .text.mesh_report_status_enable	00000000 .text.mesh_report_status_enable
00000000 l    d  .text.mesh_node_report_init	00000000 .text.mesh_node_report_init
00000000 l    d  .text.register_mesh_node_monitor	00000000 .text.register_mesh_node_monitor
00000000 l    d  .bss.mesh_node_max	00000000 .bss.mesh_node_max
00000000 l    d  .data.mesh_node_cur	00000000 .data.mesh_node_cur
00000000 l    d  .rodata.pkt_slave_terminate	00000000 .rodata.pkt_slave_terminate
00000000 l    d  .bss.blt_tx_crc_empty	00000000 .bss.blt_tx_crc_empty
00000000 l    d  .bss.func_smp_enc	00000000 .bss.func_smp_enc
00000000 l    d  .bss.blt_pn_table_1	00000000 .bss.blt_pn_table_1
00000000 l    d  .bss.blt_pn_table_2	00000000 .bss.blt_pn_table_2
00000000 l    d  .bss.beacon_pn_table	00000000 .bss.beacon_pn_table
00000000 l    d  .data.blt_tx_empty_packet	00000000 .data.blt_tx_empty_packet
00000000 l    d  .rodata.pkt_version_ind	00000000 .rodata.pkt_version_ind
00000000 l    d  .data.pkt_unknown	00000000 .data.pkt_unknown
00000000 l    d  .bss.blt_p_mac	00000000 .bss.blt_p_mac
00000000 l    d  .bss.flag_channel_current	00000000 .bss.flag_channel_current
00000000 l    d  .data.pkt_notify_short	00000000 .data.pkt_notify_short
00000000 l    d  .bss.ConnExpectDiff	00000000 .bss.ConnExpectDiff
00000000 l     O .bss.ConnExpectDiff	00000004 ConnExpectDiff
00000000 l    d  .bss.tick_node_report.4357	00000000 .bss.tick_node_report.4357
00000000 l     O .bss.tick_node_report.4357	00000004 tick_node_report.4357
00000000 l    d  .bss.blt_state	00000000 .bss.blt_state
00000000 l    d  .bss.blt_32k_cal_time_last	00000000 .bss.blt_32k_cal_time_last
00000000 l    d  .bss.blt_crc_init	00000000 .bss.blt_crc_init
00000000 l    d  .data.pkt_ping_rsp	00000000 .data.pkt_ping_rsp
00000000 l    d  .bss.blt_p_adv	00000000 .bss.blt_p_adv
00000000 l    d  .bss.func_smp_brx	00000000 .bss.func_smp_brx
00000000 l    d  .bss.func_smp_init	00000000 .bss.func_smp_init
00000000 l    d  .bss.blt_conn_winsize_next	00000000 .bss.blt_conn_winsize_next
00000000 l    d  .bss.irq_enabled_flag	00000000 .bss.irq_enabled_flag
00000000 l    d  .bss.blt_p_connParaUpReq	00000000 .bss.blt_p_connParaUpReq
00000000 l    d  .data.blt_adv_chn_mask	00000000 .data.blt_adv_chn_mask
00000000 l    d  .bss.p_mesh_node_status_callback	00000000 .bss.p_mesh_node_status_callback
00000000 l    d  .bss.blt_wakeup_src	00000000 .bss.blt_wakeup_src
00000000 l    d  .data.blt_rx_len	00000000 .data.blt_rx_len
00000000 l    d  .bss.func_pair_proc	00000000 .bss.func_pair_proc
00000000 l    d  .bss.blt_retry	00000000 .bss.blt_retry
00000000 l    d  .bss.blt_conn_tick_1stRx	00000000 .bss.blt_conn_tick_1stRx
00000000 l    d  .bss.func_pair_init	00000000 .bss.func_pair_init
00000000 l    d  .bss.blt_new_connection	00000000 .bss.blt_new_connection
00000000 l    d  .bss.blt_tx_pkt_hold	00000000 .bss.blt_tx_pkt_hold
00000000 l    d  .bss.blt_test_dongle_conn	00000000 .bss.blt_test_dongle_conn
00000000 l    d  .bss.func_timing_update	00000000 .bss.func_timing_update
00000000 l    d  .data.device_node_sn	00000000 .data.device_node_sn
00000000 l    d  .bss.blt_tx_send	00000000 .bss.blt_tx_send
00000000 l    d  .bss.mesh_node_st	00000000 .bss.mesh_node_st
00000000 l    d  .bss.variant.4244	00000000 .bss.variant.4244
00000000 l     O .bss.variant.4244	00000004 variant.4244
00000000 l    d  .bss.beacon_adv_tx_pn_ptr	00000000 .bss.beacon_adv_tx_pn_ptr
00000000 l    d  .data.blt_adv_interval	00000000 .data.blt_adv_interval
00000000 l    d  .bss.blt_conn_chn_map_next	00000000 .bss.blt_conn_chn_map_next
00000000 l    d  .bss.blt_conn_offset_next	00000000 .bss.blt_conn_offset_next
00000000 l    d  .bss.tick_last_tx.4003	00000000 .bss.tick_last_tx.4003
00000000 l     O .bss.tick_last_tx.4003	00000004 tick_last_tx.4003
00000000 l    d  .data.connParaUpReq	00000000 .data.connParaUpReq
00000000 l    d  .bss.blt_conn_update	00000000 .bss.blt_conn_update
00000000 l    d  .bss.blt_p_rsp	00000000 .bss.blt_p_rsp
00000000 l    d  .bss.mesh_node_mask	00000000 .bss.mesh_node_mask
00000000 l    d  .bss.dbg_st.4320	00000000 .bss.dbg_st.4320
00000000 l     O .bss.dbg_st.4320	00000002 dbg_st.4320
00000000 l    d  .bss.flag_pn_table_1	00000000 .bss.flag_pn_table_1
00000000 l    d  .bss.blt_adv_latency	00000000 .bss.blt_adv_latency
00000000 l    d  .rodata.C.191.6366	00000000 .rodata.C.191.6366
00000000 l     O .rodata.C.191.6366	00000010 C.191.6366
00000000 l    d  .bss.mesh_node_report_enable	00000000 .bss.mesh_node_report_enable
00000000 l    d  .bss.conn_req_handle	00000000 .bss.conn_req_handle
00000000 l    d  .data.current_pn_table	00000000 .data.current_pn_table
00000000 l     O .data.current_pn_table	00000004 current_pn_table
00000000 l    d  .bss.blt_mesh_group	00000000 .bss.blt_mesh_group
00000000 l    d  .rodata.pkt_feature_rsp	00000000 .rodata.pkt_feature_rsp
00000000 l    d  .bss.blt_tx_sending	00000000 .bss.blt_tx_sending
00000000 l    d  .bss.blt_conn_chn_map	00000000 .bss.blt_conn_chn_map
00000000 l    d  .bss.blt_conn_start_tick	00000000 .bss.blt_conn_start_tick
00000000 l    d  .data.online_status_timeout	00000000 .data.online_status_timeout
00000000 l    d  .bss.slave_func_monitor	00000000 .bss.slave_func_monitor
00000000 l    d  .bss.blt_brx_synced	00000000 .bss.blt_brx_synced
00000000 l    d  .bss.flag_pn_table_0	00000000 .bss.flag_pn_table_0
00000000 l    d  .bss.blt_connParaUpReq_sent	00000000 .bss.blt_connParaUpReq_sent
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000         *UND*	00000000 __udivsi3
00000000 g     F .text.blt_brx_timing_update	00000098 blt_brx_timing_update
00000001       O *COM*	00000001 blt_first_connection
00000004       O *COM*	00000004 blt_connExpectTime
00000004       O *COM*	00000004 blt_conn_interval
00000004       O *COM*	00000004 blt_conn_tolerance_time
00000004       O *COM*	00000004 blt_conn_duration
00000000 g     F .text.blt_ll_channelTable_calc	00000080 blt_ll_channelTable_calc
00000028       O *COM*	00000004 blt_ll_channelTable
00000000 g     F .text.blt_next_channel	00000028 blt_next_channel
00000001       O *COM*	00000001 blt_ll_chn_idx
00000000 g     F .text.irq_blt_tx	00000028 irq_blt_tx
00000000 g     F .text.blt_adv_init	00000058 blt_adv_init
00000001       O *COM*	00000001 w24g_mode_flag
00000000 g     F .text.blt_init_timing_hid	00000010 blt_init_timing_hid
00000000         *UND*	00000000 blt_brx_timing_update_hid
00000000 g     F .text.blt_init_timing	00000010 blt_init_timing
00000000 g     F .text.blt_pn_init	00000054 blt_pn_init
00000000 g     F .ram_code	00000030 blt_packet_crc24
00000000 g     F .text.blt_get_crc_table	00000038 blt_get_crc_table
00000000 g     F .text.blt_push_notify_data	00000096 blt_push_notify_data
00000000         *UND*	00000000 memcpy
00000001       O *COM*	00000001 blt_tx_wptr
00000001       O *COM*	00000001 blt_tx_rptr
000000b0       O *COM*	00000004 blt_tx_fifo
00000040       O *COM*	00000004 blt_tx_crc
00000000 g     F .text.blt_packet_tx_crc	00000034 blt_packet_tx_crc
00000000 g     F .text.blt_nm_set_adv	0000005c blt_nm_set_adv
00000000 g     F .text.blt_set_adv	00000048 blt_set_adv
00000000 g     F .text.blt_init	0000008c blt_init
00000030 g     F .ram_code	0000001a blt_packet_tx_pn_calc
0000004a g     F .ram_code	00000012 blt_packet_tx_pn
00000000 g     F .text.blt_set_channel	00000084 blt_set_channel
00000000         *UND*	00000000 rf_set_tp_gain
00000000 g     F .text.blt_set_adv_interval	00000020 blt_set_adv_interval
00000000 g     F .text.blt_enable_adv_latency	0000000c blt_enable_adv_latency
00000000 g     F .text.blt_set_adv_channel	0000000c blt_set_adv_channel
00000000 g     F .text.blt_set_adv_type	0000001c blt_set_adv_type
0000005c g     F .ram_code	00000068 scan_rsp_ykq
00000000         *UND*	00000000 task_ScanReq_Recieved
00000000 g     F .text.blt_stall_mcu	00000054 blt_stall_mcu
00000000 g     F .text.blt_change_system_clock	00000024 blt_change_system_clock
000000c4 g     F .ram_code	00000104 blt_brx_sn_nesn
00000000         *UND*	00000000 sleep_us
00000001       O *COM*	00000001 blt_conn_sn_slave
00000001       O *COM*	00000001 blt_conn_sn_master
000001c8 g     F .ram_code	00000210 blt_packet_rx
00000000 g     F .text.blt_send_adv	000003ae blt_send_adv
00000000         *UND*	00000000 task_connection_established
00000000         *UND*	00000000 vr_autoSetMode
00000002       O *COM*	00000002 blt_conn_inst
00000004       O *COM*	00000004 blt_conn_timeout
00000002       O *COM*	00000002 blt_conn_latency
00000004       O *COM*	00000004 blt_conn_tick
00000001       O *COM*	00000001 blt_conn_chn_hop
00000001       O *COM*	00000001 blt_conn_chn
00000004       O *COM*	00000004 connect_startTime
00000001       O *COM*	00000001 sec_req_sent
00000000         *UND*	00000000 apple_need_quick_send_sec_req
00000001       O *COM*	00000001 os_check
00000000 g     F .text.blt_fifo_num	00000018 blt_fifo_num
00000000 g     F .text.blt_fifo_empty	00000018 blt_fifo_empty
00000000 g     F .text.blt_push_fifo	000000be blt_push_fifo
00000000         *UND*	00000000 blt_smp_pair_busy
00000000 g     F .text.blt_push_notify	00000038 blt_push_notify
00000000 g     F .text.blt_set_connParaUpReq	0000000c blt_set_connParaUpReq
00000000 g     F .text.blt_terminate	0000000c blt_terminate
00000001       O *COM*	00000001 blt_terminate_pending
00000000 g     F .text.blt_brx	0000035e blt_brx
00000000         *UND*	00000000 task_Version_ind
00000000         *UND*	00000000 task_bond_finished
00000000         *UND*	00000000 l2cap_att_handler
00000000         *UND*	00000000 task_connection_terminated
00000001       O *COM*	00000001 blt_brx_status
00000002       O *COM*	00000002 blt_conn_inst_next
00000004       O *COM*	00000004 blt_conn_interval_next
00000002       O *COM*	00000002 blt_conn_latency_next
00000004       O *COM*	00000004 blt_conn_timeout_next
00000000 g     F .text.blt_brx_sleep	000001b0 blt_brx_sleep
00000000         *UND*	00000000 blt_sleep_wakeup
00000001       O *COM*	00000001 blt_suspend_mask
00000000 g     F .text.blt_enable_suspend	00000010 blt_enable_suspend
00000000 g     F .text.blt_set_wakeup_source	0000000c blt_set_wakeup_source
000003d8 g     F .ram_code	0000002e blt_get_32k_tick
00000000         *UND*	00000000 analog_read
00000000 g     F .text.blt_rc_calib	00000002 blt_rc_calib
00000000 g     F .text.blt_update_conn_para	00000028 blt_update_conn_para
00000000 g     F .text.blt_update_parameter_request	00000044 blt_update_parameter_request
00000000 g     F .text.blt_update_connPara_request	00000024 blt_update_connPara_request
00000000 g     F .text.device_status_update	00000034 device_status_update
00000000 g     F .text.register_mesh_node_status_callback	0000000c register_mesh_node_status_callback
00000000 g     F .text.mesh_node_init	0000003c mesh_node_init
00000002       O *COM*	00000002 blt_mesh_adr
00000000 g     F .text.mesh_node_keep_alive	00000030 mesh_node_keep_alive
00000000 g     F .text.mesh_node_update_status	0000014e mesh_node_update_status
00000000 g     F .text.mesh_node_flush_status	000000a2 mesh_node_flush_status
00000000 g     F .text.mesh_node_report_status	00000074 mesh_node_report_status
00000000         *UND*	00000000 memset
00000000 g     F .text.mesh_node_adv_status	00000088 mesh_node_adv_status
00000000 g     F .text.mesh_report_status_enable	00000048 mesh_report_status_enable
00000000 g     F .text.mesh_node_report_init	00000014 mesh_node_report_init
00000000 g     F .text.register_mesh_node_monitor	0000000c register_mesh_node_monitor
00000000 g     O .bss.irq_enabled_flag	00000001 irq_enabled_flag
00000000 g     O .bss.func_smp_brx	00000004 func_smp_brx
00000000 g     O .bss.func_smp_init	00000004 func_smp_init
00000000 g     O .bss.func_smp_enc	00000004 func_smp_enc
00000000 g     O .bss.func_pair_init	00000004 func_pair_init
00000000 g     O .bss.func_pair_proc	00000004 func_pair_proc
00000000 g     O .bss.flag_pn_table_0	00000001 flag_pn_table_0
00000000 g     O .bss.flag_pn_table_1	00000001 flag_pn_table_1
00000000 g     O .data	0000002c blt_pn_table_0
00000000 g     O .bss.blt_pn_table_1	0000002c blt_pn_table_1
00000000 g     O .bss.blt_pn_table_2	0000002c blt_pn_table_2
00000000 g     O .bss.flag_channel_current	00000001 flag_channel_current
00000000 g     O .bss.func_timing_update	00000004 func_timing_update
00000000 g     O .bss.conn_req_handle	00000004 conn_req_handle
00000000 g     O .data.blt_tx_empty_packet	00000005 blt_tx_empty_packet
00000000 g     O .bss.blt_tx_crc_empty	00000010 blt_tx_crc_empty
00000000 g     O .bss.blt_tx_sending	00000001 blt_tx_sending
00000000 g     O .bss.blt_crc_init	00000004 blt_crc_init
00000000 g     O .bss.blt_p_adv	00000004 blt_p_adv
00000000 g     O .bss.blt_p_rsp	00000004 blt_p_rsp
00000000 g     O .bss.blt_p_mac	00000004 blt_p_mac
00000000 g     O .bss.blt_state	00000001 blt_state
00000000 g     O .data.blt_adv_interval	00000004 blt_adv_interval
00000000 g     O .bss.blt_wakeup_src	00000004 blt_wakeup_src
00000000 g     O .bss.blt_conn_chn_map	00000005 blt_conn_chn_map
00000000 g     O .bss.blt_conn_update	00000001 blt_conn_update
00000000 g     O .bss.blt_conn_offset_next	00000004 blt_conn_offset_next
00000000 g     O .bss.blt_conn_winsize_next	00000004 blt_conn_winsize_next
00000000 g     O .bss.blt_conn_chn_map_next	00000005 blt_conn_chn_map_next
00000000 g     O .bss.blt_connParaUpReq_sent	00000001 blt_connParaUpReq_sent
00000000 g     O .bss.blt_conn_start_tick	00000004 blt_conn_start_tick
00000000 g     O .bss.blt_p_connParaUpReq	00000004 blt_p_connParaUpReq
00000000 g     O .bss.blt_brx_synced	00000004 blt_brx_synced
00000000 g     O .data.blt_rx_len	00000001 blt_rx_len
00000000 g     O .rodata.pkt_feature_rsp	0000000f pkt_feature_rsp
00000000 g     O .rodata.pkt_version_ind	0000000c pkt_version_ind
00000000 g     O .rodata.pkt_slave_terminate	00000008 pkt_slave_terminate
00000000 g     O .data.pkt_unknown	00000008 pkt_unknown
00000000 g     O .data.pkt_ping_rsp	00000007 pkt_ping_rsp
00000000 g     O .data.connParaUpReq	00000016 connParaUpReq
00000000 g     O .bss.blt_tx_send	00000001 blt_tx_send
00000000 g     O .data.pkt_notify_short	00000011 pkt_notify_short
00000000 g     O .bss.blt_adv_latency	00000001 blt_adv_latency
00000000 g     O .data.blt_adv_chn_mask	00000001 blt_adv_chn_mask
00000000 g     O .bss.beacon_pn_table	0000000c beacon_pn_table
00000000 g     O .bss.beacon_adv_tx_pn_ptr	0000000c beacon_adv_tx_pn_ptr
00000000 g     O .bss.blt_32k_cal_time_last	00000004 blt_32k_cal_time_last
00000000 g     O .bss.blt_test_dongle_conn	00000001 blt_test_dongle_conn
00000000 g     O .bss.blt_retry	00000001 blt_retry
00000000 g     O .bss.blt_tx_pkt_hold	00000004 blt_tx_pkt_hold
00000000 g     O .bss.blt_conn_tick_1stRx	00000004 blt_conn_tick_1stRx
00000000 g     O .bss.blt_new_connection	00000001 blt_new_connection
00000000 g     O .bss.blt_mesh_group	00000008 blt_mesh_group
00000000 g     O .bss.mesh_node_st	00000100 mesh_node_st
00000000 g     O .bss.mesh_node_max	00000001 mesh_node_max
00000000 g     O .data.mesh_node_cur	00000001 mesh_node_cur
00000000 g     O .bss.mesh_node_mask	00000004 mesh_node_mask
00000000 g     O .data.device_node_sn	00000001 device_node_sn
00000000 g     O .bss.mesh_node_report_enable	00000001 mesh_node_report_enable
00000000 g     O .bss.slave_func_monitor	00000004 slave_func_monitor
00000000 g     O .bss.p_mesh_node_status_callback	00000004 p_mesh_node_status_callback
00000000 g     O .data.online_status_timeout	00000004 online_status_timeout
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN
00000004       O *COM*	00000004 blt_conn_interval_adjust



Disassembly of section .data:

00000000 <blt_pn_table_0>:
	...

Disassembly of section .text.blt_brx_timing_update:

00000000 <blt_brx_timing_update>:
blt_brx_timing_update():
   0:	6530      	tpush	{r4, r5, lr}
   2:	0c1d      	tloadr	r4, [pc, #116]	; (78 <blt_brx_timing_update+0x78>)
   4:	a800      	tcmp	r0, #0
   6:	c01b      	tjeq.n	40 <blt_brx_timing_update+0x40>
   8:	0b1c      	tloadr	r3, [pc, #112]	; (7c <blt_brx_timing_update+0x7c>)
   a:	5023      	tstorer	r3, [r4, #0]
   c:	0b1c      	tloadr	r3, [pc, #112]	; (80 <blt_brx_timing_update+0x80>)
   e:	481b      	tloadrb	r3, [r3, #0]
  10:	ab00      	tcmp	r3, #0
  12:	c109      	tjne.n	28 <blt_brx_timing_update+0x28>
  14:	0b1b      	tloadr	r3, [pc, #108]	; (84 <blt_brx_timing_update+0x84>)
  16:	0a1c      	tloadr	r2, [pc, #112]	; (88 <blt_brx_timing_update+0x88>)
  18:	5812      	tloadr	r2, [r2, #0]
  1a:	ea82      	tsubs	r2, r0, r2
  1c:	ffd1      	tshftrs	r1, r2, #31
  1e:	e88a      	tadds	r2, r1, r2
  20:	e052      	tasrs	r2, r2, #1
  22:	5819      	tloadr	r1, [r3, #0]
  24:	e852      	tadds	r2, r2, r1
  26:	501a      	tstorer	r2, [r3, #0]
  28:	0b16      	tloadr	r3, [pc, #88]	; (84 <blt_brx_timing_update+0x84>)
  2a:	581a      	tloadr	r2, [r3, #0]
  2c:	0b17      	tloadr	r3, [pc, #92]	; (8c <blt_brx_timing_update+0x8c>)
  2e:	581b      	tloadr	r3, [r3, #0]
  30:	e8d3      	tadds	r3, r2, r3
  32:	e818      	tadds	r0, r3, r0
  34:	0b14      	tloadr	r3, [pc, #80]	; (88 <blt_brx_timing_update+0x88>)
  36:	5018      	tstorer	r0, [r3, #0]
  38:	a200      	tmovs	r2, #0
  3a:	0b11      	tloadr	r3, [pc, #68]	; (80 <blt_brx_timing_update+0x80>)
  3c:	401a      	tstorerb	r2, [r3, #0]
  3e:	800e      	tj.n	5e <blt_brx_timing_update+0x5e>
  40:	0b12      	tloadr	r3, [pc, #72]	; (8c <blt_brx_timing_update+0x8c>)
  42:	5818      	tloadr	r0, [r3, #0]
  44:	0b10      	tloadr	r3, [pc, #64]	; (88 <blt_brx_timing_update+0x88>)
  46:	581a      	tloadr	r2, [r3, #0]
  48:	e882      	tadds	r2, r0, r2
  4a:	501a      	tstorer	r2, [r3, #0]
  4c:	5825      	tloadr	r5, [r4, #0]
  4e:	f06d      	tshftls	r5, r5, #1
  50:	5025      	tstorer	r5, [r4, #0]
  52:	a103      	tmovs	r1, #3
  54:	97ff 9ffe 	tjl	0 <__udivsi3>
			54: R_TC32_CALL	__udivsi3
  58:	0285      	tcmp	r5, r0
  5a:	c900      	tjls.n	5e <blt_brx_timing_update+0x5e>
  5c:	5020      	tstorer	r0, [r4, #0]
  5e:	0b06      	tloadr	r3, [pc, #24]	; (78 <blt_brx_timing_update+0x78>)
  60:	581a      	tloadr	r2, [r3, #0]
  62:	0b0b      	tloadr	r3, [pc, #44]	; (90 <blt_brx_timing_update+0x90>)
  64:	501a      	tstorer	r2, [r3, #0]
  66:	0b0b      	tloadr	r3, [pc, #44]	; (94 <blt_brx_timing_update+0x94>)
  68:	a1fa      	tmovs	r1, #250	; 0xfa
  6a:	f149      	tshftls	r1, r1, #5
  6c:	e852      	tadds	r2, r2, r1
  6e:	f052      	tshftls	r2, r2, #1
  70:	5819      	tloadr	r1, [r3, #0]
  72:	e852      	tadds	r2, r2, r1
  74:	501a      	tstorer	r2, [r3, #0]
  76:	6d30      	tpop	{r4, r5, pc}
  78:	00000000 	tandeq	r0, r0, r0
			78: R_TC32_ABS32	.bss.variant.4244
  7c:	00007940 	tandeq	r7, r0, r0, asr #18
	...
			80: R_TC32_ABS32	blt_first_connection
			84: R_TC32_ABS32	.bss.ConnExpectDiff
			88: R_TC32_ABS32	blt_connExpectTime
			8c: R_TC32_ABS32	blt_conn_interval
			90: R_TC32_ABS32	blt_conn_tolerance_time
			94: R_TC32_ABS32	blt_conn_duration

Disassembly of section .text.blt_ll_channelTable_calc:

00000000 <blt_ll_channelTable_calc>:
blt_ll_channelTable_calc():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	608a      	tsub	sp, #40	; 0x28
   4:	f609      	tshftls	r1, r1, #24
   6:	fe09      	tshftrs	r1, r1, #24
   8:	a300      	tmovs	r3, #0
   a:	a400      	tmovs	r4, #0
   c:	a507      	tmovs	r5, #7
   e:	a201      	tmovs	r2, #1
  10:	e0de      	tasrs	r6, r3, #3
  12:	1d87      	tloadrb	r7, [r0, r6]
  14:	ec2e      	tadds	r6, r5, #0
  16:	001e      	tands	r6, r3
  18:	0137      	tasrs	r7, r6
  1a:	023a      	tnand	r2, r7
  1c:	c004      	tjeq.n	28 <blt_ll_channelTable_calc+0x28>
  1e:	066e      	tmov	r6, sp
  20:	1533      	tstorerb	r3, [r6, r4]
  22:	b401      	tadds	r4, #1
  24:	f624      	tshftls	r4, r4, #24
  26:	fe24      	tshftrs	r4, r4, #24
  28:	b301      	tadds	r3, #1
  2a:	ab25      	tcmp	r3, #37	; 0x25
  2c:	c1f0      	tjne.n	10 <blt_ll_channelTable_calc+0x10>
  2e:	0a13      	tloadr	r2, [pc, #76]	; (7c <blt_ll_channelTable_calc+0x7c>)
  30:	ec17      	tadds	r7, r2, #0
  32:	b725      	tadds	r7, #37	; 0x25
  34:	a300      	tmovs	r3, #0
  36:	e85b      	tadds	r3, r3, r1
  38:	f61b      	tshftls	r3, r3, #24
  3a:	fe1b      	tshftrs	r3, r3, #24
  3c:	ab24      	tcmp	r3, #36	; 0x24
  3e:	c902      	tjls.n	46 <blt_ll_channelTable_calc+0x46>
  40:	bb25      	tsubs	r3, #37	; 0x25
  42:	f61b      	tshftls	r3, r3, #24
  44:	fe1b      	tshftrs	r3, r3, #24
  46:	f8dd      	tshftrs	r5, r3, #3
  48:	1d45      	tloadrb	r5, [r0, r5]
  4a:	a607      	tmovs	r6, #7
  4c:	001e      	tands	r6, r3
  4e:	0135      	tasrs	r5, r6
  50:	ec2e      	tadds	r6, r5, #0
  52:	a501      	tmovs	r5, #1
  54:	0235      	tnand	r5, r6
  56:	c101      	tjne.n	5c <blt_ll_channelTable_calc+0x5c>
  58:	ec1d      	tadds	r5, r3, #0
  5a:	8004      	tj.n	66 <blt_ll_channelTable_calc+0x66>
  5c:	4013      	tstorerb	r3, [r2, #0]
  5e:	8007      	tj.n	70 <blt_ll_channelTable_calc+0x70>
  60:	eb2d      	tsubs	r5, r5, r4
  62:	f62d      	tshftls	r5, r5, #24
  64:	fe2d      	tshftrs	r5, r5, #24
  66:	02a5      	tcmp	r5, r4
  68:	c2fa      	tjcs.n	60 <blt_ll_channelTable_calc+0x60>
  6a:	066e      	tmov	r6, sp
  6c:	1d75      	tloadrb	r5, [r6, r5]
  6e:	4015      	tstorerb	r5, [r2, #0]
  70:	b201      	tadds	r2, #1
  72:	02ba      	tcmp	r2, r7
  74:	c1df      	tjne.n	36 <blt_ll_channelTable_calc+0x36>
  76:	600a      	tadd	sp, #40	; 0x28
  78:	6df0      	tpop	{r4, r5, r6, r7, pc}
  7a:	46c0      	tnop			; (mov r8, r8)
  7c:	00000000 	tandeq	r0, r0, r0
			7c: R_TC32_ABS32	blt_ll_channelTable

Disassembly of section .text.blt_next_channel:

00000000 <blt_next_channel>:
blt_next_channel():
   0:	0b07      	tloadr	r3, [pc, #28]	; (20 <blt_next_channel+0x20>)
   2:	481a      	tloadrb	r2, [r3, #0]
   4:	b201      	tadds	r2, #1
   6:	f612      	tshftls	r2, r2, #24
   8:	fe12      	tshftrs	r2, r2, #24
   a:	401a      	tstorerb	r2, [r3, #0]
   c:	aa24      	tcmp	r2, #36	; 0x24
   e:	c901      	tjls.n	14 <blt_next_channel+0x14>
  10:	ba25      	tsubs	r2, #37	; 0x25
  12:	401a      	tstorerb	r2, [r3, #0]
  14:	0b02      	tloadr	r3, [pc, #8]	; (20 <blt_next_channel+0x20>)
  16:	481b      	tloadrb	r3, [r3, #0]
  18:	0a02      	tloadr	r2, [pc, #8]	; (24 <blt_next_channel+0x24>)
  1a:	1cd0      	tloadrb	r0, [r2, r3]
  1c:	0770      	tjex	lr
  1e:	46c0      	tnop			; (mov r8, r8)
	...
			20: R_TC32_ABS32	blt_ll_chn_idx
			24: R_TC32_ABS32	blt_ll_channelTable

Disassembly of section .text.irq_blt_tx:

00000000 <irq_blt_tx>:
irq_blt_tx():
   0:	0b05      	tloadr	r3, [pc, #20]	; (18 <irq_blt_tx+0x18>)
   2:	581a      	tloadr	r2, [r3, #0]
   4:	0b05      	tloadr	r3, [pc, #20]	; (1c <irq_blt_tx+0x1c>)
   6:	501a      	tstorer	r2, [r3, #0]
   8:	a202      	tmovs	r2, #2
   a:	0b05      	tloadr	r3, [pc, #20]	; (20 <irq_blt_tx+0x20>)
   c:	201a      	tstorerh	r2, [r3, #0]
   e:	a201      	tmovs	r2, #1
  10:	0b04      	tloadr	r3, [pc, #16]	; (24 <irq_blt_tx+0x24>)
  12:	401a      	tstorerb	r2, [r3, #0]
  14:	0770      	tjex	lr
  16:	46c0      	tnop			; (mov r8, r8)
  18:	00800740 	taddeq	r0, r0, r0, asr #14
  1c:	00000000 	tandeq	r0, r0, r0
			1c: R_TC32_ABS32	.bss.tick_last_tx.4003
  20:	00800f20 	taddeq	r0, r0, r0, lsr #30
  24:	00000000 	tandeq	r0, r0, r0
			24: R_TC32_ABS32	.bss.blt_tx_send

Disassembly of section .text.blt_adv_init:

00000000 <blt_adv_init>:
blt_adv_init():
   0:	a200      	tmovs	r2, #0
   2:	0b0b      	tloadr	r3, [pc, #44]	; (30 <blt_adv_init+0x30>)
   4:	401a      	tstorerb	r2, [r3, #0]
   6:	0a0b      	tloadr	r2, [pc, #44]	; (34 <blt_adv_init+0x34>)
   8:	0b0b      	tloadr	r3, [pc, #44]	; (38 <blt_adv_init+0x38>)
   a:	501a      	tstorer	r2, [r3, #0]
   c:	0b0b      	tloadr	r3, [pc, #44]	; (3c <blt_adv_init+0x3c>)
   e:	481b      	tloadrb	r3, [r3, #0]
  10:	ab00      	tcmp	r3, #0
  12:	c001      	tjeq.n	18 <blt_adv_init+0x18>
  14:	0a0a      	tloadr	r2, [pc, #40]	; (40 <blt_adv_init+0x40>)
  16:	8000      	tj.n	1a <blt_adv_init+0x1a>
  18:	0a0a      	tloadr	r2, [pc, #40]	; (44 <blt_adv_init+0x44>)
  1a:	0b0b      	tloadr	r3, [pc, #44]	; (48 <blt_adv_init+0x48>)
  1c:	501a      	tstorer	r2, [r3, #0]
  1e:	0b0b      	tloadr	r3, [pc, #44]	; (4c <blt_adv_init+0x4c>)
  20:	581a      	tloadr	r2, [r3, #0]
  22:	0b0b      	tloadr	r3, [pc, #44]	; (50 <blt_adv_init+0x50>)
  24:	581b      	tloadr	r3, [r3, #0]
  26:	e8d2      	tadds	r2, r2, r3
  28:	0b0a      	tloadr	r3, [pc, #40]	; (54 <blt_adv_init+0x54>)
  2a:	501a      	tstorer	r2, [r3, #0]
  2c:	0770      	tjex	lr
  2e:	46c0      	tnop			; (mov r8, r8)
  30:	00000000 	tandeq	r0, r0, r0
			30: R_TC32_ABS32	.bss.blt_state
  34:	00aaaaaa 	taddceq	sl, sl, sl, lsr #21
	...
			38: R_TC32_ABS32	.bss.blt_crc_init
			3c: R_TC32_ABS32	w24g_mode_flag
  40:	322e3447 	txorcc	r3, lr, #1191182336	; 0x47000000
  44:	d6be898e 	tloadrtle	r8, [lr], lr, lsl #19
  48:	00800408 	taddeq	r0, r0, r8, lsl #8
  4c:	00800740 	taddeq	r0, r0, r0, asr #14
	...
			50: R_TC32_ABS32	.data.blt_adv_interval
			54: R_TC32_ABS32	blt_connExpectTime

Disassembly of section .text.blt_init_timing_hid:

00000000 <blt_init_timing_hid>:
blt_init_timing_hid():
   0:	0a01      	tloadr	r2, [pc, #4]	; (8 <blt_init_timing_hid+0x8>)
   2:	0b02      	tloadr	r3, [pc, #8]	; (c <blt_init_timing_hid+0xc>)
   4:	501a      	tstorer	r2, [r3, #0]
   6:	0770      	tjex	lr
	...
			8: R_TC32_ABS32	blt_brx_timing_update_hid
			c: R_TC32_ABS32	.bss.func_timing_update

Disassembly of section .text.blt_init_timing:

00000000 <blt_init_timing>:
blt_init_timing():
   0:	0a01      	tloadr	r2, [pc, #4]	; (8 <blt_init_timing+0x8>)
   2:	0b02      	tloadr	r3, [pc, #8]	; (c <blt_init_timing+0xc>)
   4:	501a      	tstorer	r2, [r3, #0]
   6:	0770      	tjex	lr
	...
			8: R_TC32_ABS32	blt_brx_timing_update
			c: R_TC32_ABS32	.bss.func_timing_update

Disassembly of section .text.blt_pn_init:

00000000 <blt_pn_init>:
blt_pn_init():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6082      	tsub	sp, #8
   4:	0b11      	tloadr	r3, [pc, #68]	; (4c <blt_pn_init+0x4c>)
   6:	4018      	tstorerb	r0, [r3, #0]
   8:	a340      	tmovs	r3, #64	; 0x40
   a:	0318      	tors	r0, r3
   c:	a300      	tmovs	r3, #0
   e:	3300      	tstorer	r3, [sp, #0]
  10:	a344      	tmovs	r3, #68	; 0x44
  12:	3301      	tstorer	r3, [sp, #4]
  14:	0b0e      	tloadr	r3, [pc, #56]	; (50 <blt_pn_init+0x50>)
  16:	ec1f      	tadds	r7, r3, #0
  18:	b72c      	tadds	r7, #44	; 0x2c
  1a:	a600      	tmovs	r6, #0
  1c:	501e      	tstorer	r6, [r3, #0]
  1e:	a100      	tmovs	r1, #0
  20:	a200      	tmovs	r2, #0
  22:	a401      	tmovs	r4, #1
  24:	0004      	tands	r4, r0
  26:	ec25      	tadds	r5, r4, #0
  28:	0095      	tshftls	r5, r2
  2a:	0329      	tors	r1, r5
  2c:	e040      	tasrs	r0, r0, #1
  2e:	f0a4      	tshftls	r4, r4, #2
  30:	7d02      	tadd	r5, sp, #8
  32:	e964      	tadds	r4, r4, r5
  34:	bc08      	tsubs	r4, #8
  36:	5824      	tloadr	r4, [r4, #0]
  38:	0060      	txors	r0, r4
  3a:	b201      	tadds	r2, #1
  3c:	aa20      	tcmp	r2, #32
  3e:	c1f0      	tjne.n	22 <blt_pn_init+0x22>
  40:	d302      	tstorem	r3!, {r1}
  42:	02bb      	tcmp	r3, r7
  44:	c1ea      	tjne.n	1c <blt_pn_init+0x1c>
  46:	6002      	tadd	sp, #8
  48:	6df0      	tpop	{r4, r5, r6, r7, pc}
  4a:	46c0      	tnop			; (mov r8, r8)
	...
			4c: R_TC32_ABS32	.bss.flag_pn_table_0
			50: R_TC32_ABS32	.data

Disassembly of section .ram_code:

00000000 <blt_packet_crc24>:
blt_packet_crc24():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	ec03      	tadds	r3, r0, #0
   4:	a501      	tmovs	r5, #1
   6:	0c09      	tloadr	r4, [pc, #36]	; (2c <blt_packet_crc24+0x2c>)
   8:	800b      	tj.n	22 <blt_packet_crc24+0x22>
   a:	4818      	tloadrb	r0, [r3, #0]
   c:	0042      	txors	r2, r0
   e:	b301      	tadds	r3, #1
  10:	a008      	tmovs	r0, #8
  12:	8004      	tj.n	1e <blt_packet_crc24+0x1e>
  14:	e056      	tasrs	r6, r2, #1
  16:	002a      	tands	r2, r5
  18:	0252      	tnegs	r2, r2
  1a:	0022      	tands	r2, r4
  1c:	0072      	txors	r2, r6
  1e:	b801      	tsubs	r0, #1
  20:	c2f8      	tjcs.n	14 <blt_packet_crc24+0x14>
  22:	b901      	tsubs	r1, #1
  24:	c2f1      	tjcs.n	a <blt_packet_crc24+0xa>
  26:	ec10      	tadds	r0, r2, #0
  28:	6d70      	tpop	{r4, r5, r6, pc}
  2a:	46c0      	tnop			; (mov r8, r8)
  2c:	00da6000 	tsubcseq	r6, sl, r0

00000030 <blt_packet_tx_pn_calc>:
blt_packet_tx_pn_calc():
  30:	6570      	tpush	{r4, r5, r6, lr}
  32:	484c      	tloadrb	r4, [r1, #1]
  34:	b405      	tadds	r4, #5
  36:	d010      	tstorem	r0!, {r4}
  38:	a300      	tmovs	r3, #0
  3a:	d920      	tloadm	r1!, {r5}
  3c:	da40      	tloadm	r2!, {r6}
  3e:	0075      	txors	r5, r6
  40:	d020      	tstorem	r0!, {r5}
  42:	b304      	tadds	r3, #4
  44:	02a3      	tcmp	r3, r4
  46:	cbf8      	tjlt.n	3a <blt_packet_tx_pn_calc+0xa>
  48:	6d70      	tpop	{r4, r5, r6, pc}

0000004a <blt_packet_tx_pn>:
blt_packet_tx_pn():
  4a:	6500      	tpush	{lr}
  4c:	0b02      	tloadr	r3, [pc, #8]	; (58 <blt_packet_tx_pn+0xe>)
  4e:	581a      	tloadr	r2, [r3, #0]
  50:	97ff 9ffe 	tjl	30 <blt_packet_tx_pn_calc>
			50: R_TC32_CALL	blt_packet_tx_pn_calc
  54:	6d00      	tpop	{pc}
  56:	46c0      	tnop			; (mov r8, r8)
  58:	00000000 	tandeq	r0, r0, r0
			58: R_TC32_ABS32	.data.current_pn_table

0000005c <scan_rsp_ykq>:
scan_rsp_ykq():
  5c:	6530      	tpush	{r4, r5, lr}
  5e:	4803      	tloadrb	r3, [r0, #0]
  60:	a10f      	tmovs	r1, #15
  62:	0019      	tands	r1, r3
  64:	0b12      	tloadr	r3, [pc, #72]	; (b0 <scan_rsp_ykq+0x54>)
  66:	581b      	tloadr	r3, [r3, #0]
  68:	281d      	tloadrh	r5, [r3, #0]
  6a:	2904      	tloadrh	r4, [r0, #8]
  6c:	a200      	tmovs	r2, #0
  6e:	02a5      	tcmp	r5, r4
  70:	c108      	tjne.n	84 <scan_rsp_ykq+0x28>
  72:	285d      	tloadrh	r5, [r3, #2]
  74:	2944      	tloadrh	r4, [r0, #10]
  76:	02a5      	tcmp	r5, r4
  78:	c104      	tjne.n	84 <scan_rsp_ykq+0x28>
  7a:	289a      	tloadrh	r2, [r3, #4]
  7c:	2983      	tloadrh	r3, [r0, #12]
  7e:	ead2      	tsubs	r2, r2, r3
  80:	0253      	tnegs	r3, r2
  82:	015a      	taddcs	r2, r3
  84:	aa00      	tcmp	r2, #0
  86:	c010      	tjeq.n	aa <scan_rsp_ykq+0x4e>
  88:	a903      	tcmp	r1, #3
  8a:	c10e      	tjne.n	aa <scan_rsp_ykq+0x4e>
  8c:	0b09      	tloadr	r3, [pc, #36]	; (b4 <scan_rsp_ykq+0x58>)
  8e:	5819      	tloadr	r1, [r3, #0]
  90:	0809      	tloadr	r0, [pc, #36]	; (b8 <scan_rsp_ykq+0x5c>)
  92:	97ff 9ffe 	tjl	4a <blt_packet_tx_pn>
			92: R_TC32_CALL	blt_packet_tx_pn
  96:	0a09      	tloadr	r2, [pc, #36]	; (bc <scan_rsp_ykq+0x60>)
  98:	a302      	tmovs	r3, #2
  9a:	2811      	tloadrh	r1, [r2, #0]
  9c:	020b      	tnand	r3, r1
  9e:	c0fc      	tjeq.n	9a <scan_rsp_ykq+0x3e>
  a0:	0807      	tloadr	r0, [pc, #28]	; (c0 <scan_rsp_ykq+0x64>)
  a2:	97ff 9ffe 	tjl	0 <task_ScanReq_Recieved>
			a2: R_TC32_CALL	task_ScanReq_Recieved
  a6:	a001      	tmovs	r0, #1
  a8:	8000      	tj.n	ac <scan_rsp_ykq+0x50>
  aa:	a000      	tmovs	r0, #0
  ac:	6d30      	tpop	{r4, r5, pc}
  ae:	46c0      	tnop			; (mov r8, r8)
	...
			b0: R_TC32_ABS32	.bss.blt_p_mac
			b4: R_TC32_ABS32	.bss.blt_p_rsp
  b8:	00808040 	taddeq	r8, r0, r0, asr #32
  bc:	00800f20 	taddeq	r0, r0, r0, lsr #30
  c0:	00808008 	taddeq	r8, r0, r8

000000c4 <blt_brx_sn_nesn>:
blt_brx_sn_nesn():
  c4:	6530      	tpush	{r4, r5, lr}
  c6:	0b33      	tloadr	r3, [pc, #204]	; (194 <blt_brx_sn_nesn+0xd0>)
  c8:	481a      	tloadrb	r2, [r3, #0]
  ca:	f891      	tshftrs	r1, r2, #2
  cc:	a301      	tmovs	r3, #1
  ce:	0019      	tands	r1, r3
  d0:	f8d2      	tshftrs	r2, r2, #3
  d2:	001a      	tands	r2, r3
  d4:	0b30      	tloadr	r3, [pc, #192]	; (198 <blt_brx_sn_nesn+0xd4>)
  d6:	4818      	tloadrb	r0, [r3, #0]
  d8:	0288      	tcmp	r0, r1
  da:	c00f      	tjeq.n	fc <blt_brx_sn_nesn+0x38>
  dc:	4019      	tstorerb	r1, [r3, #0]
  de:	0b2f      	tloadr	r3, [pc, #188]	; (19c <blt_brx_sn_nesn+0xd8>)
  e0:	481b      	tloadrb	r3, [r3, #0]
  e2:	ab00      	tcmp	r3, #0
  e4:	c007      	tjeq.n	f6 <blt_brx_sn_nesn+0x32>
  e6:	0b2e      	tloadr	r3, [pc, #184]	; (1a0 <blt_brx_sn_nesn+0xdc>)
  e8:	4819      	tloadrb	r1, [r3, #0]
  ea:	082e      	tloadr	r0, [pc, #184]	; (1a4 <blt_brx_sn_nesn+0xe0>)
  ec:	4800      	tloadrb	r0, [r0, #0]
  ee:	0288      	tcmp	r0, r1
  f0:	c001      	tjeq.n	f6 <blt_brx_sn_nesn+0x32>
  f2:	b101      	tadds	r1, #1
  f4:	4019      	tstorerb	r1, [r3, #0]
  f6:	a100      	tmovs	r1, #0
  f8:	0b2b      	tloadr	r3, [pc, #172]	; (1a8 <blt_brx_sn_nesn+0xe4>)
  fa:	8002      	tj.n	102 <blt_brx_sn_nesn+0x3e>
  fc:	0b2a      	tloadr	r3, [pc, #168]	; (1a8 <blt_brx_sn_nesn+0xe4>)
  fe:	4819      	tloadrb	r1, [r3, #0]
 100:	b101      	tadds	r1, #1
 102:	4019      	tstorerb	r1, [r3, #0]
 104:	0b29      	tloadr	r3, [pc, #164]	; (1ac <blt_brx_sn_nesn+0xe8>)
 106:	4819      	tloadrb	r1, [r3, #0]
 108:	a5ff      	tmovs	r5, #255	; 0xff
 10a:	0291      	tcmp	r1, r2
 10c:	c002      	tjeq.n	114 <blt_brx_sn_nesn+0x50>
 10e:	401a      	tstorerb	r2, [r3, #0]
 110:	0b27      	tloadr	r3, [pc, #156]	; (1b0 <blt_brx_sn_nesn+0xec>)
 112:	481d      	tloadrb	r5, [r3, #0]
 114:	0b20      	tloadr	r3, [pc, #128]	; (198 <blt_brx_sn_nesn+0xd4>)
 116:	481a      	tloadrb	r2, [r3, #0]
 118:	f052      	tshftls	r2, r2, #1
 11a:	0b24      	tloadr	r3, [pc, #144]	; (1ac <blt_brx_sn_nesn+0xe8>)
 11c:	481b      	tloadrb	r3, [r3, #0]
 11e:	0259      	tnegs	r1, r3
 120:	014b      	taddcs	r3, r1
 122:	031a      	tors	r2, r3
 124:	f612      	tshftls	r2, r2, #24
 126:	fe12      	tshftrs	r2, r2, #24
 128:	0b1d      	tloadr	r3, [pc, #116]	; (1a0 <blt_brx_sn_nesn+0xdc>)
 12a:	481b      	tloadrb	r3, [r3, #0]
 12c:	091d      	tloadr	r1, [pc, #116]	; (1a4 <blt_brx_sn_nesn+0xe0>)
 12e:	4809      	tloadrb	r1, [r1, #0]
 130:	eac9      	tsubs	r1, r1, r3
 132:	ee48      	tsubs	r0, r1, #1
 134:	0181      	tsubcs	r1, r0
 136:	0819      	tloadr	r0, [pc, #100]	; (19c <blt_brx_sn_nesn+0xd8>)
 138:	4001      	tstorerb	r1, [r0, #0]
 13a:	a900      	tcmp	r1, #0
 13c:	c00b      	tjeq.n	156 <blt_brx_sn_nesn+0x92>
 13e:	a403      	tmovs	r4, #3
 140:	001c      	tands	r4, r3
 142:	f0a1      	tshftls	r1, r4, #2
 144:	e889      	tadds	r1, r1, r2
 146:	f089      	tshftls	r1, r1, #2
 148:	0b1a      	tloadr	r3, [pc, #104]	; (1b4 <blt_brx_sn_nesn+0xf0>)
 14a:	18cb      	tloadr	r3, [r1, r3]
 14c:	a12c      	tmovs	r1, #44	; 0x2c
 14e:	034c      	tmuls	r4, r1
 150:	0919      	tloadr	r1, [pc, #100]	; (1b8 <blt_brx_sn_nesn+0xf4>)
 152:	e864      	tadds	r4, r4, r1
 154:	8003      	tj.n	15e <blt_brx_sn_nesn+0x9a>
 156:	f091      	tshftls	r1, r2, #2
 158:	0b18      	tloadr	r3, [pc, #96]	; (1bc <blt_brx_sn_nesn+0xf8>)
 15a:	18cb      	tloadr	r3, [r1, r3]
 15c:	0c18      	tloadr	r4, [pc, #96]	; (1c0 <blt_brx_sn_nesn+0xfc>)
 15e:	4820      	tloadrb	r0, [r4, #0]
 160:	a10c      	tmovs	r1, #12
 162:	0388      	tbclrs	r0, r1
 164:	f091      	tshftls	r1, r2, #2
 166:	ec02      	tadds	r2, r0, #0
 168:	030a      	tors	r2, r1
 16a:	4022      	tstorerb	r2, [r4, #0]
 16c:	4862      	tloadrb	r2, [r4, #1]
 16e:	b202      	tadds	r2, #2
 170:	e8a2      	tadds	r2, r4, r2
 172:	4013      	tstorerb	r3, [r2, #0]
 174:	fa19      	tshftrs	r1, r3, #8
 176:	4051      	tstorerb	r1, [r2, #1]
 178:	fc1b      	tshftrs	r3, r3, #16
 17a:	4093      	tstorerb	r3, [r2, #2]
 17c:	0811      	tloadr	r0, [pc, #68]	; (1c4 <blt_brx_sn_nesn+0x100>)
 17e:	ec21      	tadds	r1, r4, #0
 180:	97ff 9ffe 	tjl	4a <blt_packet_tx_pn>
			180: R_TC32_CALL	blt_packet_tx_pn
 184:	4860      	tloadrb	r0, [r4, #1]
 186:	b019      	tadds	r0, #25
 188:	f0c0      	tshftls	r0, r0, #3
 18a:	97ff 9ffe 	tjl	0 <sleep_us>
			18a: R_TC32_CALL	sleep_us
 18e:	f62d      	tshftls	r5, r5, #24
 190:	e628      	tasrs	r0, r5, #24
 192:	6d30      	tpop	{r4, r5, pc}
 194:	0080800c 	taddeq	r8, r0, ip
	...
			198: R_TC32_ABS32	blt_conn_sn_slave
			19c: R_TC32_ABS32	.bss.blt_tx_sending
			1a0: R_TC32_ABS32	blt_tx_rptr
			1a4: R_TC32_ABS32	blt_tx_wptr
			1a8: R_TC32_ABS32	.bss.blt_retry
			1ac: R_TC32_ABS32	blt_conn_sn_master
 1b0:	0080800d 	taddeq	r8, r0, sp
	...
			1b4: R_TC32_ABS32	blt_tx_crc
			1b8: R_TC32_ABS32	blt_tx_fifo
			1bc: R_TC32_ABS32	.bss.blt_tx_crc_empty
			1c0: R_TC32_ABS32	.data.blt_tx_empty_packet
 1c4:	00808040 	taddeq	r8, r0, r0, asr #32

000001c8 <blt_packet_rx>:
blt_packet_rx():
 1c8:	65f0      	tpush	{r4, r5, r6, r7, lr}
 1ca:	6086      	tsub	sp, #24
 1cc:	7b02      	tadd	r3, sp, #8
 1ce:	0a72      	tloadr	r2, [pc, #456]	; (398 <blt_packet_rx+0x1d0>)
 1d0:	ec19      	tadds	r1, r3, #0
 1d2:	da70      	tloadm	r2!, {r4, r5, r6}
 1d4:	d170      	tstorem	r1!, {r4, r5, r6}
 1d6:	5813      	tloadr	r3, [r2, #0]
 1d8:	500b      	tstorer	r3, [r1, #0]
 1da:	a2ff      	tmovs	r2, #255	; 0xff
 1dc:	0b6f      	tloadr	r3, [pc, #444]	; (39c <blt_packet_rx+0x1d4>)
 1de:	401a      	tstorerb	r2, [r3, #0]
 1e0:	a22c      	tmovs	r2, #44	; 0x2c
 1e2:	b302      	tadds	r3, #2
 1e4:	401a      	tstorerb	r2, [r3, #0]
 1e6:	a281      	tmovs	r2, #129	; 0x81
 1e8:	b322      	tadds	r3, #34	; 0x22
 1ea:	401a      	tstorerb	r2, [r3, #0]
 1ec:	a264      	tmovs	r2, #100	; 0x64
 1ee:	0b6c      	tloadr	r3, [pc, #432]	; (3a0 <blt_packet_rx+0x1d8>)
 1f0:	401a      	tstorerb	r2, [r3, #0]
 1f2:	0b6c      	tloadr	r3, [pc, #432]	; (3a4 <blt_packet_rx+0x1dc>)
 1f4:	a200      	tmovs	r2, #0
 1f6:	501a      	tstorer	r2, [r3, #0]
 1f8:	0a6b      	tloadr	r2, [pc, #428]	; (3a8 <blt_packet_rx+0x1e0>)
 1fa:	5812      	tloadr	r2, [r2, #0]
 1fc:	3200      	tstorer	r2, [sp, #0]
 1fe:	0a6b      	tloadr	r2, [pc, #428]	; (3ac <blt_packet_rx+0x1e4>)
 200:	5814      	tloadr	r4, [r2, #0]
 202:	ec19      	tadds	r1, r3, #0
 204:	80ba      	tj.n	37c <blt_packet_rx+0x1b4>
 206:	580d      	tloadr	r5, [r1, #0]
 208:	ad00      	tcmp	r5, #0
 20a:	c100      	tjne.n	20e <blt_packet_rx+0x46>
 20c:	80b6      	tj.n	37c <blt_packet_rx+0x1b4>
 20e:	0a68      	tloadr	r2, [pc, #416]	; (3b0 <blt_packet_rx+0x1e8>)
 210:	4811      	tloadrb	r1, [r2, #0]
 212:	7a02      	tadd	r2, sp, #8
 214:	a00f      	tmovs	r0, #15
 216:	0008      	tands	r0, r1
 218:	1c17      	tloadrb	r7, [r2, r0]
 21a:	f13f      	tshftls	r7, r7, #4
 21c:	f909      	tshftrs	r1, r1, #4
 21e:	1c52      	tloadrb	r2, [r2, r1]
 220:	0317      	tors	r7, r2
 222:	3800      	tloadr	r0, [sp, #0]
 224:	4842      	tloadrb	r2, [r0, #1]
 226:	0057      	txors	r7, r2
 228:	a23f      	tmovs	r2, #63	; 0x3f
 22a:	0017      	tands	r7, r2
 22c:	f63f      	tshftls	r7, r7, #24
 22e:	fe3d      	tshftrs	r5, r7, #24
 230:	a280      	tmovs	r2, #128	; 0x80
 232:	f4d2      	tshftls	r2, r2, #19
 234:	e8b9      	tadds	r1, r7, r2
 236:	fe09      	tshftrs	r1, r1, #24
 238:	0a5e      	tloadr	r2, [pc, #376]	; (3b4 <blt_packet_rx+0x1ec>)
 23a:	4011      	tstorerb	r1, [r2, #0]
 23c:	febf      	tshftrs	r7, r7, #26
 23e:	f0bf      	tshftls	r7, r7, #2
 240:	0c5d      	tloadr	r4, [pc, #372]	; (3b8 <blt_packet_rx+0x1f0>)
 242:	e93f      	tadds	r7, r7, r4
 244:	a200      	tmovs	r2, #0
 246:	503a      	tstorer	r2, [r7, #0]
 248:	581e      	tloadr	r6, [r3, #0]
 24a:	3601      	tstorer	r6, [sp, #4]
 24c:	0a5b      	tloadr	r2, [pc, #364]	; (3bc <blt_packet_rx+0x1f4>)
 24e:	5812      	tloadr	r2, [r2, #0]
 250:	ad0c      	tcmp	r5, #12
 252:	c927      	tjls.n	2a4 <blt_packet_rx+0xdc>
 254:	ec2e      	tadds	r6, r5, #0
 256:	b608      	tadds	r6, #8
 258:	e0f6      	tasrs	r6, r6, #3
 25a:	f0b6      	tshftls	r6, r6, #2
 25c:	f231      	tshftls	r1, r6, #8
 25e:	b981      	tsubs	r1, #129	; 0x81
 260:	b9ff      	tsubs	r1, #255	; 0xff
 262:	5818      	tloadr	r0, [r3, #0]
 264:	3c01      	tloadr	r4, [sp, #4]
 266:	eb00      	tsubs	r0, r0, r4
 268:	0288      	tcmp	r0, r1
 26a:	c3fa      	tjcc.n	262 <blt_packet_rx+0x9a>
 26c:	0b4d      	tloadr	r3, [pc, #308]	; (3a4 <blt_packet_rx+0x1dc>)
 26e:	a400      	tmovs	r4, #0
 270:	0694      	tmov	ip, r2
 272:	800e      	tj.n	292 <blt_packet_rx+0xca>
 274:	4818      	tloadrb	r0, [r3, #0]
 276:	7902      	tadd	r1, sp, #8
 278:	a20f      	tmovs	r2, #15
 27a:	0002      	tands	r2, r0
 27c:	1c8a      	tloadrb	r2, [r1, r2]
 27e:	f112      	tshftls	r2, r2, #4
 280:	f900      	tshftrs	r0, r0, #4
 282:	1c09      	tloadrb	r1, [r1, r0]
 284:	030a      	tors	r2, r1
 286:	3800      	tloadr	r0, [sp, #0]
 288:	1d01      	tloadrb	r1, [r0, r4]
 28a:	004a      	txors	r2, r1
 28c:	401a      	tstorerb	r2, [r3, #0]
 28e:	b401      	tadds	r4, #1
 290:	b301      	tadds	r3, #1
 292:	02b4      	tcmp	r4, r6
 294:	cbee      	tjlt.n	274 <blt_packet_rx+0xac>
 296:	0662      	tmov	r2, ip
 298:	0842      	tloadr	r0, [pc, #264]	; (3a4 <blt_packet_rx+0x1dc>)
 29a:	ec31      	tadds	r1, r6, #0
 29c:	97ff 9ffe 	tjl	0 <blt_packet_crc24>
			29c: R_TC32_CALL	blt_packet_crc24
 2a0:	ec02      	tadds	r2, r0, #0
 2a2:	8001      	tj.n	2a8 <blt_packet_rx+0xe0>
 2a4:	a600      	tmovs	r6, #0
 2a6:	a400      	tmovs	r4, #0
 2a8:	0b45      	tloadr	r3, [pc, #276]	; (3c0 <blt_packet_rx+0x1f8>)
 2aa:	481b      	tloadrb	r3, [r3, #0]
 2ac:	ab00      	tcmp	r3, #0
 2ae:	c006      	tjeq.n	2be <blt_packet_rx+0xf6>
 2b0:	a103      	tmovs	r1, #3
 2b2:	0029      	tands	r1, r5
 2b4:	f6c9      	tshftls	r1, r1, #27
 2b6:	a3a8      	tmovs	r3, #168	; 0xa8
 2b8:	f5db      	tshftls	r3, r3, #23
 2ba:	e8c9      	tadds	r1, r1, r3
 2bc:	8005      	tj.n	2ca <blt_packet_rx+0x102>
 2be:	a103      	tmovs	r1, #3
 2c0:	0029      	tands	r1, r5
 2c2:	f6c9      	tshftls	r1, r1, #27
 2c4:	a0aa      	tmovs	r0, #170	; 0xaa
 2c6:	f5c0      	tshftls	r0, r0, #23
 2c8:	e809      	tadds	r1, r1, r0
 2ca:	fe09      	tshftrs	r1, r1, #24
 2cc:	0b3d      	tloadr	r3, [pc, #244]	; (3c4 <blt_packet_rx+0x1fc>)
 2ce:	4019      	tstorerb	r1, [r3, #0]
 2d0:	ed69      	tadds	r1, r5, #5
 2d2:	f209      	tshftls	r1, r1, #8
 2d4:	5838      	tloadr	r0, [r7, #0]
 2d6:	a800      	tcmp	r0, #0
 2d8:	c107      	tjne.n	2ea <blt_packet_rx+0x122>
 2da:	0b34      	tloadr	r3, [pc, #208]	; (3ac <blt_packet_rx+0x1e4>)
 2dc:	581b      	tloadr	r3, [r3, #0]
 2de:	ec18      	tadds	r0, r3, #0
 2e0:	3b01      	tloadr	r3, [sp, #4]
 2e2:	eac0      	tsubs	r0, r0, r3
 2e4:	0684      	tmov	ip, r0
 2e6:	058c      	tcmp	ip, r1
 2e8:	c3f4      	tjcc.n	2d4 <blt_packet_rx+0x10c>
 2ea:	a180      	tmovs	r1, #128	; 0x80
 2ec:	0b36      	tloadr	r3, [pc, #216]	; (3c8 <blt_packet_rx+0x200>)
 2ee:	4019      	tstorerb	r1, [r3, #0]
 2f0:	a144      	tmovs	r1, #68	; 0x44
 2f2:	0b2b      	tloadr	r3, [pc, #172]	; (3a0 <blt_packet_rx+0x1d8>)
 2f4:	4019      	tstorerb	r1, [r3, #0]
 2f6:	a1f5      	tmovs	r1, #245	; 0xf5
 2f8:	0b28      	tloadr	r3, [pc, #160]	; (39c <blt_packet_rx+0x1d4>)
 2fa:	4019      	tstorerb	r1, [r3, #0]
 2fc:	a185      	tmovs	r1, #133	; 0x85
 2fe:	0b33      	tloadr	r3, [pc, #204]	; (3cc <blt_packet_rx+0x204>)
 300:	4019      	tstorerb	r1, [r3, #0]
 302:	a102      	tmovs	r1, #2
 304:	b320      	tadds	r3, #32
 306:	2019      	tstorerh	r1, [r3, #0]
 308:	0826      	tloadr	r0, [pc, #152]	; (3a4 <blt_packet_rx+0x1dc>)
 30a:	e823      	tadds	r3, r4, r0
 30c:	ed2f      	tadds	r7, r5, #4
 30e:	0694      	tmov	ip, r2
 310:	800e      	tj.n	330 <blt_packet_rx+0x168>
 312:	4818      	tloadrb	r0, [r3, #0]
 314:	7902      	tadd	r1, sp, #8
 316:	a20f      	tmovs	r2, #15
 318:	0002      	tands	r2, r0
 31a:	1c8a      	tloadrb	r2, [r1, r2]
 31c:	f112      	tshftls	r2, r2, #4
 31e:	f900      	tshftrs	r0, r0, #4
 320:	1c09      	tloadrb	r1, [r1, r0]
 322:	030a      	tors	r2, r1
 324:	3800      	tloadr	r0, [sp, #0]
 326:	1d01      	tloadrb	r1, [r0, r4]
 328:	004a      	txors	r2, r1
 32a:	401a      	tstorerb	r2, [r3, #0]
 32c:	b401      	tadds	r4, #1
 32e:	b301      	tadds	r3, #1
 330:	02a7      	tcmp	r7, r4
 332:	caee      	tjge.n	312 <blt_packet_rx+0x14a>
 334:	0662      	tmov	r2, ip
 336:	091b      	tloadr	r1, [pc, #108]	; (3a4 <blt_packet_rx+0x1dc>)
 338:	e870      	tadds	r0, r6, r1
 33a:	b502      	tadds	r5, #2
 33c:	eba9      	tsubs	r1, r5, r6
 33e:	97ff 9ffe 	tjl	0 <blt_packet_crc24>
			33e: R_TC32_CALL	blt_packet_crc24
 342:	0b1b      	tloadr	r3, [pc, #108]	; (3b0 <blt_packet_rx+0x1e8>)
 344:	481b      	tloadrb	r3, [r3, #0]
 346:	0a22      	tloadr	r2, [pc, #136]	; (3d0 <blt_packet_rx+0x208>)
 348:	e89b      	tadds	r3, r3, r2
 34a:	4859      	tloadrb	r1, [r3, #1]
 34c:	f209      	tshftls	r1, r1, #8
 34e:	489a      	tloadrb	r2, [r3, #2]
 350:	f412      	tshftls	r2, r2, #16
 352:	0311      	tors	r1, r2
 354:	481a      	tloadrb	r2, [r3, #0]
 356:	ec0b      	tadds	r3, r1, #0
 358:	0313      	tors	r3, r2
 35a:	0298      	tcmp	r0, r3
 35c:	c109      	tjne.n	372 <blt_packet_rx+0x1aa>
 35e:	0b18      	tloadr	r3, [pc, #96]	; (3c0 <blt_packet_rx+0x1f8>)
 360:	481b      	tloadrb	r3, [r3, #0]
 362:	a401      	tmovs	r4, #1
 364:	ab00      	tcmp	r3, #0
 366:	c013      	tjeq.n	390 <blt_packet_rx+0x1c8>
 368:	97ff 9ffe 	tjl	c4 <blt_brx_sn_nesn>
			368: R_TC32_CALL	blt_brx_sn_nesn
 36c:	0b19      	tloadr	r3, [pc, #100]	; (3d4 <blt_packet_rx+0x20c>)
 36e:	4018      	tstorerb	r0, [r3, #0]
 370:	800e      	tj.n	390 <blt_packet_rx+0x1c8>
 372:	a280      	tmovs	r2, #128	; 0x80
 374:	0b15      	tloadr	r3, [pc, #84]	; (3cc <blt_packet_rx+0x204>)
 376:	401a      	tstorerb	r2, [r3, #0]
 378:	a402      	tmovs	r4, #2
 37a:	8009      	tj.n	390 <blt_packet_rx+0x1c8>
 37c:	0b0b      	tloadr	r3, [pc, #44]	; (3ac <blt_packet_rx+0x1e4>)
 37e:	5815      	tloadr	r5, [r2, #0]
 380:	eb2d      	tsubs	r5, r5, r4
 382:	0285      	tcmp	r5, r0
 384:	c200      	tjcs.n	388 <blt_packet_rx+0x1c0>
 386:	873e      	tj.n	206 <blt_packet_rx+0x3e>
 388:	a280      	tmovs	r2, #128	; 0x80
 38a:	0b0f      	tloadr	r3, [pc, #60]	; (3c8 <blt_packet_rx+0x200>)
 38c:	401a      	tstorerb	r2, [r3, #0]
 38e:	a400      	tmovs	r4, #0
 390:	ec20      	tadds	r0, r4, #0
 392:	6006      	tadd	sp, #24
 394:	6df0      	tpop	{r4, r5, r6, r7, pc}
 396:	46c0      	tnop			; (mov r8, r8)
 398:	00000000 	tandeq	r0, r0, r0
			398: R_TC32_ABS32	.rodata.C.191.6366
 39c:	00800404 	taddeq	r0, r0, r4, lsl #8
 3a0:	00800f02 	taddeq	r0, r0, r2, lsl #30
 3a4:	0080800c 	taddeq	r8, r0, ip
 3a8:	00000000 	tandeq	r0, r0, r0
			3a8: R_TC32_ABS32	.data.current_pn_table
 3ac:	00800740 	taddeq	r0, r0, r0, asr #14
 3b0:	0080800d 	taddeq	r8, r0, sp
 3b4:	00800406 	taddeq	r0, r0, r6, lsl #8
 3b8:	00808010 	taddeq	r8, r0, r0, lsl r0
	...
			3bc: R_TC32_ABS32	.bss.blt_crc_init
			3c0: R_TC32_ABS32	.bss.blt_state
 3c4:	00800f04 	taddeq	r0, r0, r4, lsl #30
 3c8:	00800428 	taddeq	r0, r0, r8, lsr #8
 3cc:	00800f00 	taddeq	r0, r0, r0, lsl #30
 3d0:	0080800e 	taddeq	r8, r0, lr
 3d4:	00000000 	tandeq	r0, r0, r0
			3d4: R_TC32_ABS32	.data.blt_rx_len

000003d8 <blt_get_32k_tick>:
blt_get_32k_tick():
 3d8:	6530      	tpush	{r4, r5, lr}
 3da:	a020      	tmovs	r0, #32
 3dc:	97ff 9ffe 	tjl	0 <analog_read>
			3dc: R_TC32_CALL	analog_read
 3e0:	ec05      	tadds	r5, r0, #0
 3e2:	a020      	tmovs	r0, #32
 3e4:	97ff 9ffe 	tjl	0 <analog_read>
			3e4: R_TC32_CALL	analog_read
 3e8:	ec04      	tadds	r4, r0, #0
 3ea:	02a8      	tcmp	r0, r5
 3ec:	c0f9      	tjeq.n	3e2 <blt_get_32k_tick+0xa>
 3ee:	a021      	tmovs	r0, #33	; 0x21
 3f0:	97ff 9ffe 	tjl	0 <analog_read>
			3f0: R_TC32_CALL	analog_read
 3f4:	ec05      	tadds	r5, r0, #0
 3f6:	a022      	tmovs	r0, #34	; 0x22
 3f8:	97ff 9ffe 	tjl	0 <analog_read>
			3f8: R_TC32_CALL	analog_read
 3fc:	f22d      	tshftls	r5, r5, #8
 3fe:	f400      	tshftls	r0, r0, #16
 400:	0328      	tors	r0, r5
 402:	0320      	tors	r0, r4
 404:	6d30      	tpop	{r4, r5, pc}
 406:	46c0      	tnop			; (mov r8, r8)

Disassembly of section .text.blt_get_crc_table:

00000000 <blt_get_crc_table>:
blt_get_crc_table():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6081      	tsub	sp, #4
   4:	ec04      	tadds	r4, r0, #0
   6:	4843      	tloadrb	r3, [r0, #1]
   8:	ec0d      	tadds	r5, r1, #0
   a:	a600      	tmovs	r6, #0
   c:	b302      	tadds	r3, #2
   e:	3300      	tstorer	r3, [sp, #0]
  10:	0f08      	tloadr	r7, [pc, #32]	; (34 <blt_get_crc_table+0x34>)
  12:	f0b2      	tshftls	r2, r6, #2
  14:	4823      	tloadrb	r3, [r4, #0]
  16:	a10c      	tmovs	r1, #12
  18:	038b      	tbclrs	r3, r1
  1a:	0313      	tors	r3, r2
  1c:	4023      	tstorerb	r3, [r4, #0]
  1e:	583a      	tloadr	r2, [r7, #0]
  20:	ec20      	tadds	r0, r4, #0
  22:	3900      	tloadr	r1, [sp, #0]
  24:	97ff 9ffe 	tjl	0 <blt_get_crc_table>
			24: R_TC32_CALL	blt_packet_crc24
  28:	d501      	tstorem	r5!, {r0}
  2a:	b601      	tadds	r6, #1
  2c:	ae04      	tcmp	r6, #4
  2e:	c1f0      	tjne.n	12 <blt_get_crc_table+0x12>
  30:	6001      	tadd	sp, #4
  32:	6df0      	tpop	{r4, r5, r6, r7, pc}
  34:	00000000 	tandeq	r0, r0, r0
			34: R_TC32_ABS32	.bss.blt_crc_init

Disassembly of section .text.blt_push_notify_data:

00000000 <blt_push_notify_data>:
blt_push_notify_data():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	f400      	tshftls	r0, r0, #16
   4:	fc00      	tshftrs	r0, r0, #16
   6:	0b1e      	tloadr	r3, [pc, #120]	; (80 <blt_push_notify_data+0x80>)
   8:	481b      	tloadrb	r3, [r3, #0]
   a:	0c1e      	tloadr	r4, [pc, #120]	; (84 <blt_push_notify_data+0x84>)
   c:	4824      	tloadrb	r4, [r4, #0]
   e:	eb1c      	tsubs	r4, r3, r4
  10:	a507      	tmovs	r5, #7
  12:	002c      	tands	r4, r5
  14:	a600      	tmovs	r6, #0
  16:	ac03      	tcmp	r4, #3
  18:	cc2f      	tjgt.n	7a <blt_push_notify_data+0x7a>
  1a:	aa14      	tcmp	r2, #20
  1c:	cd00      	tjle.n	20 <blt_push_notify_data+0x20>
  1e:	a214      	tmovs	r2, #20
  20:	a403      	tmovs	r4, #3
  22:	0023      	tands	r3, r4
  24:	a42c      	tmovs	r4, #44	; 0x2c
  26:	035c      	tmuls	r4, r3
  28:	0d17      	tloadr	r5, [pc, #92]	; (88 <blt_push_notify_data+0x88>)
  2a:	e964      	tadds	r4, r4, r5
  2c:	a302      	tmovs	r3, #2
  2e:	4023      	tstorerb	r3, [r4, #0]
  30:	f616      	tshftls	r6, r2, #24
  32:	fe36      	tshftrs	r6, r6, #24
  34:	edf3      	tadds	r3, r6, #7
  36:	4063      	tstorerb	r3, [r4, #1]
  38:	ecd3      	tadds	r3, r2, #3
  3a:	2063      	tstorerh	r3, [r4, #2]
  3c:	a304      	tmovs	r3, #4
  3e:	20a3      	tstorerh	r3, [r4, #4]
  40:	a31b      	tmovs	r3, #27
  42:	41a3      	tstorerb	r3, [r4, #6]
  44:	41e0      	tstorerb	r0, [r4, #7]
  46:	a300      	tmovs	r3, #0
  48:	4223      	tstorerb	r3, [r4, #8]
  4a:	ec20      	tadds	r0, r4, #0
  4c:	b009      	tadds	r0, #9
  4e:	97ff 9ffe 	tjl	0 <memcpy>
			4e: R_TC32_CALL	memcpy
  52:	0b0e      	tloadr	r3, [pc, #56]	; (8c <blt_push_notify_data+0x8c>)
  54:	581b      	tloadr	r3, [r3, #0]
  56:	ab00      	tcmp	r3, #0
  58:	c002      	tjeq.n	60 <blt_push_notify_data+0x60>
  5a:	ec20      	tadds	r0, r4, #0
  5c:	9000 981a 	tjl	94 <blt_push_notify_data+0x94>
  60:	0d07      	tloadr	r5, [pc, #28]	; (80 <blt_push_notify_data+0x80>)
  62:	482b      	tloadrb	r3, [r5, #0]
  64:	a103      	tmovs	r1, #3
  66:	0019      	tands	r1, r3
  68:	f109      	tshftls	r1, r1, #4
  6a:	0b09      	tloadr	r3, [pc, #36]	; (90 <blt_push_notify_data+0x90>)
  6c:	e8c9      	tadds	r1, r1, r3
  6e:	ec20      	tadds	r0, r4, #0
  70:	97ff 9ffe 	tjl	0 <blt_push_notify_data>
			70: R_TC32_CALL	blt_get_crc_table
  74:	482b      	tloadrb	r3, [r5, #0]
  76:	b301      	tadds	r3, #1
  78:	402b      	tstorerb	r3, [r5, #0]
  7a:	ec30      	tadds	r0, r6, #0
  7c:	6d70      	tpop	{r4, r5, r6, pc}
  7e:	46c0      	tnop			; (mov r8, r8)
	...
			80: R_TC32_ABS32	blt_tx_wptr
			84: R_TC32_ABS32	blt_tx_rptr
			88: R_TC32_ABS32	blt_tx_fifo
			8c: R_TC32_ABS32	.bss.func_smp_enc
			90: R_TC32_ABS32	blt_tx_crc
  94:	0718      	tjex	r3
  96:	46c0      	tnop			; (mov r8, r8)

Disassembly of section .text.blt_packet_tx_crc:

00000000 <blt_packet_tx_crc>:
blt_packet_tx_crc():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	ec06      	tadds	r6, r0, #0
   4:	ec0c      	tadds	r4, r1, #0
   6:	484d      	tloadrb	r5, [r1, #1]
   8:	b502      	tadds	r5, #2
   a:	02a0      	tcmp	r0, r4
   c:	c002      	tjeq.n	14 <blt_packet_tx_crc+0x14>
   e:	ec2a      	tadds	r2, r5, #0
  10:	97ff 9ffe 	tjl	0 <memcpy>
			10: R_TC32_CALL	memcpy
  14:	0b06      	tloadr	r3, [pc, #24]	; (30 <blt_packet_tx_crc+0x30>)
  16:	581a      	tloadr	r2, [r3, #0]
  18:	ec20      	tadds	r0, r4, #0
  1a:	ec29      	tadds	r1, r5, #0
  1c:	97ff 9ffe 	tjl	0 <blt_packet_tx_crc>
			1c: R_TC32_CALL	blt_packet_crc24
  20:	e976      	tadds	r6, r6, r5
  22:	4030      	tstorerb	r0, [r6, #0]
  24:	e203      	tasrs	r3, r0, #8
  26:	4073      	tstorerb	r3, [r6, #1]
  28:	e400      	tasrs	r0, r0, #16
  2a:	40b0      	tstorerb	r0, [r6, #2]
  2c:	ec28      	tadds	r0, r5, #0
  2e:	6d70      	tpop	{r4, r5, r6, pc}
  30:	00000000 	tandeq	r0, r0, r0
			30: R_TC32_ABS32	.bss.blt_crc_init

Disassembly of section .text.blt_nm_set_adv:

00000000 <blt_nm_set_adv>:
blt_nm_set_adv():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	ec06      	tadds	r6, r0, #0
   4:	ec0d      	tadds	r5, r1, #0
   6:	b011      	tadds	r0, #17
   8:	0c11      	tloadr	r4, [pc, #68]	; (50 <blt_nm_set_adv+0x50>)
   a:	5821      	tloadr	r1, [r4, #0]
   c:	a204      	tmovs	r2, #4
   e:	97ff 9ffe 	tjl	0 <memcpy>
			e: R_TC32_CALL	memcpy
  12:	ec28      	tadds	r0, r5, #0
  14:	b00e      	tadds	r0, #14
  16:	5821      	tloadr	r1, [r4, #0]
  18:	a204      	tmovs	r2, #4
  1a:	97ff 9ffe 	tjl	0 <memcpy>
			1a: R_TC32_CALL	memcpy
  1e:	ecb0      	tadds	r0, r6, #2
  20:	5821      	tloadr	r1, [r4, #0]
  22:	a206      	tmovs	r2, #6
  24:	97ff 9ffe 	tjl	0 <memcpy>
			24: R_TC32_CALL	memcpy
  28:	eca8      	tadds	r0, r5, #2
  2a:	5821      	tloadr	r1, [r4, #0]
  2c:	a206      	tmovs	r2, #6
  2e:	97ff 9ffe 	tjl	0 <memcpy>
			2e: R_TC32_CALL	memcpy
  32:	a304      	tmovs	r3, #4
  34:	402b      	tstorerb	r3, [r5, #0]
  36:	0b07      	tloadr	r3, [pc, #28]	; (54 <blt_nm_set_adv+0x54>)
  38:	501e      	tstorer	r6, [r3, #0]
  3a:	ec30      	tadds	r0, r6, #0
  3c:	ec31      	tadds	r1, r6, #0
  3e:	97ff 9ffe 	tjl	0 <blt_nm_set_adv>
			3e: R_TC32_CALL	blt_packet_tx_crc
  42:	0b05      	tloadr	r3, [pc, #20]	; (58 <blt_nm_set_adv+0x58>)
  44:	501d      	tstorer	r5, [r3, #0]
  46:	ec28      	tadds	r0, r5, #0
  48:	ec29      	tadds	r1, r5, #0
  4a:	97ff 9ffe 	tjl	0 <blt_nm_set_adv>
			4a: R_TC32_CALL	blt_packet_tx_crc
  4e:	6d70      	tpop	{r4, r5, r6, pc}
	...
			50: R_TC32_ABS32	.bss.blt_p_mac
			54: R_TC32_ABS32	.bss.blt_p_adv
			58: R_TC32_ABS32	.bss.blt_p_rsp

Disassembly of section .text.blt_set_adv:

00000000 <blt_set_adv>:
blt_set_adv():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	ec06      	tadds	r6, r0, #0
   4:	ec0d      	tadds	r5, r1, #0
   6:	b002      	tadds	r0, #2
   8:	0c0c      	tloadr	r4, [pc, #48]	; (3c <blt_set_adv+0x3c>)
   a:	5821      	tloadr	r1, [r4, #0]
   c:	a206      	tmovs	r2, #6
   e:	97ff 9ffe 	tjl	0 <memcpy>
			e: R_TC32_CALL	memcpy
  12:	eca8      	tadds	r0, r5, #2
  14:	5821      	tloadr	r1, [r4, #0]
  16:	a206      	tmovs	r2, #6
  18:	97ff 9ffe 	tjl	0 <memcpy>
			18: R_TC32_CALL	memcpy
  1c:	a304      	tmovs	r3, #4
  1e:	402b      	tstorerb	r3, [r5, #0]
  20:	0b07      	tloadr	r3, [pc, #28]	; (40 <blt_set_adv+0x40>)
  22:	501e      	tstorer	r6, [r3, #0]
  24:	ec30      	tadds	r0, r6, #0
  26:	ec31      	tadds	r1, r6, #0
  28:	97ff 9ffe 	tjl	0 <blt_set_adv>
			28: R_TC32_CALL	blt_packet_tx_crc
  2c:	0b05      	tloadr	r3, [pc, #20]	; (44 <blt_set_adv+0x44>)
  2e:	501d      	tstorer	r5, [r3, #0]
  30:	ec28      	tadds	r0, r5, #0
  32:	ec29      	tadds	r1, r5, #0
  34:	97ff 9ffe 	tjl	0 <blt_set_adv>
			34: R_TC32_CALL	blt_packet_tx_crc
  38:	6d70      	tpop	{r4, r5, r6, pc}
  3a:	46c0      	tnop			; (mov r8, r8)
	...
			3c: R_TC32_ABS32	.bss.blt_p_mac
			40: R_TC32_ABS32	.bss.blt_p_adv
			44: R_TC32_ABS32	.bss.blt_p_rsp

Disassembly of section .text.blt_init:

00000000 <blt_init>:
blt_init():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	ec04      	tadds	r4, r0, #0
   4:	ec0d      	tadds	r5, r1, #0
   6:	ec16      	tadds	r6, r2, #0
   8:	0a14      	tloadr	r2, [pc, #80]	; (5c <blt_init+0x5c>)
   a:	0b15      	tloadr	r3, [pc, #84]	; (60 <blt_init+0x60>)
   c:	201a      	tstorerh	r2, [r3, #0]
   e:	a382      	tmovs	r3, #130	; 0x82
  10:	f05b      	tshftls	r3, r3, #1
  12:	0a14      	tloadr	r2, [pc, #80]	; (64 <blt_init+0x64>)
  14:	2013      	tstorerh	r3, [r2, #0]
  16:	a200      	tmovs	r2, #0
  18:	0b13      	tloadr	r3, [pc, #76]	; (68 <blt_init+0x68>)
  1a:	401a      	tstorerb	r2, [r3, #0]
  1c:	0913      	tloadr	r1, [pc, #76]	; (6c <blt_init+0x6c>)
  1e:	5808      	tloadr	r0, [r1, #0]
  20:	a380      	tmovs	r3, #128	; 0x80
  22:	f19b      	tshftls	r3, r3, #6
  24:	0303      	tors	r3, r0
  26:	500b      	tstorer	r3, [r1, #0]
  28:	0b11      	tloadr	r3, [pc, #68]	; (70 <blt_init+0x70>)
  2a:	201a      	tstorerh	r2, [r3, #0]
  2c:	0a11      	tloadr	r2, [pc, #68]	; (74 <blt_init+0x74>)
  2e:	0b12      	tloadr	r3, [pc, #72]	; (78 <blt_init+0x78>)
  30:	201a      	tstorerh	r2, [r3, #0]
  32:	0b12      	tloadr	r3, [pc, #72]	; (7c <blt_init+0x7c>)
  34:	581a      	tloadr	r2, [r3, #0]
  36:	b220      	tadds	r2, #32
  38:	0b11      	tloadr	r3, [pc, #68]	; (80 <blt_init+0x80>)
  3a:	501a      	tstorer	r2, [r3, #0]
  3c:	0b11      	tloadr	r3, [pc, #68]	; (84 <blt_init+0x84>)
  3e:	4819      	tloadrb	r1, [r3, #0]
  40:	a210      	tmovs	r2, #16
  42:	030a      	tors	r2, r1
  44:	f612      	tshftls	r2, r2, #24
  46:	fe12      	tshftrs	r2, r2, #24
  48:	401a      	tstorerb	r2, [r3, #0]
  4a:	97ff 9ffe 	tjl	0 <blt_init>
			4a: R_TC32_CALL	blt_adv_init
  4e:	0b0e      	tloadr	r3, [pc, #56]	; (88 <blt_init+0x88>)
  50:	501c      	tstorer	r4, [r3, #0]
  52:	ec28      	tadds	r0, r5, #0
  54:	ec31      	tadds	r1, r6, #0
  56:	97ff 9ffe 	tjl	0 <blt_init>
			56: R_TC32_CALL	blt_set_adv
  5a:	6d70      	tpop	{r4, r5, r6, pc}
  5c:	ffff8000 	undefined instruction 0xffff8000
  60:	00800508 	taddeq	r0, r0, r8, lsl #10
  64:	0080050a 	taddeq	r0, r0, sl, lsl #10
  68:	00800521 	taddeq	r0, r0, r1, lsr #10
  6c:	00800640 	taddeq	r0, r0, r0, asr #12
  70:	00800f1c 	taddeq	r0, r0, ip, lsl pc
  74:	ffff8040 	undefined instruction 0xffff8040
  78:	0080050c 	taddeq	r0, r0, ip, lsl #10
  7c:	00800740 	taddeq	r0, r0, r0, asr #14
  80:	01000f18 	tnandeq	r0, r8, lsl pc
  84:	00800f16 	taddeq	r0, r0, r6, lsl pc
  88:	00000000 	tandeq	r0, r0, r0
			88: R_TC32_ABS32	.bss.blt_p_mac

Disassembly of section .text.blt_set_channel:

00000000 <blt_set_channel>:
blt_set_channel():
   0:	6500      	tpush	{lr}
   2:	f600      	tshftls	r0, r0, #24
   4:	e603      	tasrs	r3, r0, #24
   6:	fe00      	tshftrs	r0, r0, #24
   8:	0a16      	tloadr	r2, [pc, #88]	; (64 <blt_set_channel+0x64>)
   a:	4010      	tstorerb	r0, [r2, #0]
   c:	ab0a      	tcmp	r3, #10
   e:	cc01      	tjgt.n	14 <blt_set_channel+0x14>
  10:	b002      	tadds	r0, #2
  12:	8002      	tj.n	1a <blt_set_channel+0x1a>
  14:	ab24      	tcmp	r3, #36	; 0x24
  16:	cc03      	tjgt.n	20 <blt_set_channel+0x20>
  18:	b003      	tadds	r0, #3
  1a:	f600      	tshftls	r0, r0, #24
  1c:	e600      	tasrs	r0, r0, #24
  1e:	8006      	tj.n	2e <blt_set_channel+0x2e>
  20:	a001      	tmovs	r0, #1
  22:	ab25      	tcmp	r3, #37	; 0x25
  24:	c003      	tjeq.n	2e <blt_set_channel+0x2e>
  26:	a028      	tmovs	r0, #40	; 0x28
  28:	ab26      	tcmp	r3, #38	; 0x26
  2a:	c100      	tjne.n	2e <blt_set_channel+0x2e>
  2c:	a00d      	tmovs	r0, #13
  2e:	a229      	tmovs	r2, #41	; 0x29
  30:	0b0d      	tloadr	r3, [pc, #52]	; (68 <blt_set_channel+0x68>)
  32:	401a      	tstorerb	r2, [r3, #0]
  34:	a280      	tmovs	r2, #128	; 0x80
  36:	0b0d      	tloadr	r3, [pc, #52]	; (6c <blt_set_channel+0x6c>)
  38:	401a      	tstorerb	r2, [r3, #0]
  3a:	a244      	tmovs	r2, #68	; 0x44
  3c:	0b0c      	tloadr	r3, [pc, #48]	; (70 <blt_set_channel+0x70>)
  3e:	401a      	tstorerb	r2, [r3, #0]
  40:	f640      	tshftls	r0, r0, #25
  42:	e600      	tasrs	r0, r0, #24
  44:	a296      	tmovs	r2, #150	; 0x96
  46:	f112      	tshftls	r2, r2, #4
  48:	e883      	tadds	r3, r0, r2
  4a:	f419      	tshftls	r1, r3, #16
  4c:	fc09      	tshftrs	r1, r1, #16
  4e:	0a09      	tloadr	r2, [pc, #36]	; (74 <blt_set_channel+0x74>)
  50:	2011      	tstorerh	r1, [r2, #0]
  52:	0a09      	tloadr	r2, [pc, #36]	; (78 <blt_set_channel+0x78>)
  54:	0353      	tmuls	r3, r2
  56:	0a09      	tloadr	r2, [pc, #36]	; (7c <blt_set_channel+0x7c>)
  58:	e89b      	tadds	r3, r3, r2
  5a:	0a09      	tloadr	r2, [pc, #36]	; (80 <blt_set_channel+0x80>)
  5c:	5013      	tstorer	r3, [r2, #0]
  5e:	97ff 9ffe 	tjl	0 <rf_set_tp_gain>
			5e: R_TC32_CALL	rf_set_tp_gain
  62:	6d00      	tpop	{pc}
  64:	00000000 	tandeq	r0, r0, r0
			64: R_TC32_ABS32	.bss.flag_channel_current
  68:	01000f16 	tnandeq	r0, r6, lsl pc
  6c:	01000428 	tnandeq	r0, r8, lsr #8
  70:	01000f02 	tnandeq	r0, r2, lsl #30
  74:	010004d6 	undefined instruction 0x010004d6
  78:	0000e38e 	tandeq	lr, r0, lr, lsl #7
  7c:	fffe3d49 	undefined instruction 0xfffe3d49
  80:	010004d0 	undefined instruction 0x010004d0

Disassembly of section .text.blt_set_adv_interval:

00000000 <blt_set_adv_interval>:
blt_set_adv_interval():
   0:	f140      	tshftls	r0, r0, #5
   2:	0b05      	tloadr	r3, [pc, #20]	; (18 <blt_set_adv_interval+0x18>)
   4:	5018      	tstorer	r0, [r3, #0]
   6:	0b05      	tloadr	r3, [pc, #20]	; (1c <blt_set_adv_interval+0x1c>)
   8:	5018      	tstorer	r0, [r3, #0]
   a:	a200      	tmovs	r2, #0
   c:	b30c      	tadds	r3, #12
   e:	501a      	tstorer	r2, [r3, #0]
  10:	a202      	tmovs	r2, #2
  12:	bb11      	tsubs	r3, #17
  14:	401a      	tstorerb	r2, [r3, #0]
  16:	0770      	tjex	lr
  18:	00000000 	tandeq	r0, r0, r0
			18: R_TC32_ABS32	.data.blt_adv_interval
  1c:	00800628 	taddeq	r0, r0, r8, lsr #12

Disassembly of section .text.blt_enable_adv_latency:

00000000 <blt_enable_adv_latency>:
blt_enable_adv_latency():
   0:	a204      	tmovs	r2, #4
   2:	0b01      	tloadr	r3, [pc, #4]	; (8 <blt_enable_adv_latency+0x8>)
   4:	401a      	tstorerb	r2, [r3, #0]
   6:	0770      	tjex	lr
   8:	00000000 	tandeq	r0, r0, r0
			8: R_TC32_ABS32	.bss.blt_adv_latency

Disassembly of section .text.blt_set_adv_channel:

00000000 <blt_set_adv_channel>:
blt_set_adv_channel():
   0:	0b01      	tloadr	r3, [pc, #4]	; (8 <blt_set_adv_channel+0x8>)
   2:	4018      	tstorerb	r0, [r3, #0]
   4:	0770      	tjex	lr
   6:	46c0      	tnop			; (mov r8, r8)
   8:	00000000 	tandeq	r0, r0, r0
			8: R_TC32_ABS32	.data.blt_adv_chn_mask

Disassembly of section .text.blt_set_adv_type:

00000000 <blt_set_adv_type>:
blt_set_adv_type():
   0:	6500      	tpush	{lr}
   2:	0b04      	tloadr	r3, [pc, #16]	; (14 <blt_set_adv_type+0x14>)
   4:	581a      	tloadr	r2, [r3, #0]
   6:	4010      	tstorerb	r0, [r2, #0]
   8:	5818      	tloadr	r0, [r3, #0]
   a:	0b03      	tloadr	r3, [pc, #12]	; (18 <blt_set_adv_type+0x18>)
   c:	5819      	tloadr	r1, [r3, #0]
   e:	97ff 9ffe 	tjl	0 <blt_set_adv_type>
			e: R_TC32_CALL	blt_set_adv
  12:	6d00      	tpop	{pc}
	...
			14: R_TC32_ABS32	.bss.blt_p_adv
			18: R_TC32_ABS32	.bss.blt_p_rsp

Disassembly of section .text.blt_stall_mcu:

00000000 <blt_stall_mcu>:
blt_stall_mcu():
   0:	6510      	tpush	{r4, lr}
   2:	a200      	tmovs	r2, #0
   4:	0b0f      	tloadr	r3, [pc, #60]	; (44 <blt_stall_mcu+0x44>)
   6:	501a      	tstorer	r2, [r3, #0]
   8:	bb0c      	tsubs	r3, #12
   a:	5018      	tstorer	r0, [r3, #0]
   c:	bb08      	tsubs	r3, #8
   e:	4819      	tloadrb	r1, [r3, #0]
  10:	a208      	tmovs	r2, #8
  12:	030a      	tors	r2, r1
  14:	f612      	tshftls	r2, r2, #24
  16:	fe12      	tshftrs	r2, r2, #24
  18:	401a      	tstorerb	r2, [r3, #0]
  1a:	0a0b      	tloadr	r2, [pc, #44]	; (48 <blt_stall_mcu+0x48>)
  1c:	4814      	tloadrb	r4, [r2, #0]
  1e:	a102      	tmovs	r1, #2
  20:	a002      	tmovs	r0, #2
  22:	0320      	tors	r0, r4
  24:	f600      	tshftls	r0, r0, #24
  26:	fe00      	tshftrs	r0, r0, #24
  28:	4010      	tstorerb	r0, [r2, #0]
  2a:	0a08      	tloadr	r2, [pc, #32]	; (4c <blt_stall_mcu+0x4c>)
  2c:	4011      	tstorerb	r1, [r2, #0]
  2e:	a480      	tmovs	r4, #128	; 0x80
  30:	0807      	tloadr	r0, [pc, #28]	; (50 <blt_stall_mcu+0x50>)
  32:	4004      	tstorerb	r4, [r0, #0]
  34:	06c0      	tmov	r8, r8
  36:	06c0      	tmov	r8, r8
  38:	4011      	tstorerb	r1, [r2, #0]
  3a:	481a      	tloadrb	r2, [r3, #0]
  3c:	a108      	tmovs	r1, #8
  3e:	038a      	tbclrs	r2, r1
  40:	401a      	tstorerb	r2, [r3, #0]
  42:	6d10      	tpop	{r4, pc}
  44:	00800634 	taddeq	r0, r0, r4, lsr r6
  48:	00800078 	taddeq	r0, r0, r8, ror r0
  4c:	00800623 	taddeq	r0, r0, r3, lsr #12
  50:	0080006f 	taddeq	r0, r0, pc, rrx

Disassembly of section .text.blt_change_system_clock:

00000000 <blt_change_system_clock>:
blt_change_system_clock():
   0:	6500      	tpush	{lr}
   2:	ec01      	tadds	r1, r0, #0
   4:	0805      	tloadr	r0, [pc, #20]	; (1c <blt_change_system_clock+0x1c>)
   6:	97ff 9ffe 	tjl	0 <__udivsi3>
			6: R_TC32_CALL	__udivsi3
   a:	a31f      	tmovs	r3, #31
   c:	0018      	tands	r0, r3
   e:	a320      	tmovs	r3, #32
  10:	0318      	tors	r0, r3
  12:	f600      	tshftls	r0, r0, #24
  14:	fe00      	tshftrs	r0, r0, #24
  16:	0b02      	tloadr	r3, [pc, #8]	; (20 <__udivsi3+0x20>)
  18:	4018      	tstorerb	r0, [r3, #0]
  1a:	6d00      	tpop	{pc}
  1c:	0b71b000 	tjleq	1c6c024 <__udivsi3+0x1c6c024>
  20:	00800066 	taddeq	r0, r0, r6, rrx

Disassembly of section .text.blt_send_adv:

00000000 <blt_send_adv>:
blt_send_adv():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6083      	tsub	sp, #12
   4:	3002      	tstorer	r0, [sp, #8]
   6:	0bae      	tloadr	r3, [pc, #696]	; (2c0 <blt_send_adv+0x2c0>)
   8:	581b      	tloadr	r3, [r3, #0]
   a:	0aae      	tloadr	r2, [pc, #696]	; (2c4 <blt_send_adv+0x2c4>)
   c:	5812      	tloadr	r2, [r2, #0]
   e:	08ae      	tloadr	r0, [pc, #696]	; (2c8 <blt_send_adv+0x2c8>)
  10:	e812      	tadds	r2, r2, r0
  12:	ead2      	tsubs	r2, r2, r3
  14:	a000      	tmovs	r0, #0
  16:	0bad      	tloadr	r3, [pc, #692]	; (2cc <blt_send_adv+0x2cc>)
  18:	029a      	tcmp	r2, r3
  1a:	c800      	tjhi.n	1e <blt_send_adv+0x1e>
  1c:	814e      	tj.n	2bc <blt_send_adv+0x2bc>
  1e:	0bac      	tloadr	r3, [pc, #688]	; (2d0 <blt_send_adv+0x2d0>)
  20:	581b      	tloadr	r3, [r3, #0]
  22:	485b      	tloadrb	r3, [r3, #1]
  24:	f21b      	tshftls	r3, r3, #8
  26:	a182      	tmovs	r1, #130	; 0x82
  28:	f189      	tshftls	r1, r1, #6
  2a:	e8c9      	tadds	r1, r1, r3
  2c:	3101      	tstorer	r1, [sp, #4]
  2e:	a425      	tmovs	r4, #37	; 0x25
  30:	ec23      	tadds	r3, r4, #0
  32:	bb25      	tsubs	r3, #37	; 0x25
  34:	3a02      	tloadr	r2, [sp, #8]
  36:	011a      	tasrs	r2, r3
  38:	a501      	tmovs	r5, #1
  3a:	0215      	tnand	r5, r2
  3c:	c100      	tjne.n	40 <blt_send_adv+0x40>
  3e:	812b      	tj.n	298 <blt_send_adv+0x298>
  40:	a380      	tmovs	r3, #128	; 0x80
  42:	08a4      	tloadr	r0, [pc, #656]	; (2d4 <blt_send_adv+0x2d4>)
  44:	4003      	tstorerb	r3, [r0, #0]
  46:	0da4      	tloadr	r5, [pc, #656]	; (2d8 <blt_send_adv+0x2d8>)
  48:	402b      	tstorerb	r3, [r5, #0]
  4a:	a2f5      	tmovs	r2, #245	; 0xf5
  4c:	0ba3      	tloadr	r3, [pc, #652]	; (2dc <blt_send_adv+0x2dc>)
  4e:	401a      	tstorerb	r2, [r3, #0]
  50:	ec20      	tadds	r0, r4, #0
  52:	97ff 9ffe 	tjl	0 <blt_send_adv>
			52: R_TC32_CALL	blt_set_channel
  56:	ec20      	tadds	r0, r4, #0
  58:	09a1      	tloadr	r1, [pc, #644]	; (2e0 <blt_send_adv+0x2e0>)
  5a:	97ff 9ffe 	tjl	0 <blt_send_adv>
			5a: R_TC32_CALL	blt_pn_init
  5e:	0ea1      	tloadr	r6, [pc, #644]	; (2e4 <blt_send_adv+0x2e4>)
  60:	a302      	tmovs	r3, #2
  62:	2033      	tstorerh	r3, [r6, #0]
  64:	0b9a      	tloadr	r3, [pc, #616]	; (2d0 <blt_send_adv+0x2d0>)
  66:	5819      	tloadr	r1, [r3, #0]
  68:	089f      	tloadr	r0, [pc, #636]	; (2e8 <blt_send_adv+0x2e8>)
  6a:	97ff 9ffe 	tjl	4a <blt_send_adv+0x4a>
			6a: R_TC32_CALL	blt_packet_tx_pn
  6e:	0b94      	tloadr	r3, [pc, #592]	; (2c0 <blt_send_adv+0x2c0>)
  70:	5819      	tloadr	r1, [r3, #0]
  72:	a285      	tmovs	r2, #133	; 0x85
  74:	402a      	tstorerb	r2, [r5, #0]
  76:	a202      	tmovs	r2, #2
  78:	2830      	tloadrh	r0, [r6, #0]
  7a:	0202      	tnand	r2, r0
  7c:	c104      	tjne.n	88 <blt_send_adv+0x88>
  7e:	5818      	tloadr	r0, [r3, #0]
  80:	ea40      	tsubs	r0, r0, r1
  82:	3d01      	tloadr	r5, [sp, #4]
  84:	02a8      	tcmp	r0, r5
  86:	c3f7      	tjcc.n	78 <blt_send_adv+0x78>
  88:	0b91      	tloadr	r3, [pc, #580]	; (2d0 <blt_send_adv+0x2d0>)
  8a:	581b      	tloadr	r3, [r3, #0]
  8c:	481b      	tloadrb	r3, [r3, #0]
  8e:	a60f      	tmovs	r6, #15
  90:	0033      	tands	r3, r6
  92:	ab02      	tcmp	r3, #2
  94:	c100      	tjne.n	98 <blt_send_adv+0x98>
  96:	80ff      	tj.n	298 <blt_send_adv+0x298>
  98:	a780      	tmovs	r7, #128	; 0x80
  9a:	088f      	tloadr	r0, [pc, #572]	; (2d8 <blt_send_adv+0x2d8>)
  9c:	4007      	tstorerb	r7, [r0, #0]
  9e:	a0ff      	tmovs	r0, #255	; 0xff
  a0:	f140      	tshftls	r0, r0, #5
  a2:	a101      	tmovs	r1, #1
  a4:	97ff 9ffe 	tjl	1c8 <blt_send_adv+0x1c8>
			a4: R_TC32_CALL	blt_packet_rx
  a8:	3000      	tstorer	r0, [sp, #0]
  aa:	a801      	tcmp	r0, #1
  ac:	c000      	tjeq.n	b0 <blt_send_adv+0xb0>
  ae:	80f3      	tj.n	298 <blt_send_adv+0x298>
  b0:	0d8e      	tloadr	r5, [pc, #568]	; (2ec <blt_send_adv+0x2ec>)
  b2:	ec28      	tadds	r0, r5, #0
  b4:	97ff 9ffe 	tjl	5c <blt_send_adv+0x5c>
			b4: R_TC32_CALL	scan_rsp_ykq
  b8:	f600      	tshftls	r0, r0, #24
  ba:	fe00      	tshftrs	r0, r0, #24
  bc:	a800      	tcmp	r0, #0
  be:	c000      	tjeq.n	c2 <blt_send_adv+0xc2>
  c0:	80ea      	tj.n	298 <blt_send_adv+0x298>
  c2:	0b8b      	tloadr	r3, [pc, #556]	; (2f0 <blt_send_adv+0x2f0>)
  c4:	581b      	tloadr	r3, [r3, #0]
  c6:	2819      	tloadrh	r1, [r3, #0]
  c8:	0a8a      	tloadr	r2, [pc, #552]	; (2f4 <blt_send_adv+0x2f4>)
  ca:	2812      	tloadrh	r2, [r2, #0]
  cc:	0291      	tcmp	r1, r2
  ce:	c000      	tjeq.n	d2 <blt_send_adv+0xd2>
  d0:	80e2      	tj.n	298 <blt_send_adv+0x298>
  d2:	2859      	tloadrh	r1, [r3, #2]
  d4:	0a88      	tloadr	r2, [pc, #544]	; (2f8 <blt_send_adv+0x2f8>)
  d6:	2812      	tloadrh	r2, [r2, #0]
  d8:	0291      	tcmp	r1, r2
  da:	c000      	tjeq.n	de <blt_send_adv+0xde>
  dc:	80dc      	tj.n	298 <blt_send_adv+0x298>
  de:	289a      	tloadrh	r2, [r3, #4]
  e0:	0b86      	tloadr	r3, [pc, #536]	; (2fc <blt_send_adv+0x2fc>)
  e2:	281b      	tloadrh	r3, [r3, #0]
  e4:	029a      	tcmp	r2, r3
  e6:	c000      	tjeq.n	ea <blt_send_adv+0xea>
  e8:	80d6      	tj.n	298 <blt_send_adv+0x298>
  ea:	482b      	tloadrb	r3, [r5, #0]
  ec:	001e      	tands	r6, r3
  ee:	ae05      	tcmp	r6, #5
  f0:	c000      	tjeq.n	f4 <blt_send_adv+0xf4>
  f2:	80d5      	tj.n	2a0 <blt_send_adv+0x2a0>
  f4:	0a78      	tloadr	r2, [pc, #480]	; (2d8 <blt_send_adv+0x2d8>)
  f6:	4017      	tstorerb	r7, [r2, #0]
  f8:	0b81      	tloadr	r3, [pc, #516]	; (300 <blt_send_adv+0x300>)
  fa:	581a      	tloadr	r2, [r3, #0]
  fc:	0b81      	tloadr	r3, [pc, #516]	; (304 <blt_send_adv+0x304>)
  fe:	b201      	tadds	r2, #1
 100:	c103      	tjne.n	10a <blt_send_adv+0x10a>
 102:	066d      	tmov	r5, sp
 104:	482d      	tloadrb	r5, [r5, #0]
 106:	401d      	tstorerb	r5, [r3, #0]
 108:	8000      	tj.n	10c <blt_send_adv+0x10c>
 10a:	4018      	tstorerb	r0, [r3, #0]
 10c:	0a7e      	tloadr	r2, [pc, #504]	; (308 <blt_send_adv+0x308>)
 10e:	0b7f      	tloadr	r3, [pc, #508]	; (30c <blt_send_adv+0x30c>)
 110:	201a      	tstorerh	r2, [r3, #0]
 112:	a201      	tmovs	r2, #1
 114:	0b7e      	tloadr	r3, [pc, #504]	; (310 <blt_send_adv+0x310>)
 116:	401a      	tstorerb	r2, [r3, #0]
 118:	a300      	tmovs	r3, #0
 11a:	a000      	tmovs	r0, #0
 11c:	097d      	tloadr	r1, [pc, #500]	; (314 <blt_send_adv+0x314>)
 11e:	2008      	tstorerh	r0, [r1, #0]
 120:	a110      	tmovs	r1, #16
 122:	087d      	tloadr	r0, [pc, #500]	; (318 <blt_send_adv+0x318>)
 124:	4001      	tstorerb	r1, [r0, #0]
 126:	087d      	tloadr	r0, [pc, #500]	; (31c <blt_send_adv+0x31c>)
 128:	4001      	tstorerb	r1, [r0, #0]
 12a:	097d      	tloadr	r1, [pc, #500]	; (320 <blt_send_adv+0x320>)
 12c:	400b      	tstorerb	r3, [r1, #0]
 12e:	097d      	tloadr	r1, [pc, #500]	; (324 <blt_send_adv+0x324>)
 130:	400b      	tstorerb	r3, [r1, #0]
 132:	097d      	tloadr	r1, [pc, #500]	; (328 <blt_send_adv+0x328>)
 134:	400b      	tstorerb	r3, [r1, #0]
 136:	097d      	tloadr	r1, [pc, #500]	; (32c <blt_send_adv+0x32c>)
 138:	400a      	tstorerb	r2, [r1, #0]
 13a:	0c7d      	tloadr	r4, [pc, #500]	; (330 <blt_send_adv+0x330>)
 13c:	4d21      	tloadrb	r1, [r4, #20]
 13e:	f209      	tshftls	r1, r1, #8
 140:	4ce2      	tloadrb	r2, [r4, #19]
 142:	f412      	tshftls	r2, r2, #16
 144:	0311      	tors	r1, r2
 146:	4d62      	tloadrb	r2, [r4, #21]
 148:	0311      	tors	r1, r2
 14a:	4ca2      	tloadrb	r2, [r4, #18]
 14c:	f612      	tshftls	r2, r2, #24
 14e:	0311      	tors	r1, r2
 150:	0a78      	tloadr	r2, [pc, #480]	; (334 <blt_send_adv+0x334>)
 152:	5011      	tstorer	r1, [r2, #0]
 154:	4f22      	tloadrb	r2, [r4, #28]
 156:	4f60      	tloadrb	r0, [r4, #29]
 158:	f200      	tshftls	r0, r0, #8
 15a:	0310      	tors	r0, r2
 15c:	0976      	tloadr	r1, [pc, #472]	; (338 <blt_send_adv+0x338>)
 15e:	0348      	tmuls	r0, r1
 160:	0a76      	tloadr	r2, [pc, #472]	; (33c <blt_send_adv+0x33c>)
 162:	5010      	tstorer	r0, [r2, #0]
 164:	0a56      	tloadr	r2, [pc, #344]	; (2c0 <blt_send_adv+0x2c0>)
 166:	5810      	tloadr	r0, [r2, #0]
 168:	b041      	tadds	r0, #65	; 0x41
 16a:	b0ff      	tadds	r0, #255	; 0xff
 16c:	4ea6      	tloadrb	r6, [r4, #26]
 16e:	4ee5      	tloadrb	r5, [r4, #27]
 170:	f22d      	tshftls	r5, r5, #8
 172:	0335      	tors	r5, r6
 174:	034d      	tmuls	r5, r1
 176:	e945      	tadds	r5, r0, r5
 178:	0852      	tloadr	r0, [pc, #328]	; (2c4 <blt_send_adv+0x2c4>)
 17a:	5005      	tstorer	r5, [r0, #0]
 17c:	4e60      	tloadrb	r0, [r4, #25]
 17e:	0341      	tmuls	r1, r0
 180:	086f      	tloadr	r0, [pc, #444]	; (340 <blt_send_adv+0x340>)
 182:	e809      	tadds	r1, r1, r0
 184:	086f      	tloadr	r0, [pc, #444]	; (344 <blt_send_adv+0x344>)
 186:	5001      	tstorer	r1, [r0, #0]
 188:	096f      	tloadr	r1, [pc, #444]	; (348 <blt_send_adv+0x348>)
 18a:	4fc8      	tloadrb	r0, [r1, #31]
 18c:	b101      	tadds	r1, #1
 18e:	4fc9      	tloadrb	r1, [r1, #31]
 190:	f209      	tshftls	r1, r1, #8
 192:	0301      	tors	r1, r0
 194:	f148      	tshftls	r0, r1, #5
 196:	ea40      	tsubs	r0, r0, r1
 198:	f080      	tshftls	r0, r0, #2
 19a:	e841      	tadds	r1, r0, r1
 19c:	f088      	tshftls	r0, r1, #2
 19e:	e809      	tadds	r1, r1, r0
 1a0:	f249      	tshftls	r1, r1, #9
 1a2:	086a      	tloadr	r0, [pc, #424]	; (34c <blt_send_adv+0x34c>)
 1a4:	5001      	tstorer	r1, [r0, #0]
 1a6:	4fa1      	tloadrb	r1, [r4, #30]
 1a8:	4fe0      	tloadrb	r0, [r4, #31]
 1aa:	f200      	tshftls	r0, r0, #8
 1ac:	0308      	tors	r0, r1
 1ae:	0968      	tloadr	r1, [pc, #416]	; (350 <blt_send_adv+0x350>)
 1b0:	2008      	tstorerh	r0, [r1, #0]
 1b2:	5810      	tloadr	r0, [r2, #0]
 1b4:	0967      	tloadr	r1, [pc, #412]	; (354 <blt_send_adv+0x354>)
 1b6:	5008      	tstorer	r0, [r1, #0]
 1b8:	0967      	tloadr	r1, [pc, #412]	; (358 <blt_send_adv+0x358>)
 1ba:	400b      	tstorerb	r3, [r1, #0]
 1bc:	5812      	tloadr	r2, [r2, #0]
 1be:	0b67      	tloadr	r3, [pc, #412]	; (35c <blt_send_adv+0x35c>)
 1c0:	501a      	tstorer	r2, [r3, #0]
 1c2:	0b4f      	tloadr	r3, [pc, #316]	; (300 <blt_send_adv+0x300>)
 1c4:	4fdb      	tloadrb	r3, [r3, #31]
 1c6:	a51f      	tmovs	r5, #31
 1c8:	001d      	tands	r5, r3
 1ca:	0b65      	tloadr	r3, [pc, #404]	; (360 <blt_send_adv+0x360>)
 1cc:	401d      	tstorerb	r5, [r3, #0]
 1ce:	0865      	tloadr	r0, [pc, #404]	; (364 <blt_send_adv+0x364>)
 1d0:	0965      	tloadr	r1, [pc, #404]	; (368 <blt_send_adv+0x368>)
 1d2:	a205      	tmovs	r2, #5
 1d4:	97ff 9ffe 	tjl	0 <memcpy>
			1d4: R_TC32_CALL	memcpy
 1d8:	0863      	tloadr	r0, [pc, #396]	; (368 <blt_send_adv+0x368>)
 1da:	ec29      	tadds	r1, r5, #0
 1dc:	97ff 9ffe 	tjl	0 <blt_send_adv>
			1dc: R_TC32_CALL	blt_ll_channelTable_calc
 1e0:	a2ff      	tmovs	r2, #255	; 0xff
 1e2:	0b62      	tloadr	r3, [pc, #392]	; (36c <blt_send_adv+0x36c>)
 1e4:	401a      	tstorerb	r2, [r3, #0]
 1e6:	a000      	tmovs	r0, #0
 1e8:	97ff 9ffe 	tjl	0 <blt_send_adv>
			1e8: R_TC32_CALL	blt_next_channel
 1ec:	0b60      	tloadr	r3, [pc, #384]	; (370 <blt_send_adv+0x370>)
 1ee:	4018      	tstorerb	r0, [r3, #0]
 1f0:	093b      	tloadr	r1, [pc, #236]	; (2e0 <blt_send_adv+0x2e0>)
 1f2:	97ff 9ffe 	tjl	0 <blt_send_adv>
			1f2: R_TC32_CALL	blt_pn_init
 1f6:	4de1      	tloadrb	r1, [r4, #23]
 1f8:	f209      	tshftls	r1, r1, #8
 1fa:	4e23      	tloadrb	r3, [r4, #24]
 1fc:	f41b      	tshftls	r3, r3, #16
 1fe:	e8c9      	tadds	r1, r1, r3
 200:	4da3      	tloadrb	r3, [r4, #22]
 202:	e8c9      	tadds	r1, r1, r3
 204:	a200      	tmovs	r2, #0
 206:	a300      	tmovs	r3, #0
 208:	a001      	tmovs	r0, #1
 20a:	f05b      	tshftls	r3, r3, #1
 20c:	ec04      	tadds	r4, r0, #0
 20e:	000c      	tands	r4, r1
 210:	0323      	tors	r3, r4
 212:	e049      	tasrs	r1, r1, #1
 214:	b201      	tadds	r2, #1
 216:	aa18      	tcmp	r2, #24
 218:	c1f7      	tjne.n	20a <blt_send_adv+0x20a>
 21a:	0a56      	tloadr	r2, [pc, #344]	; (374 <blt_send_adv+0x374>)
 21c:	5013      	tstorer	r3, [r2, #0]
 21e:	0856      	tloadr	r0, [pc, #344]	; (378 <blt_send_adv+0x378>)
 220:	0956      	tloadr	r1, [pc, #344]	; (37c <blt_send_adv+0x37c>)
 222:	97ff 9ffe 	tjl	0 <blt_send_adv>
			222: R_TC32_CALL	blt_get_crc_table
 226:	a300      	tmovs	r3, #0
 228:	0a55      	tloadr	r2, [pc, #340]	; (380 <blt_send_adv+0x380>)
 22a:	5013      	tstorer	r3, [r2, #0]
 22c:	092c      	tloadr	r1, [pc, #176]	; (2e0 <blt_send_adv+0x2e0>)
 22e:	0a55      	tloadr	r2, [pc, #340]	; (384 <blt_send_adv+0x384>)
 230:	5011      	tstorer	r1, [r2, #0]
 232:	0a23      	tloadr	r2, [pc, #140]	; (2c0 <blt_send_adv+0x2c0>)
 234:	5811      	tloadr	r1, [r2, #0]
 236:	0a54      	tloadr	r2, [pc, #336]	; (388 <blt_send_adv+0x388>)
 238:	5011      	tstorer	r1, [r2, #0]
 23a:	0a54      	tloadr	r2, [pc, #336]	; (38c <blt_send_adv+0x38c>)
 23c:	4013      	tstorerb	r3, [r2, #0]
 23e:	0a54      	tloadr	r2, [pc, #336]	; (390 <blt_send_adv+0x390>)
 240:	4013      	tstorerb	r3, [r2, #0]
 242:	0b54      	tloadr	r3, [pc, #336]	; (394 <blt_send_adv+0x394>)
 244:	581b      	tloadr	r3, [r3, #0]
 246:	ab00      	tcmp	r3, #0
 248:	c002      	tjeq.n	250 <blt_send_adv+0x250>
 24a:	0828      	tloadr	r0, [pc, #160]	; (2ec <blt_send_adv+0x2ec>)
 24c:	9000 98ae 	tjl	3ac <blt_send_adv+0x3ac>
 250:	0b51      	tloadr	r3, [pc, #324]	; (398 <blt_send_adv+0x398>)
 252:	581b      	tloadr	r3, [r3, #0]
 254:	ab00      	tcmp	r3, #0
 256:	c002      	tjeq.n	25e <blt_send_adv+0x25e>
 258:	0835      	tloadr	r0, [pc, #212]	; (330 <blt_send_adv+0x330>)
 25a:	9000 98a7 	tjl	3ac <blt_send_adv+0x3ac>
 25e:	0c34      	tloadr	r4, [pc, #208]	; (330 <blt_send_adv+0x330>)
 260:	ec20      	tadds	r0, r4, #0
 262:	97ff 9ffe 	tjl	0 <task_connection_established>
			262: R_TC32_CALL	task_connection_established
 266:	4923      	tloadrb	r3, [r4, #4]
 268:	f659      	tshftls	r1, r3, #25
 26a:	c50b      	tjpl.n	284 <blt_send_adv+0x284>
 26c:	4f22      	tloadrb	r2, [r4, #28]
 26e:	4f63      	tloadrb	r3, [r4, #29]
 270:	f21b      	tshftls	r3, r3, #8
 272:	0313      	tors	r3, r2
 274:	ab06      	tcmp	r3, #6
 276:	c905      	tjls.n	284 <blt_send_adv+0x284>
 278:	ab18      	tcmp	r3, #24
 27a:	c803      	tjhi.n	284 <blt_send_adv+0x284>
 27c:	a201      	tmovs	r2, #1
 27e:	0b47      	tloadr	r3, [pc, #284]	; (39c <blt_send_adv+0x39c>)
 280:	401a      	tstorerb	r2, [r3, #0]
 282:	8004      	tj.n	28e <blt_send_adv+0x28e>
 284:	a202      	tmovs	r2, #2
 286:	0b45      	tloadr	r3, [pc, #276]	; (39c <blt_send_adv+0x39c>)
 288:	401a      	tstorerb	r2, [r3, #0]
 28a:	97ff 9ffe 	tjl	0 <vr_autoSetMode>
			28a: R_TC32_CALL	vr_autoSetMode
 28e:	a201      	tmovs	r2, #1
 290:	0b1f      	tloadr	r3, [pc, #124]	; (310 <blt_send_adv+0x310>)
 292:	401a      	tstorerb	r2, [r3, #0]
 294:	0842      	tloadr	r0, [pc, #264]	; (3a0 <blt_send_adv+0x3a0>)
 296:	8011      	tj.n	2bc <blt_send_adv+0x2bc>
 298:	b401      	tadds	r4, #1
 29a:	ac28      	tcmp	r4, #40	; 0x28
 29c:	c000      	tjeq.n	2a0 <blt_send_adv+0x2a0>
 29e:	86c7      	tj.n	30 <blt_send_adv+0x30>
 2a0:	a280      	tmovs	r2, #128	; 0x80
 2a2:	0b0d      	tloadr	r3, [pc, #52]	; (2d8 <blt_send_adv+0x2d8>)
 2a4:	401a      	tstorerb	r2, [r3, #0]
 2a6:	a200      	tmovs	r2, #0
 2a8:	0b3e      	tloadr	r3, [pc, #248]	; (3a4 <blt_send_adv+0x3a4>)
 2aa:	501a      	tstorer	r2, [r3, #0]
 2ac:	0b04      	tloadr	r3, [pc, #16]	; (2c0 <blt_send_adv+0x2c0>)
 2ae:	581a      	tloadr	r2, [r3, #0]
 2b0:	0b3d      	tloadr	r3, [pc, #244]	; (3a8 <blt_send_adv+0x3a8>)
 2b2:	581b      	tloadr	r3, [r3, #0]
 2b4:	e8d2      	tadds	r2, r2, r3
 2b6:	0b03      	tloadr	r3, [pc, #12]	; (2c4 <blt_send_adv+0x2c4>)
 2b8:	501a      	tstorer	r2, [r3, #0]
 2ba:	a000      	tmovs	r0, #0
 2bc:	6003      	tadd	sp, #12
 2be:	6df0      	tpop	{r4, r5, r6, r7, pc}
 2c0:	00800740 	taddeq	r0, r0, r0, asr #14
 2c4:	00000000 	tandeq	r0, r0, r0
			2c4: R_TC32_ABS32	blt_connExpectTime
 2c8:	ffff0600 	undefined instruction 0xffff0600
 2cc:	3fffffff 	tservcc	0x00ffffff
 2d0:	00000000 	tandeq	r0, r0, r0
			2d0: R_TC32_ABS32	.bss.blt_p_adv
 2d4:	00800428 	taddeq	r0, r0, r8, lsr #8
 2d8:	00800f00 	taddeq	r0, r0, r0, lsl #30
 2dc:	00800404 	taddeq	r0, r0, r4, lsl #8
 2e0:	00000000 	tandeq	r0, r0, r0
			2e0: R_TC32_ABS32	.data
 2e4:	00800f20 	taddeq	r0, r0, r0, lsr #30
 2e8:	00808040 	taddeq	r8, r0, r0, asr #32
 2ec:	0080800c 	taddeq	r8, r0, ip
 2f0:	00000000 	tandeq	r0, r0, r0
			2f0: R_TC32_ABS32	.bss.blt_p_mac
 2f4:	00808014 	taddeq	r8, r0, r4, lsl r0
 2f8:	00808016 	taddeq	r8, r0, r6, lsl r0
 2fc:	00808018 	taddeq	r8, r0, r8, lsl r0
 300:	00808010 	taddeq	r8, r0, r0, lsl r0
 304:	00000000 	tandeq	r0, r0, r0
			304: R_TC32_ABS32	.bss.blt_test_dongle_conn
 308:	ffff8040 	undefined instruction 0xffff8040
 30c:	0080050c 	taddeq	r0, r0, ip, lsl #10
	...
			310: R_TC32_ABS32	.bss.blt_state
			314: R_TC32_ABS32	blt_conn_inst
			318: R_TC32_ABS32	blt_conn_sn_slave
			31c: R_TC32_ABS32	blt_conn_sn_master
			320: R_TC32_ABS32	blt_tx_rptr
			324: R_TC32_ABS32	blt_tx_wptr
			328: R_TC32_ABS32	.bss.blt_tx_sending
			32c: R_TC32_ABS32	blt_first_connection
 330:	00808008 	taddeq	r8, r0, r8
 334:	00800408 	taddeq	r0, r0, r8, lsl #8
 338:	00009c40 	tandeq	r9, r0, r0, asr #24
 33c:	00000000 	tandeq	r0, r0, r0
			33c: R_TC32_ABS32	blt_conn_interval
 340:	0001d4c0 	tandeq	sp, r1, r0, asr #9
 344:	00000000 	tandeq	r0, r0, r0
			344: R_TC32_ABS32	blt_conn_duration
 348:	00808009 	taddeq	r8, r0, r9
	...
			34c: R_TC32_ABS32	blt_conn_timeout
			350: R_TC32_ABS32	blt_conn_latency
			354: R_TC32_ABS32	blt_conn_tick
			358: R_TC32_ABS32	.bss.blt_connParaUpReq_sent
			35c: R_TC32_ABS32	.bss.blt_conn_start_tick
			360: R_TC32_ABS32	blt_conn_chn_hop
			364: R_TC32_ABS32	.bss.blt_conn_chn_map
 368:	0080802a 	taddeq	r8, r0, sl, lsr #32
	...
			36c: R_TC32_ABS32	blt_ll_chn_idx
			370: R_TC32_ABS32	blt_conn_chn
			374: R_TC32_ABS32	.bss.blt_crc_init
			378: R_TC32_ABS32	.data.blt_tx_empty_packet
			37c: R_TC32_ABS32	.bss.blt_tx_crc_empty
			380: R_TC32_ABS32	.bss.ConnExpectDiff
			384: R_TC32_ABS32	.data.current_pn_table
			388: R_TC32_ABS32	connect_startTime
			38c: R_TC32_ABS32	sec_req_sent
			390: R_TC32_ABS32	apple_need_quick_send_sec_req
			394: R_TC32_ABS32	.bss.func_smp_init
			398: R_TC32_ABS32	.bss.func_pair_init
			39c: R_TC32_ABS32	os_check
 3a0:	00808000 	taddeq	r8, r0, r0
	...
			3a4: R_TC32_ABS32	blt_conn_tolerance_time
			3a8: R_TC32_ABS32	.data.blt_adv_interval
 3ac:	0718      	tjex	r3
 3ae:	46c0      	tnop			; (mov r8, r8)

Disassembly of section .text.blt_fifo_num:

00000000 <blt_fifo_num>:
blt_fifo_num():
   0:	0b03      	tloadr	r3, [pc, #12]	; (10 <blt_fifo_num+0x10>)
   2:	4818      	tloadrb	r0, [r3, #0]
   4:	0b03      	tloadr	r3, [pc, #12]	; (14 <blt_fifo_num+0x14>)
   6:	481b      	tloadrb	r3, [r3, #0]
   8:	eac0      	tsubs	r0, r0, r3
   a:	a31f      	tmovs	r3, #31
   c:	0018      	tands	r0, r3
   e:	0770      	tjex	lr
	...
			10: R_TC32_ABS32	blt_tx_wptr
			14: R_TC32_ABS32	blt_tx_rptr

Disassembly of section .text.blt_fifo_empty:

00000000 <blt_fifo_empty>:
blt_fifo_empty():
   0:	0b03      	tloadr	r3, [pc, #12]	; (10 <blt_fifo_empty+0x10>)
   2:	4818      	tloadrb	r0, [r3, #0]
   4:	0b03      	tloadr	r3, [pc, #12]	; (14 <blt_fifo_empty+0x14>)
   6:	481b      	tloadrb	r3, [r3, #0]
   8:	eac0      	tsubs	r0, r0, r3
   a:	0243      	tnegs	r3, r0
   c:	0158      	taddcs	r0, r3
   e:	0770      	tjex	lr
	...
			10: R_TC32_ABS32	blt_tx_wptr
			14: R_TC32_ABS32	blt_tx_rptr

Disassembly of section .text.blt_push_fifo:

00000000 <blt_push_fifo>:
blt_push_fifo():
   0:	6530      	tpush	{r4, r5, lr}
   2:	ec04      	tadds	r4, r0, #0
   4:	0b26      	tloadr	r3, [pc, #152]	; (a0 <blt_push_fifo+0xa0>)
   6:	581b      	tloadr	r3, [r3, #0]
   8:	ab00      	tcmp	r3, #0
   a:	c01d      	tjeq.n	48 <blt_push_fifo+0x48>
   c:	97ff 9ffe 	tjl	0 <blt_smp_pair_busy>
			c: R_TC32_CALL	blt_smp_pair_busy
  10:	a800      	tcmp	r0, #0
  12:	c019      	tjeq.n	48 <blt_push_fifo+0x48>
  14:	4a22      	tloadrb	r2, [r4, #8]
  16:	4a63      	tloadrb	r3, [r4, #9]
  18:	f21b      	tshftls	r3, r3, #8
  1a:	0313      	tors	r3, r2
  1c:	ab06      	tcmp	r3, #6
  1e:	c013      	tjeq.n	48 <blt_push_fifo+0x48>
  20:	4923      	tloadrb	r3, [r4, #4]
  22:	a203      	tmovs	r2, #3
  24:	0013      	tands	r3, r2
  26:	ab02      	tcmp	r3, #2
  28:	c10e      	tjne.n	48 <blt_push_fifo+0x48>
  2a:	0b1e      	tloadr	r3, [pc, #120]	; (a4 <blt_push_fifo+0xa4>)
  2c:	581b      	tloadr	r3, [r3, #0]
  2e:	ab00      	tcmp	r3, #0
  30:	c006      	tjeq.n	40 <blt_push_fifo+0x40>
  32:	4a1a      	tloadrb	r2, [r3, #8]
  34:	4a5b      	tloadrb	r3, [r3, #9]
  36:	f21b      	tshftls	r3, r3, #8
  38:	0313      	tors	r3, r2
  3a:	a000      	tmovs	r0, #0
  3c:	ab04      	tcmp	r3, #4
  3e:	c02e      	tjeq.n	9e <blt_push_fifo+0x9e>
  40:	0b18      	tloadr	r3, [pc, #96]	; (a4 <blt_push_fifo+0xa4>)
  42:	501c      	tstorer	r4, [r3, #0]
  44:	a000      	tmovs	r0, #0
  46:	802a      	tj.n	9e <blt_push_fifo+0x9e>
  48:	0b17      	tloadr	r3, [pc, #92]	; (a8 <blt_push_fifo+0xa8>)
  4a:	481b      	tloadrb	r3, [r3, #0]
  4c:	0a17      	tloadr	r2, [pc, #92]	; (ac <blt_push_fifo+0xac>)
  4e:	4812      	tloadrb	r2, [r2, #0]
  50:	ea9a      	tsubs	r2, r3, r2
  52:	a107      	tmovs	r1, #7
  54:	000a      	tands	r2, r1
  56:	a000      	tmovs	r0, #0
  58:	aa03      	tcmp	r2, #3
  5a:	cc20      	tjgt.n	9e <blt_push_fifo+0x9e>
  5c:	a503      	tmovs	r5, #3
  5e:	002b      	tands	r3, r5
  60:	a52c      	tmovs	r5, #44	; 0x2c
  62:	035d      	tmuls	r5, r3
  64:	0a12      	tloadr	r2, [pc, #72]	; (b0 <blt_push_fifo+0xb0>)
  66:	e8ad      	tadds	r5, r5, r2
  68:	4962      	tloadrb	r2, [r4, #5]
  6a:	b202      	tadds	r2, #2
  6c:	ed21      	tadds	r1, r4, #4
  6e:	ec28      	tadds	r0, r5, #0
  70:	97ff 9ffe 	tjl	0 <memcpy>
			70: R_TC32_CALL	memcpy
  74:	0b0f      	tloadr	r3, [pc, #60]	; (b4 <blt_push_fifo+0xb4>)
  76:	581b      	tloadr	r3, [r3, #0]
  78:	ab00      	tcmp	r3, #0
  7a:	c002      	tjeq.n	82 <blt_push_fifo+0x82>
  7c:	ec28      	tadds	r0, r5, #0
  7e:	9000 981d 	tjl	bc <blt_push_fifo+0xbc>
  82:	0c09      	tloadr	r4, [pc, #36]	; (a8 <blt_push_fifo+0xa8>)
  84:	4823      	tloadrb	r3, [r4, #0]
  86:	a103      	tmovs	r1, #3
  88:	0019      	tands	r1, r3
  8a:	f109      	tshftls	r1, r1, #4
  8c:	0b0a      	tloadr	r3, [pc, #40]	; (b8 <blt_push_fifo+0xb8>)
  8e:	e8c9      	tadds	r1, r1, r3
  90:	ec28      	tadds	r0, r5, #0
  92:	97ff 9ffe 	tjl	0 <blt_push_fifo>
			92: R_TC32_CALL	blt_get_crc_table
  96:	4823      	tloadrb	r3, [r4, #0]
  98:	b301      	tadds	r3, #1
  9a:	4023      	tstorerb	r3, [r4, #0]
  9c:	a001      	tmovs	r0, #1
  9e:	6d30      	tpop	{r4, r5, pc}
	...
			a0: R_TC32_ABS32	.bss.func_smp_brx
			a4: R_TC32_ABS32	.bss.blt_tx_pkt_hold
			a8: R_TC32_ABS32	blt_tx_wptr
			ac: R_TC32_ABS32	blt_tx_rptr
			b0: R_TC32_ABS32	blt_tx_fifo
			b4: R_TC32_ABS32	.bss.func_smp_enc
			b8: R_TC32_ABS32	blt_tx_crc
  bc:	0718      	tjex	r3
  be:	46c0      	tnop			; (mov r8, r8)

Disassembly of section .text.blt_push_notify:

00000000 <blt_push_notify>:
blt_push_notify():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	6081      	tsub	sp, #4
   4:	3100      	tstorer	r1, [sp, #0]
   6:	ec15      	tadds	r5, r2, #0
   8:	f406      	tshftls	r6, r0, #16
   a:	fc36      	tshftrs	r6, r6, #16
   c:	0c09      	tloadr	r4, [pc, #36]	; (34 <blt_push_notify+0x34>)
   e:	ec20      	tadds	r0, r4, #0
  10:	b00d      	tadds	r0, #13
  12:	0669      	tmov	r1, sp
  14:	97ff 9ffe 	tjl	0 <memcpy>
			14: R_TC32_CALL	memcpy
  18:	f62d      	tshftls	r5, r5, #24
  1a:	fe2d      	tshftrs	r5, r5, #24
  1c:	eceb      	tadds	r3, r5, #3
  1e:	41a3      	tstorerb	r3, [r4, #6]
  20:	edeb      	tadds	r3, r5, #7
  22:	4163      	tstorerb	r3, [r4, #5]
  24:	b509      	tadds	r5, #9
  26:	4025      	tstorerb	r5, [r4, #0]
  28:	42e6      	tstorerb	r6, [r4, #11]
  2a:	ec20      	tadds	r0, r4, #0
  2c:	97ff 9ffe 	tjl	0 <blt_push_notify>
			2c: R_TC32_CALL	blt_push_fifo
  30:	6001      	tadd	sp, #4
  32:	6d70      	tpop	{r4, r5, r6, pc}
  34:	00000000 	tandeq	r0, r0, r0
			34: R_TC32_ABS32	.data.pkt_notify_short

Disassembly of section .text.blt_set_connParaUpReq:

00000000 <blt_set_connParaUpReq>:
blt_set_connParaUpReq():
   0:	0b01      	tloadr	r3, [pc, #4]	; (8 <blt_set_connParaUpReq+0x8>)
   2:	5018      	tstorer	r0, [r3, #0]
   4:	0770      	tjex	lr
   6:	46c0      	tnop			; (mov r8, r8)
   8:	00000000 	tandeq	r0, r0, r0
			8: R_TC32_ABS32	.bss.blt_p_connParaUpReq

Disassembly of section .text.blt_terminate:

00000000 <blt_terminate>:
blt_terminate():
   0:	a201      	tmovs	r2, #1
   2:	0b01      	tloadr	r3, [pc, #4]	; (8 <blt_terminate+0x8>)
   4:	401a      	tstorerb	r2, [r3, #0]
   6:	0770      	tjex	lr
   8:	00000000 	tandeq	r0, r0, r0
			8: R_TC32_ABS32	blt_terminate_pending

Disassembly of section .text.blt_brx:

00000000 <blt_brx>:
blt_brx():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	6081      	tsub	sp, #4
   4:	a200      	tmovs	r2, #0
   6:	0ba2      	tloadr	r3, [pc, #648]	; (290 <blt_brx+0x290>)
   8:	401a      	tstorerb	r2, [r3, #0]
   a:	0ba2      	tloadr	r3, [pc, #648]	; (294 <blt_brx+0x294>)
   c:	581b      	tloadr	r3, [r3, #0]
   e:	0aa2      	tloadr	r2, [pc, #648]	; (298 <blt_brx+0x298>)
  10:	5811      	tloadr	r1, [r2, #0]
  12:	0aa2      	tloadr	r2, [pc, #648]	; (29c <blt_brx+0x29c>)
  14:	5812      	tloadr	r2, [r2, #0]
  16:	ea8a      	tsubs	r2, r1, r2
  18:	ead2      	tsubs	r2, r2, r3
  1a:	a000      	tmovs	r0, #0
  1c:	0ba0      	tloadr	r3, [pc, #640]	; (2a0 <blt_brx+0x2a0>)
  1e:	029a      	tcmp	r2, r3
  20:	c800      	tjhi.n	24 <blt_brx+0x24>
  22:	8132      	tj.n	28a <blt_brx+0x28a>
  24:	0b9f      	tloadr	r3, [pc, #636]	; (2a4 <blt_brx+0x2a4>)
  26:	481b      	tloadrb	r3, [r3, #0]
  28:	ab01      	tcmp	r3, #1
  2a:	c108      	tjne.n	3e <blt_brx+0x3e>
  2c:	0b9e      	tloadr	r3, [pc, #632]	; (2a8 <blt_brx+0x2a8>)
  2e:	481b      	tloadrb	r3, [r3, #0]
  30:	0a9e      	tloadr	r2, [pc, #632]	; (2ac <blt_brx+0x2ac>)
  32:	1cd0      	tloadrb	r0, [r2, r3]
  34:	0b9e      	tloadr	r3, [pc, #632]	; (2b0 <blt_brx+0x2b0>)
  36:	4018      	tstorerb	r0, [r3, #0]
  38:	099e      	tloadr	r1, [pc, #632]	; (2b4 <blt_brx+0x2b4>)
  3a:	97ff 9ffe 	tjl	0 <blt_brx>
			3a: R_TC32_CALL	blt_pn_init
  3e:	a300      	tmovs	r3, #0
  40:	0a9d      	tloadr	r2, [pc, #628]	; (2b8 <blt_brx+0x2b8>)
  42:	5013      	tstorer	r3, [r2, #0]
  44:	066a      	tmov	r2, sp
  46:	b203      	tadds	r2, #3
  48:	4013      	tstorerb	r3, [r2, #0]
  4a:	0c9c      	tloadr	r4, [pc, #624]	; (2bc <blt_brx+0x2bc>)
  4c:	a3ff      	tmovs	r3, #255	; 0xff
  4e:	4023      	tstorerb	r3, [r4, #0]
  50:	0b97      	tloadr	r3, [pc, #604]	; (2b0 <blt_brx+0x2b0>)
  52:	a000      	tmovs	r0, #0
  54:	1618      	tloadrsb	r0, [r3, r0]
  56:	97ff 9ffe 	tjl	0 <blt_brx>
			56: R_TC32_CALL	blt_set_channel
  5a:	0b99      	tloadr	r3, [pc, #612]	; (2c0 <blt_brx+0x2c0>)
  5c:	5818      	tloadr	r0, [r3, #0]
  5e:	a101      	tmovs	r1, #1
  60:	97ff 9ffe 	tjl	1c8 <blt_brx+0x1c8>
			60: R_TC32_CALL	blt_packet_rx
  64:	0b97      	tloadr	r3, [pc, #604]	; (2c4 <blt_brx+0x2c4>)
  66:	4018      	tstorerb	r0, [r3, #0]
  68:	a201      	tmovs	r2, #1
  6a:	0b89      	tloadr	r3, [pc, #548]	; (290 <blt_brx+0x290>)
  6c:	401a      	tstorerb	r2, [r3, #0]
  6e:	a800      	tcmp	r0, #0
  70:	c100      	tjne.n	74 <blt_brx+0x74>
  72:	8098      	tj.n	1a6 <blt_brx+0x1a6>
  74:	a801      	tcmp	r0, #1
  76:	c000      	tjeq.n	7a <blt_brx+0x7a>
  78:	8095      	tj.n	1a6 <blt_brx+0x1a6>
  7a:	4826      	tloadrb	r6, [r4, #0]
  7c:	0b85      	tloadr	r3, [pc, #532]	; (294 <blt_brx+0x294>)
  7e:	581a      	tloadr	r2, [r3, #0]
  80:	0b91      	tloadr	r3, [pc, #580]	; (2c8 <blt_brx+0x2c8>)
  82:	501a      	tstorer	r2, [r3, #0]
  84:	0b91      	tloadr	r3, [pc, #580]	; (2cc <blt_brx+0x2cc>)
  86:	581b      	tloadr	r3, [r3, #0]
  88:	ab00      	tcmp	r3, #0
  8a:	c014      	tjeq.n	b6 <blt_brx+0xb6>
  8c:	f631      	tshftls	r1, r6, #24
  8e:	e609      	tasrs	r1, r1, #24
  90:	03c9      	tmovns	r1, r1
  92:	ffc9      	tshftrs	r1, r1, #31
  94:	088e      	tloadr	r0, [pc, #568]	; (2d0 <blt_brx+0x2d0>)
  96:	9000 9961 	tjl	35c <blt_brx+0x35c>
  9a:	0c8e      	tloadr	r4, [pc, #568]	; (2d4 <blt_brx+0x2d4>)
  9c:	5823      	tloadr	r3, [r4, #0]
  9e:	ab00      	tcmp	r3, #0
  a0:	c009      	tjeq.n	b6 <blt_brx+0xb6>
  a2:	97ff 9ffe 	tjl	0 <blt_smp_pair_busy>
			a2: R_TC32_CALL	blt_smp_pair_busy
  a6:	ee05      	tsubs	r5, r0, #0
  a8:	c105      	tjne.n	b6 <blt_brx+0xb6>
  aa:	5820      	tloadr	r0, [r4, #0]
  ac:	97ff 9ffe 	tjl	0 <blt_brx>
			ac: R_TC32_CALL	blt_push_fifo
  b0:	a800      	tcmp	r0, #0
  b2:	c000      	tjeq.n	b6 <blt_brx+0xb6>
  b4:	5025      	tstorer	r5, [r4, #0]
  b6:	0888      	tloadr	r0, [pc, #544]	; (2d8 <blt_brx+0x2d8>)
  b8:	5802      	tloadr	r2, [r0, #0]
  ba:	0b7f      	tloadr	r3, [pc, #508]	; (2b8 <blt_brx+0x2b8>)
  bc:	501a      	tstorer	r2, [r3, #0]
  be:	f636      	tshftls	r6, r6, #24
  c0:	ae00      	tcmp	r6, #0
  c2:	cd70      	tjle.n	1a6 <blt_brx+0x1a6>
  c4:	0a85      	tloadr	r2, [pc, #532]	; (2dc <blt_brx+0x2dc>)
  c6:	4813      	tloadrb	r3, [r2, #0]
  c8:	0985      	tloadr	r1, [pc, #532]	; (2e0 <blt_brx+0x2e0>)
  ca:	4809      	tloadrb	r1, [r1, #0]
  cc:	a403      	tmovs	r4, #3
  ce:	0021      	tands	r1, r4
  d0:	a903      	tcmp	r1, #3
  d2:	c155      	tjne.n	180 <blt_brx+0x180>
  d4:	ab01      	tcmp	r3, #1
  d6:	c10b      	tjne.n	f0 <blt_brx+0xf0>
  d8:	0a82      	tloadr	r2, [pc, #520]	; (2e4 <blt_brx+0x2e4>)
  da:	4013      	tstorerb	r3, [r2, #0]
  dc:	0b82      	tloadr	r3, [pc, #520]	; (2e8 <blt_brx+0x2e8>)
  de:	281a      	tloadrh	r2, [r3, #0]
  e0:	0b82      	tloadr	r3, [pc, #520]	; (2ec <blt_brx+0x2ec>)
  e2:	201a      	tstorerh	r2, [r3, #0]
  e4:	0882      	tloadr	r0, [pc, #520]	; (2f0 <blt_brx+0x2f0>)
  e6:	0983      	tloadr	r1, [pc, #524]	; (2f4 <blt_brx+0x2f4>)
  e8:	a205      	tmovs	r2, #5
  ea:	97ff 9ffe 	tjl	0 <memcpy>
			ea: R_TC32_CALL	memcpy
  ee:	805a      	tj.n	1a6 <blt_brx+0x1a6>
  f0:	ab00      	tcmp	r3, #0
  f2:	c126      	tjne.n	142 <blt_brx+0x142>
  f4:	a202      	tmovs	r2, #2
  f6:	0b7b      	tloadr	r3, [pc, #492]	; (2e4 <blt_brx+0x2e4>)
  f8:	401a      	tstorerb	r2, [r3, #0]
  fa:	0b7f      	tloadr	r3, [pc, #508]	; (2f8 <blt_brx+0x2f8>)
  fc:	2819      	tloadrh	r1, [r3, #0]
  fe:	0b7f      	tloadr	r3, [pc, #508]	; (2fc <blt_brx+0x2fc>)
 100:	0359      	tmuls	r1, r3
 102:	0a7f      	tloadr	r2, [pc, #508]	; (300 <blt_brx+0x300>)
 104:	5011      	tstorer	r1, [r2, #0]
 106:	0a7f      	tloadr	r2, [pc, #508]	; (304 <blt_brx+0x304>)
 108:	2811      	tloadrh	r1, [r2, #0]
 10a:	0359      	tmuls	r1, r3
 10c:	0a7e      	tloadr	r2, [pc, #504]	; (308 <blt_brx+0x308>)
 10e:	5011      	tstorer	r1, [r2, #0]
 110:	0a75      	tloadr	r2, [pc, #468]	; (2e8 <blt_brx+0x2e8>)
 112:	2811      	tloadrh	r1, [r2, #0]
 114:	0a7d      	tloadr	r2, [pc, #500]	; (30c <blt_brx+0x30c>)
 116:	2011      	tstorerh	r1, [r2, #0]
 118:	0a7d      	tloadr	r2, [pc, #500]	; (310 <blt_brx+0x310>)
 11a:	2812      	tloadrh	r2, [r2, #0]
 11c:	f151      	tshftls	r1, r2, #5
 11e:	ea89      	tsubs	r1, r1, r2
 120:	f089      	tshftls	r1, r1, #2
 122:	e88a      	tadds	r2, r1, r2
 124:	f091      	tshftls	r1, r2, #2
 126:	e852      	tadds	r2, r2, r1
 128:	f252      	tshftls	r2, r2, #9
 12a:	097a      	tloadr	r1, [pc, #488]	; (314 <blt_brx+0x314>)
 12c:	500a      	tstorer	r2, [r1, #0]
 12e:	0a7a      	tloadr	r2, [pc, #488]	; (318 <blt_brx+0x318>)
 130:	2811      	tloadrh	r1, [r2, #0]
 132:	0a6e      	tloadr	r2, [pc, #440]	; (2ec <blt_brx+0x2ec>)
 134:	2011      	tstorerh	r1, [r2, #0]
 136:	0a6f      	tloadr	r2, [pc, #444]	; (2f4 <blt_brx+0x2f4>)
 138:	4812      	tloadrb	r2, [r2, #0]
 13a:	0353      	tmuls	r3, r2
 13c:	0a77      	tloadr	r2, [pc, #476]	; (31c <blt_brx+0x31c>)
 13e:	5013      	tstorer	r3, [r2, #0]
 140:	8031      	tj.n	1a6 <blt_brx+0x1a6>
 142:	ab0c      	tcmp	r3, #12
 144:	c103      	tjne.n	14e <blt_brx+0x14e>
 146:	97ff 9ffe 	tjl	0 <task_Version_ind>
			146: R_TC32_CALL	task_Version_ind
 14a:	0875      	tloadr	r0, [pc, #468]	; (320 <blt_brx+0x320>)
 14c:	8020      	tj.n	190 <blt_brx+0x190>
 14e:	ab08      	tcmp	r3, #8
 150:	c101      	tjne.n	156 <blt_brx+0x156>
 152:	0874      	tloadr	r0, [pc, #464]	; (324 <blt_brx+0x324>)
 154:	801c      	tj.n	190 <blt_brx+0x190>
 156:	ab02      	tcmp	r3, #2
 158:	c103      	tjne.n	162 <blt_brx+0x162>
 15a:	a201      	tmovs	r2, #1
 15c:	066b      	tmov	r3, sp
 15e:	b303      	tadds	r3, #3
 160:	8020      	tj.n	1a4 <blt_brx+0x1a4>
 162:	ab06      	tcmp	r3, #6
 164:	c103      	tjne.n	16e <blt_brx+0x16e>
 166:	0870      	tloadr	r0, [pc, #448]	; (328 <blt_brx+0x328>)
 168:	97ff 9ffe 	tjl	0 <task_bond_finished>
			168: R_TC32_CALL	task_bond_finished
 16c:	801b      	tj.n	1a6 <blt_brx+0x1a6>
 16e:	ab12      	tcmp	r3, #18
 170:	c101      	tjne.n	176 <blt_brx+0x176>
 172:	086e      	tloadr	r0, [pc, #440]	; (32c <blt_brx+0x32c>)
 174:	800c      	tj.n	190 <blt_brx+0x190>
 176:	ab12      	tcmp	r3, #18
 178:	c915      	tjls.n	1a6 <blt_brx+0x1a6>
 17a:	086d      	tloadr	r0, [pc, #436]	; (330 <blt_brx+0x330>)
 17c:	41c3      	tstorerb	r3, [r0, #7]
 17e:	8007      	tj.n	190 <blt_brx+0x190>
 180:	0b5d      	tloadr	r3, [pc, #372]	; (2f8 <blt_brx+0x2f8>)
 182:	281b      	tloadrh	r3, [r3, #0]
 184:	ab04      	tcmp	r3, #4
 186:	c106      	tjne.n	196 <blt_brx+0x196>
 188:	97ff 9ffe 	tjl	0 <l2cap_att_handler>
			188: R_TC32_CALL	l2cap_att_handler
 18c:	a800      	tcmp	r0, #0
 18e:	c00a      	tjeq.n	1a6 <blt_brx+0x1a6>
 190:	97ff 9ffe 	tjl	0 <blt_brx>
			190: R_TC32_CALL	blt_push_fifo
 194:	8007      	tj.n	1a6 <blt_brx+0x1a6>
 196:	ab3a      	tcmp	r3, #58	; 0x3a
 198:	c105      	tjne.n	1a6 <blt_brx+0x1a6>
 19a:	2813      	tloadrh	r3, [r2, #0]
 19c:	ab07      	tcmp	r3, #7
 19e:	c102      	tjne.n	1a6 <blt_brx+0x1a6>
 1a0:	a201      	tmovs	r2, #1
 1a2:	0b64      	tloadr	r3, [pc, #400]	; (334 <blt_brx+0x334>)
 1a4:	401a      	tstorerb	r2, [r3, #0]
 1a6:	97ff 9ffe 	tjl	0 <blt_brx>
			1a6: R_TC32_CALL	blt_fifo_empty
 1aa:	a800      	tcmp	r0, #0
 1ac:	c008      	tjeq.n	1c0 <blt_brx+0x1c0>
 1ae:	0c62      	tloadr	r4, [pc, #392]	; (338 <blt_brx+0x338>)
 1b0:	4823      	tloadrb	r3, [r4, #0]
 1b2:	ab01      	tcmp	r3, #1
 1b4:	c104      	tjne.n	1c0 <blt_brx+0x1c0>
 1b6:	0861      	tloadr	r0, [pc, #388]	; (33c <blt_brx+0x33c>)
 1b8:	97ff 9ffe 	tjl	0 <blt_brx>
			1b8: R_TC32_CALL	blt_push_fifo
 1bc:	a300      	tmovs	r3, #0
 1be:	4023      	tstorerb	r3, [r4, #0]
 1c0:	093f      	tloadr	r1, [pc, #252]	; (2c0 <blt_brx+0x2c0>)
 1c2:	a300      	tmovs	r3, #0
 1c4:	500b      	tstorer	r3, [r1, #0]
 1c6:	066b      	tmov	r3, sp
 1c8:	b303      	tadds	r3, #3
 1ca:	481c      	tloadrb	r4, [r3, #0]
 1cc:	ac00      	tcmp	r4, #0
 1ce:	c108      	tjne.n	1e2 <blt_brx+0x1e2>
 1d0:	0b30      	tloadr	r3, [pc, #192]	; (294 <blt_brx+0x294>)
 1d2:	581a      	tloadr	r2, [r3, #0]
 1d4:	0b3c      	tloadr	r3, [pc, #240]	; (2c8 <blt_brx+0x2c8>)
 1d6:	581b      	tloadr	r3, [r3, #0]
 1d8:	ead2      	tsubs	r2, r2, r3
 1da:	0859      	tloadr	r0, [pc, #356]	; (340 <blt_brx+0x340>)
 1dc:	5803      	tloadr	r3, [r0, #0]
 1de:	029a      	tcmp	r2, r3
 1e0:	c907      	tjls.n	1f2 <blt_brx+0x1f2>
 1e2:	97ff 9ffe 	tjl	0 <blt_brx>
			1e2: R_TC32_CALL	blt_adv_init
 1e6:	0668      	tmov	r0, sp
 1e8:	b003      	tadds	r0, #3
 1ea:	97ff 9ffe 	tjl	0 <task_connection_terminated>
			1ea: R_TC32_CALL	task_connection_terminated
 1ee:	a000      	tmovs	r0, #0
 1f0:	804b      	tj.n	28a <blt_brx+0x28a>
 1f2:	0b4d      	tloadr	r3, [pc, #308]	; (328 <blt_brx+0x328>)
 1f4:	281a      	tloadrh	r2, [r3, #0]
 1f6:	b201      	tadds	r2, #1
 1f8:	f412      	tshftls	r2, r2, #16
 1fa:	fc12      	tshftrs	r2, r2, #16
 1fc:	201a      	tstorerh	r2, [r3, #0]
 1fe:	0b39      	tloadr	r3, [pc, #228]	; (2e4 <blt_brx+0x2e4>)
 200:	481d      	tloadrb	r5, [r3, #0]
 202:	ad01      	tcmp	r5, #1
 204:	c111      	tjne.n	22a <blt_brx+0x22a>
 206:	0939      	tloadr	r1, [pc, #228]	; (2ec <blt_brx+0x2ec>)
 208:	2809      	tloadrh	r1, [r1, #0]
 20a:	0291      	tcmp	r1, r2
 20c:	c132      	tjne.n	274 <blt_brx+0x274>
 20e:	401c      	tstorerb	r4, [r3, #0]
 210:	084c      	tloadr	r0, [pc, #304]	; (344 <blt_brx+0x344>)
 212:	0b37      	tloadr	r3, [pc, #220]	; (2f0 <blt_brx+0x2f0>)
 214:	581a      	tloadr	r2, [r3, #0]
 216:	5002      	tstorer	r2, [r0, #0]
 218:	491b      	tloadrb	r3, [r3, #4]
 21a:	4103      	tstorerb	r3, [r0, #4]
 21c:	0b4a      	tloadr	r3, [pc, #296]	; (348 <blt_brx+0x348>)
 21e:	4819      	tloadrb	r1, [r3, #0]
 220:	97ff 9ffe 	tjl	0 <blt_brx>
			220: R_TC32_CALL	blt_ll_channelTable_calc
 224:	0b24      	tloadr	r3, [pc, #144]	; (2b8 <blt_brx+0x2b8>)
 226:	501c      	tstorer	r4, [r3, #0]
 228:	8024      	tj.n	274 <blt_brx+0x274>
 22a:	ad02      	tcmp	r5, #2
 22c:	c122      	tjne.n	274 <blt_brx+0x274>
 22e:	0d2f      	tloadr	r5, [pc, #188]	; (2ec <blt_brx+0x2ec>)
 230:	282d      	tloadrh	r5, [r5, #0]
 232:	0295      	tcmp	r5, r2
 234:	c11e      	tjne.n	274 <blt_brx+0x274>
 236:	401c      	tstorerb	r4, [r3, #0]
 238:	0b36      	tloadr	r3, [pc, #216]	; (314 <blt_brx+0x314>)
 23a:	581b      	tloadr	r3, [r3, #0]
 23c:	5003      	tstorer	r3, [r0, #0]
 23e:	0b33      	tloadr	r3, [pc, #204]	; (30c <blt_brx+0x30c>)
 240:	281a      	tloadrh	r2, [r3, #0]
 242:	0b42      	tloadr	r3, [pc, #264]	; (34c <blt_brx+0x34c>)
 244:	201a      	tstorerh	r2, [r3, #0]
 246:	0b30      	tloadr	r3, [pc, #192]	; (308 <blt_brx+0x308>)
 248:	581a      	tloadr	r2, [r3, #0]
 24a:	0813      	tloadr	r0, [pc, #76]	; (298 <blt_brx+0x298>)
 24c:	0b2c      	tloadr	r3, [pc, #176]	; (300 <blt_brx+0x300>)
 24e:	581d      	tloadr	r5, [r3, #0]
 250:	5803      	tloadr	r3, [r0, #0]
 252:	e8ed      	tadds	r5, r5, r3
 254:	0b3e      	tloadr	r3, [pc, #248]	; (350 <blt_brx+0x350>)
 256:	581e      	tloadr	r6, [r3, #0]
 258:	e9ad      	tadds	r5, r5, r6
 25a:	eaad      	tsubs	r5, r5, r2
 25c:	5005      	tstorer	r5, [r0, #0]
 25e:	501a      	tstorer	r2, [r3, #0]
 260:	0b15      	tloadr	r3, [pc, #84]	; (2b8 <blt_brx+0x2b8>)
 262:	501c      	tstorer	r4, [r3, #0]
 264:	a301      	tmovs	r3, #1
 266:	0a3b      	tloadr	r2, [pc, #236]	; (354 <blt_brx+0x354>)
 268:	4013      	tstorerb	r3, [r2, #0]
 26a:	0a2c      	tloadr	r2, [pc, #176]	; (31c <blt_brx+0x31c>)
 26c:	5812      	tloadr	r2, [r2, #0]
 26e:	500a      	tstorer	r2, [r1, #0]
 270:	0a39      	tloadr	r2, [pc, #228]	; (358 <blt_brx+0x358>)
 272:	4013      	tstorerb	r3, [r2, #0]
 274:	a000      	tmovs	r0, #0
 276:	97ff 9ffe 	tjl	0 <blt_brx>
			276: R_TC32_CALL	blt_next_channel
 27a:	0b0d      	tloadr	r3, [pc, #52]	; (2b0 <blt_brx+0x2b0>)
 27c:	4018      	tstorerb	r0, [r3, #0]
 27e:	0b0e      	tloadr	r3, [pc, #56]	; (2b8 <blt_brx+0x2b8>)
 280:	5818      	tloadr	r0, [r3, #0]
 282:	a100      	tmovs	r1, #0
 284:	97ff 9ffe 	tjl	0 <blt_brx>
			284: R_TC32_CALL	blt_brx_timing_update
 288:	a001      	tmovs	r0, #1
 28a:	6001      	tadd	sp, #4
 28c:	6d70      	tpop	{r4, r5, r6, pc}
 28e:	46c0      	tnop			; (mov r8, r8)
 290:	00000000 	tandeq	r0, r0, r0
			290: R_TC32_ABS32	.bss.blt_new_connection
 294:	00800740 	taddeq	r0, r0, r0, asr #14
	...
			298: R_TC32_ABS32	blt_connExpectTime
			29c: R_TC32_ABS32	blt_conn_tolerance_time
 2a0:	3fffffff 	tservcc	0x00ffffff
	...
			2a4: R_TC32_ABS32	.bss.blt_state
			2a8: R_TC32_ABS32	blt_ll_chn_idx
			2ac: R_TC32_ABS32	blt_ll_channelTable
			2b0: R_TC32_ABS32	blt_conn_chn
			2b4: R_TC32_ABS32	.data
			2b8: R_TC32_ABS32	.bss.blt_conn_tick_1stRx
			2bc: R_TC32_ABS32	.data.blt_rx_len
			2c0: R_TC32_ABS32	blt_conn_duration
			2c4: R_TC32_ABS32	blt_brx_status
			2c8: R_TC32_ABS32	blt_conn_tick
			2cc: R_TC32_ABS32	.bss.func_smp_brx
 2d0:	00808000 	taddeq	r8, r0, r0
 2d4:	00000000 	tandeq	r0, r0, r0
			2d4: R_TC32_ABS32	.bss.blt_tx_pkt_hold
 2d8:	00808008 	taddeq	r8, r0, r8
 2dc:	0080800e 	taddeq	r8, r0, lr
 2e0:	0080800c 	taddeq	r8, r0, ip
 2e4:	00000000 	tandeq	r0, r0, r0
			2e4: R_TC32_ABS32	.bss.blt_conn_update
 2e8:	00808014 	taddeq	r8, r0, r4, lsl r0
	...
			2ec: R_TC32_ABS32	blt_conn_inst_next
			2f0: R_TC32_ABS32	.bss.blt_conn_chn_map_next
 2f4:	0080800f 	taddeq	r8, r0, pc
 2f8:	00808010 	taddeq	r8, r0, r0, lsl r0
 2fc:	00009c40 	tandeq	r9, r0, r0, asr #24
 300:	00000000 	tandeq	r0, r0, r0
			300: R_TC32_ABS32	.bss.blt_conn_offset_next
 304:	00808012 	taddeq	r8, r0, r2, lsl r0
	...
			308: R_TC32_ABS32	blt_conn_interval_next
			30c: R_TC32_ABS32	blt_conn_latency_next
 310:	00808016 	taddeq	r8, r0, r6, lsl r0
 314:	00000000 	tandeq	r0, r0, r0
			314: R_TC32_ABS32	blt_conn_timeout_next
 318:	00808018 	taddeq	r8, r0, r8, lsl r0
	...
			31c: R_TC32_ABS32	.bss.blt_conn_winsize_next
			320: R_TC32_ABS32	.rodata.pkt_version_ind
			324: R_TC32_ABS32	.rodata.pkt_feature_rsp
			328: R_TC32_ABS32	blt_conn_inst
			32c: R_TC32_ABS32	.data.pkt_ping_rsp
			330: R_TC32_ABS32	.data.pkt_unknown
			334: R_TC32_ABS32	apple_need_quick_send_sec_req
			338: R_TC32_ABS32	blt_terminate_pending
			33c: R_TC32_ABS32	.rodata.pkt_slave_terminate
			340: R_TC32_ABS32	blt_conn_timeout
			344: R_TC32_ABS32	.bss.blt_conn_chn_map
			348: R_TC32_ABS32	blt_conn_chn_hop
			34c: R_TC32_ABS32	blt_conn_latency
			350: R_TC32_ABS32	blt_conn_interval
			354: R_TC32_ABS32	.bss.blt_connParaUpReq_sent
			358: R_TC32_ABS32	blt_first_connection
 35c:	0718      	tjex	r3
 35e:	46c0      	tnop			; (mov r8, r8)

Disassembly of section .text.blt_brx_sleep:

00000000 <blt_brx_sleep>:
blt_brx_sleep():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	ec05      	tadds	r5, r0, #0
   4:	97ff 9ffe 	tjl	0 <blt_brx_sleep>
			4: R_TC32_CALL	blt_fifo_empty
   8:	a201      	tmovs	r2, #1
   a:	a800      	tcmp	r0, #0
   c:	c018      	tjeq.n	40 <blt_brx_sleep+0x40>
   e:	0b54      	tloadr	r3, [pc, #336]	; (160 <blt_brx_sleep+0x160>)
  10:	581b      	tloadr	r3, [r3, #0]
  12:	ab00      	tcmp	r3, #0
  14:	c014      	tjeq.n	40 <blt_brx_sleep+0x40>
  16:	0b53      	tloadr	r3, [pc, #332]	; (164 <blt_brx_sleep+0x164>)
  18:	481b      	tloadrb	r3, [r3, #0]
  1a:	ab00      	tcmp	r3, #0
  1c:	c110      	tjne.n	40 <blt_brx_sleep+0x40>
  1e:	0b52      	tloadr	r3, [pc, #328]	; (168 <blt_brx_sleep+0x168>)
  20:	481b      	tloadrb	r3, [r3, #0]
  22:	a200      	tmovs	r2, #0
  24:	ab00      	tcmp	r3, #0
  26:	c00b      	tjeq.n	40 <blt_brx_sleep+0x40>
  28:	0b50      	tloadr	r3, [pc, #320]	; (16c <blt_brx_sleep+0x16c>)
  2a:	281a      	tloadrh	r2, [r3, #0]
  2c:	0b50      	tloadr	r3, [pc, #320]	; (170 <blt_brx_sleep+0x170>)
  2e:	281b      	tloadrh	r3, [r3, #0]
  30:	e8d2      	tadds	r2, r2, r3
  32:	0b50      	tloadr	r3, [pc, #320]	; (174 <blt_brx_sleep+0x174>)
  34:	281b      	tloadrh	r3, [r3, #0]
  36:	ead2      	tsubs	r2, r2, r3
  38:	f412      	tshftls	r2, r2, #16
  3a:	e412      	tasrs	r2, r2, #16
  3c:	03d2      	tmovns	r2, r2
  3e:	ffd2      	tshftrs	r2, r2, #31
  40:	0b4d      	tloadr	r3, [pc, #308]	; (178 <blt_brx_sleep+0x178>)
  42:	481b      	tloadrb	r3, [r3, #0]
  44:	aa00      	tcmp	r2, #0
  46:	c11d      	tjne.n	84 <blt_brx_sleep+0x84>
  48:	ab01      	tcmp	r3, #1
  4a:	c11b      	tjne.n	84 <blt_brx_sleep+0x84>
  4c:	0a4b      	tloadr	r2, [pc, #300]	; (17c <blt_brx_sleep+0x17c>)
  4e:	4812      	tloadrb	r2, [r2, #0]
  50:	aa00      	tcmp	r2, #0
  52:	c017      	tjeq.n	84 <blt_brx_sleep+0x84>
  54:	0a45      	tloadr	r2, [pc, #276]	; (16c <blt_brx_sleep+0x16c>)
  56:	2811      	tloadrh	r1, [r2, #0]
  58:	0a49      	tloadr	r2, [pc, #292]	; (180 <blt_brx_sleep+0x180>)
  5a:	084a      	tloadr	r0, [pc, #296]	; (184 <blt_brx_sleep+0x184>)
  5c:	5800      	tloadr	r0, [r0, #0]
  5e:	0348      	tmuls	r0, r1
  60:	5814      	tloadr	r4, [r2, #0]
  62:	e900      	tadds	r0, r0, r4
  64:	5010      	tstorer	r0, [r2, #0]
  66:	0a48      	tloadr	r2, [pc, #288]	; (188 <blt_brx_sleep+0x188>)
  68:	4812      	tloadrb	r2, [r2, #0]
  6a:	e88a      	tadds	r2, r1, r2
  6c:	8000      	tj.n	70 <blt_brx_sleep+0x70>
  6e:	ba25      	tsubs	r2, #37	; 0x25
  70:	f612      	tshftls	r2, r2, #24
  72:	fe12      	tshftrs	r2, r2, #24
  74:	aa24      	tcmp	r2, #36	; 0x24
  76:	c8fa      	tjhi.n	6e <blt_brx_sleep+0x6e>
  78:	0843      	tloadr	r0, [pc, #268]	; (188 <blt_brx_sleep+0x188>)
  7a:	4002      	tstorerb	r2, [r0, #0]
  7c:	0a3c      	tloadr	r2, [pc, #240]	; (170 <blt_brx_sleep+0x170>)
  7e:	2810      	tloadrh	r0, [r2, #0]
  80:	e809      	tadds	r1, r1, r0
  82:	2011      	tstorerh	r1, [r2, #0]
  84:	0a3e      	tloadr	r2, [pc, #248]	; (180 <blt_brx_sleep+0x180>)
  86:	5814      	tloadr	r4, [r2, #0]
  88:	0a40      	tloadr	r2, [pc, #256]	; (18c <blt_brx_sleep+0x18c>)
  8a:	5812      	tloadr	r2, [r2, #0]
  8c:	eaa4      	tsubs	r4, r4, r2
  8e:	0a40      	tloadr	r2, [pc, #256]	; (190 <blt_brx_sleep+0x190>)
  90:	5811      	tloadr	r1, [r2, #0]
  92:	ec22      	tadds	r2, r4, #0
  94:	ad00      	tcmp	r5, #0
  96:	c00b      	tjeq.n	b0 <blt_brx_sleep+0xb0>
  98:	eb66      	tsubs	r6, r4, r5
  9a:	083e      	tloadr	r0, [pc, #248]	; (194 <blt_brx_sleep+0x194>)
  9c:	0286      	tcmp	r6, r0
  9e:	c807      	tjhi.n	b0 <blt_brx_sleep+0xb0>
  a0:	ea6e      	tsubs	r6, r5, r1
  a2:	0286      	tcmp	r6, r0
  a4:	c804      	tjhi.n	b0 <blt_brx_sleep+0xb0>
  a6:	ea66      	tsubs	r6, r4, r1
  a8:	ec2a      	tadds	r2, r5, #0
  aa:	0286      	tcmp	r6, r0
  ac:	c900      	tjls.n	b0 <blt_brx_sleep+0xb0>
  ae:	ec22      	tadds	r2, r4, #0
  b0:	ab01      	tcmp	r3, #1
  b2:	c104      	tjne.n	be <blt_brx_sleep+0xbe>
  b4:	ea51      	tsubs	r1, r2, r1
  b6:	0838      	tloadr	r0, [pc, #224]	; (198 <blt_brx_sleep+0x198>)
  b8:	0281      	tcmp	r1, r0
  ba:	c850      	tjhi.n	15e <blt_brx_sleep+0x15e>
  bc:	800c      	tj.n	d8 <blt_brx_sleep+0xd8>
  be:	ab00      	tcmp	r3, #0
  c0:	c14d      	tjne.n	15e <blt_brx_sleep+0x15e>
  c2:	ea51      	tsubs	r1, r2, r1
  c4:	0835      	tloadr	r0, [pc, #212]	; (19c <blt_brx_sleep+0x19c>)
  c6:	5800      	tloadr	r0, [r0, #0]
  c8:	f040      	tshftls	r0, r0, #1
  ca:	0281      	tcmp	r1, r0
  cc:	c247      	tjcs.n	15e <blt_brx_sleep+0x15e>
  ce:	0934      	tloadr	r1, [pc, #208]	; (1a0 <blt_brx_sleep+0x1a0>)
  d0:	4809      	tloadrb	r1, [r1, #0]
  d2:	f7c8      	tshftls	r0, r1, #31
  d4:	c404      	tjmi.n	e0 <blt_brx_sleep+0xe0>
  d6:	8042      	tj.n	15e <blt_brx_sleep+0x15e>
  d8:	0931      	tloadr	r1, [pc, #196]	; (1a0 <blt_brx_sleep+0x1a0>)
  da:	4809      	tloadrb	r1, [r1, #0]
  dc:	f78d      	tshftls	r5, r1, #30
  de:	c53e      	tjpl.n	15e <blt_brx_sleep+0x15e>
  e0:	092f      	tloadr	r1, [pc, #188]	; (1a0 <blt_brx_sleep+0x1a0>)
  e2:	4809      	tloadrb	r1, [r1, #0]
  e4:	a000      	tmovs	r0, #0
  e6:	f74f      	tshftls	r7, r1, #29
  e8:	c501      	tjpl.n	ee <blt_brx_sleep+0xee>
  ea:	0258      	tnegs	r0, r3
  ec:	0158      	taddcs	r0, r3
  ee:	0b2d      	tloadr	r3, [pc, #180]	; (1a4 <blt_brx_sleep+0x1a4>)
  f0:	581b      	tloadr	r3, [r3, #0]
  f2:	a102      	tmovs	r1, #2
  f4:	0319      	tors	r1, r3
  f6:	97ff 9ffe 	tjl	0 <blt_sleep_wakeup>
			f6: R_TC32_CALL	blt_sleep_wakeup
  fa:	0b1f      	tloadr	r3, [pc, #124]	; (178 <blt_brx_sleep+0x178>)
  fc:	481b      	tloadrb	r3, [r3, #0]
  fe:	ab01      	tcmp	r3, #1
 100:	c12d      	tjne.n	15e <blt_brx_sleep+0x15e>
 102:	0b23      	tloadr	r3, [pc, #140]	; (190 <blt_brx_sleep+0x190>)
 104:	581a      	tloadr	r2, [r3, #0]
 106:	eaa2      	tsubs	r2, r4, r2
 108:	0827      	tloadr	r0, [pc, #156]	; (1a8 <blt_brx_sleep+0x1a8>)
 10a:	e812      	tadds	r2, r2, r0
 10c:	0d21      	tloadr	r5, [pc, #132]	; (194 <blt_brx_sleep+0x194>)
 10e:	02aa      	tcmp	r2, r5
 110:	c825      	tjhi.n	15e <blt_brx_sleep+0x15e>
 112:	581e      	tloadr	r6, [r3, #0]
 114:	0b1c      	tloadr	r3, [pc, #112]	; (188 <blt_brx_sleep+0x188>)
 116:	4819      	tloadrb	r1, [r3, #0]
 118:	0b15      	tloadr	r3, [pc, #84]	; (170 <blt_brx_sleep+0x170>)
 11a:	281a      	tloadrh	r2, [r3, #0]
 11c:	0b18      	tloadr	r3, [pc, #96]	; (180 <blt_brx_sleep+0x180>)
 11e:	581b      	tloadr	r3, [r3, #0]
 120:	0818      	tloadr	r0, [pc, #96]	; (184 <blt_brx_sleep+0x184>)
 122:	5800      	tloadr	r0, [r0, #0]
 124:	0240      	tnegs	r0, r0
 126:	eb86      	tsubs	r6, r0, r6
 128:	0f20      	tloadr	r7, [pc, #128]	; (1ac <blt_brx_sleep+0x1ac>)
 12a:	e9f6      	tadds	r6, r6, r7
 12c:	e934      	tadds	r4, r6, r4
 12e:	a724      	tmovs	r7, #36	; 0x24
 130:	800d      	tj.n	14e <blt_brx_sleep+0x14e>
 132:	ee4e      	tsubs	r6, r1, #1
 134:	f636      	tshftls	r6, r6, #24
 136:	fe36      	tshftrs	r6, r6, #24
 138:	a124      	tmovs	r1, #36	; 0x24
 13a:	02b7      	tcmp	r7, r6
 13c:	c900      	tjls.n	140 <blt_brx_sleep+0x140>
 13e:	ec31      	tadds	r1, r6, #0
 140:	f609      	tshftls	r1, r1, #24
 142:	fe09      	tshftrs	r1, r1, #24
 144:	e824      	tadds	r4, r4, r0
 146:	ba01      	tsubs	r2, #1
 148:	f412      	tshftls	r2, r2, #16
 14a:	fc12      	tshftrs	r2, r2, #16
 14c:	e81b      	tadds	r3, r3, r0
 14e:	02ac      	tcmp	r4, r5
 150:	c9ef      	tjls.n	132 <blt_brx_sleep+0x132>
 152:	080d      	tloadr	r0, [pc, #52]	; (188 <blt_brx_sleep+0x188>)
 154:	4001      	tstorerb	r1, [r0, #0]
 156:	0906      	tloadr	r1, [pc, #24]	; (170 <blt_brx_sleep+0x170>)
 158:	200a      	tstorerh	r2, [r1, #0]
 15a:	0a09      	tloadr	r2, [pc, #36]	; (180 <blt_brx_sleep+0x180>)
 15c:	5013      	tstorer	r3, [r2, #0]
 15e:	6df0      	tpop	{r4, r5, r6, r7, pc}
	...
			160: R_TC32_ABS32	.bss.blt_conn_tick_1stRx
			164: R_TC32_ABS32	.bss.blt_retry
			168: R_TC32_ABS32	.bss.blt_conn_update
			16c: R_TC32_ABS32	blt_conn_latency
			170: R_TC32_ABS32	blt_conn_inst
			174: R_TC32_ABS32	blt_conn_inst_next
			178: R_TC32_ABS32	.bss.blt_state
			17c: R_TC32_ABS32	.bss.blt_new_connection
			180: R_TC32_ABS32	blt_connExpectTime
			184: R_TC32_ABS32	blt_conn_interval
			188: R_TC32_ABS32	blt_ll_chn_idx
			18c: R_TC32_ABS32	blt_conn_tolerance_time
 190:	00800740 	taddeq	r0, r0, r0, asr #14
 194:	3fffffff 	tservcc	0x00ffffff
 198:	07a11fff 	undefined instruction 0x07a11fff
	...
			19c: R_TC32_ABS32	.data.blt_adv_interval
			1a0: R_TC32_ABS32	blt_suspend_mask
			1a4: R_TC32_ABS32	.bss.blt_wakeup_src
 1a8:	ffff0600 	undefined instruction 0xffff0600
 1ac:	fffe8900 	undefined instruction 0xfffe8900

Disassembly of section .text.blt_enable_suspend:

00000000 <blt_enable_suspend>:
blt_enable_suspend():
   0:	0b02      	tloadr	r3, [pc, #8]	; (c <blt_enable_suspend+0xc>)
   2:	481a      	tloadrb	r2, [r3, #0]
   4:	4018      	tstorerb	r0, [r3, #0]
   6:	ec10      	tadds	r0, r2, #0
   8:	0770      	tjex	lr
   a:	46c0      	tnop			; (mov r8, r8)
   c:	00000000 	tandeq	r0, r0, r0
			c: R_TC32_ABS32	blt_suspend_mask

Disassembly of section .text.blt_set_wakeup_source:

00000000 <blt_set_wakeup_source>:
blt_set_wakeup_source():
   0:	0b01      	tloadr	r3, [pc, #4]	; (8 <blt_set_wakeup_source+0x8>)
   2:	5018      	tstorer	r0, [r3, #0]
   4:	0770      	tjex	lr
   6:	46c0      	tnop			; (mov r8, r8)
   8:	00000000 	tandeq	r0, r0, r0
			8: R_TC32_ABS32	.bss.blt_wakeup_src

Disassembly of section .text.blt_rc_calib:

00000000 <blt_rc_calib>:
blt_rc_calib():
   0:	0770      	tjex	lr

Disassembly of section .text.blt_update_conn_para:

00000000 <blt_update_conn_para>:
blt_update_conn_para():
   0:	6530      	tpush	{r4, r5, lr}
   2:	0c06      	tloadr	r4, [pc, #24]	; (1c <blt_update_conn_para+0x1c>)
   4:	ec25      	tadds	r5, r4, #0
   6:	b50e      	tadds	r5, #14
   8:	21e0      	tstorerh	r0, [r4, #14]
   a:	2069      	tstorerh	r1, [r5, #2]
   c:	20aa      	tstorerh	r2, [r5, #4]
   e:	20eb      	tstorerh	r3, [r5, #6]
  10:	0b03      	tloadr	r3, [pc, #12]	; (20 <blt_update_conn_para+0x20>)
  12:	501c      	tstorer	r4, [r3, #0]
  14:	a200      	tmovs	r2, #0
  16:	0b03      	tloadr	r3, [pc, #12]	; (24 <blt_update_conn_para+0x24>)
  18:	401a      	tstorerb	r2, [r3, #0]
  1a:	6d30      	tpop	{r4, r5, pc}
	...
			1c: R_TC32_ABS32	.data.connParaUpReq
			20: R_TC32_ABS32	.bss.blt_p_connParaUpReq
			24: R_TC32_ABS32	.bss.blt_connParaUpReq_sent

Disassembly of section .text.blt_update_parameter_request:

00000000 <blt_update_parameter_request>:
blt_update_parameter_request():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	0e0b      	tloadr	r6, [pc, #44]	; (30 <blt_update_parameter_request+0x30>)
   4:	4833      	tloadrb	r3, [r6, #0]
   6:	ab00      	tcmp	r3, #0
   8:	c111      	tjne.n	2e <blt_update_parameter_request+0x2e>
   a:	0c0a      	tloadr	r4, [pc, #40]	; (34 <blt_update_parameter_request+0x34>)
   c:	5822      	tloadr	r2, [r4, #0]
   e:	0d0a      	tloadr	r5, [pc, #40]	; (38 <blt_update_parameter_request+0x38>)
  10:	582b      	tloadr	r3, [r5, #0]
  12:	ead2      	tsubs	r2, r2, r3
  14:	0b09      	tloadr	r3, [pc, #36]	; (3c <blt_update_parameter_request+0x3c>)
  16:	029a      	tcmp	r2, r3
  18:	c909      	tjls.n	2e <blt_update_parameter_request+0x2e>
  1a:	0b09      	tloadr	r3, [pc, #36]	; (40 <blt_update_parameter_request+0x40>)
  1c:	5818      	tloadr	r0, [r3, #0]
  1e:	97ff 9ffe 	tjl	0 <blt_update_parameter_request>
			1e: R_TC32_CALL	blt_push_fifo
  22:	a800      	tcmp	r0, #0
  24:	c003      	tjeq.n	2e <blt_update_parameter_request+0x2e>
  26:	5823      	tloadr	r3, [r4, #0]
  28:	502b      	tstorer	r3, [r5, #0]
  2a:	a301      	tmovs	r3, #1
  2c:	4033      	tstorerb	r3, [r6, #0]
  2e:	6d70      	tpop	{r4, r5, r6, pc}
  30:	00000000 	tandeq	r0, r0, r0
			30: R_TC32_ABS32	.bss.blt_connParaUpReq_sent
  34:	00800740 	taddeq	r0, r0, r0, asr #14
  38:	00000000 	tandeq	r0, r0, r0
			38: R_TC32_ABS32	.bss.blt_conn_start_tick
  3c:	01e84800 	tmovneq	r4, r0, lsl #16
  40:	00000000 	tandeq	r0, r0, r0
			40: R_TC32_ABS32	.bss.blt_p_connParaUpReq

Disassembly of section .text.blt_update_connPara_request:

00000000 <blt_update_connPara_request>:
blt_update_connPara_request():
   0:	6530      	tpush	{r4, r5, lr}
   2:	0c06      	tloadr	r4, [pc, #24]	; (1c <blt_update_connPara_request+0x1c>)
   4:	ec25      	tadds	r5, r4, #0
   6:	b50e      	tadds	r5, #14
   8:	21e0      	tstorerh	r0, [r4, #14]
   a:	2069      	tstorerh	r1, [r5, #2]
   c:	20aa      	tstorerh	r2, [r5, #4]
   e:	20eb      	tstorerh	r3, [r5, #6]
  10:	0b03      	tloadr	r3, [pc, #12]	; (20 <blt_update_connPara_request+0x20>)
  12:	501c      	tstorer	r4, [r3, #0]
  14:	ec20      	tadds	r0, r4, #0
  16:	97ff 9ffe 	tjl	0 <blt_update_connPara_request>
			16: R_TC32_CALL	blt_push_fifo
  1a:	6d30      	tpop	{r4, r5, pc}
	...
			1c: R_TC32_ABS32	.data.connParaUpReq
			20: R_TC32_ABS32	.bss.blt_p_connParaUpReq

Disassembly of section .text.device_status_update:

00000000 <device_status_update>:
device_status_update():
   0:	f400      	tshftls	r0, r0, #16
   2:	fc02      	tshftrs	r2, r0, #16
   4:	0b07      	tloadr	r3, [pc, #28]	; (24 <device_status_update+0x24>)
   6:	201a      	tstorerh	r2, [r3, #0]
   8:	0b07      	tloadr	r3, [pc, #28]	; (28 <device_status_update+0x28>)
   a:	f212      	tshftls	r2, r2, #8
   c:	fe00      	tshftrs	r0, r0, #24
   e:	0302      	tors	r2, r0
  10:	205a      	tstorerh	r2, [r3, #2]
  12:	0a06      	tloadr	r2, [pc, #24]	; (2c <device_status_update+0x2c>)
  14:	5810      	tloadr	r0, [r2, #0]
  16:	a101      	tmovs	r1, #1
  18:	0301      	tors	r1, r0
  1a:	5011      	tstorer	r1, [r2, #0]
  1c:	0a04      	tloadr	r2, [pc, #16]	; (30 <device_status_update+0x30>)
  1e:	5812      	tloadr	r2, [r2, #0]
  20:	505a      	tstorer	r2, [r3, #4]
  22:	0770      	tjex	lr
	...
			24: R_TC32_ABS32	.bss.dbg_st.4320
			28: R_TC32_ABS32	.bss.mesh_node_st
			2c: R_TC32_ABS32	.bss.mesh_node_mask
  30:	00800740 	taddeq	r0, r0, r0, asr #14

Disassembly of section .text.register_mesh_node_status_callback:

00000000 <register_mesh_node_status_callback>:
register_mesh_node_status_callback():
   0:	0b01      	tloadr	r3, [pc, #4]	; (8 <register_mesh_node_status_callback+0x8>)
   2:	5018      	tstorer	r0, [r3, #0]
   4:	0770      	tjex	lr
   6:	46c0      	tnop			; (mov r8, r8)
   8:	00000000 	tandeq	r0, r0, r0
			8: R_TC32_ABS32	.bss.p_mesh_node_status_callback

Disassembly of section .text.mesh_node_init:

00000000 <mesh_node_init>:
mesh_node_init():
   0:	0a0a      	tloadr	r2, [pc, #40]	; (2c <mesh_node_init+0x2c>)
   2:	ec13      	tadds	r3, r2, #0
   4:	b308      	tadds	r3, #8
   6:	b201      	tadds	r2, #1
   8:	b2ff      	tadds	r2, #255	; 0xff
   a:	a100      	tmovs	r1, #0
   c:	5019      	tstorer	r1, [r3, #0]
   e:	b308      	tadds	r3, #8
  10:	0293      	tcmp	r3, r2
  12:	c1fb      	tjne.n	c <mesh_node_init+0xc>
  14:	0b06      	tloadr	r3, [pc, #24]	; (30 <mesh_node_init+0x30>)
  16:	481a      	tloadrb	r2, [r3, #0]
  18:	f212      	tshftls	r2, r2, #8
  1a:	0b06      	tloadr	r3, [pc, #24]	; (34 <mesh_node_init+0x34>)
  1c:	481b      	tloadrb	r3, [r3, #0]
  1e:	031a      	tors	r2, r3
  20:	0b02      	tloadr	r3, [pc, #8]	; (2c <mesh_node_init+0x2c>)
  22:	501a      	tstorer	r2, [r3, #0]
  24:	a201      	tmovs	r2, #1
  26:	0b04      	tloadr	r3, [pc, #16]	; (38 <mesh_node_init+0x38>)
  28:	401a      	tstorerb	r2, [r3, #0]
  2a:	0770      	tjex	lr
	...
			2c: R_TC32_ABS32	.bss.mesh_node_st
			30: R_TC32_ABS32	.data.device_node_sn
			34: R_TC32_ABS32	blt_mesh_adr
			38: R_TC32_ABS32	.bss.mesh_node_max

Disassembly of section .text.mesh_node_keep_alive:

00000000 <mesh_node_keep_alive>:
mesh_node_keep_alive():
   0:	0b08      	tloadr	r3, [pc, #32]	; (24 <mesh_node_keep_alive+0x24>)
   2:	481a      	tloadrb	r2, [r3, #0]
   4:	b201      	tadds	r2, #1
   6:	f612      	tshftls	r2, r2, #24
   8:	fe12      	tshftrs	r2, r2, #24
   a:	401a      	tstorerb	r2, [r3, #0]
   c:	aa00      	tcmp	r2, #0
   e:	c101      	tjne.n	14 <mesh_node_keep_alive+0x14>
  10:	a201      	tmovs	r2, #1
  12:	401a      	tstorerb	r2, [r3, #0]
  14:	0b04      	tloadr	r3, [pc, #16]	; (28 <mesh_node_keep_alive+0x28>)
  16:	0a03      	tloadr	r2, [pc, #12]	; (24 <mesh_node_keep_alive+0x24>)
  18:	4812      	tloadrb	r2, [r2, #0]
  1a:	405a      	tstorerb	r2, [r3, #1]
  1c:	0a03      	tloadr	r2, [pc, #12]	; (2c <mesh_node_keep_alive+0x2c>)
  1e:	5812      	tloadr	r2, [r2, #0]
  20:	505a      	tstorer	r2, [r3, #4]
  22:	0770      	tjex	lr
	...
			24: R_TC32_ABS32	.data.device_node_sn
			28: R_TC32_ABS32	.bss.mesh_node_st
  2c:	00800740 	taddeq	r0, r0, r0, asr #14

Disassembly of section .text.mesh_node_update_status:

00000000 <mesh_node_update_status>:
mesh_node_update_status():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6086      	tsub	sp, #24
   4:	0b4a      	tloadr	r3, [pc, #296]	; (130 <mesh_node_update_status+0x130>)
   6:	581f      	tloadr	r7, [r3, #0]
   8:	a301      	tmovs	r3, #1
   a:	031f      	tors	r7, r3
   c:	f089      	tshftls	r1, r1, #2
   e:	3103      	tstorer	r1, [sp, #12]
  10:	ec06      	tadds	r6, r0, #0
  12:	a000      	tmovs	r0, #0
  14:	3000      	tstorer	r0, [sp, #0]
  16:	8083      	tj.n	120 <mesh_node_update_status+0x120>
  18:	4831      	tloadrb	r1, [r6, #0]
  1a:	a900      	tcmp	r1, #0
  1c:	c100      	tjne.n	20 <mesh_node_update_status+0x20>
  1e:	8084      	tj.n	12a <mesh_node_update_status+0x12a>
  20:	0a44      	tloadr	r2, [pc, #272]	; (134 <mesh_node_update_status+0x134>)
  22:	4813      	tloadrb	r3, [r2, #0]
  24:	028b      	tcmp	r3, r1
  26:	c077      	tjeq.n	118 <mesh_node_update_status+0x118>
  28:	0c43      	tloadr	r4, [pc, #268]	; (138 <mesh_node_update_status+0x138>)
  2a:	4823      	tloadrb	r3, [r4, #0]
  2c:	0a43      	tloadr	r2, [pc, #268]	; (13c <mesh_node_update_status+0x13c>)
  2e:	b208      	tadds	r2, #8
  30:	a501      	tmovs	r5, #1
  32:	8004      	tj.n	3e <mesh_node_update_status+0x3e>
  34:	4810      	tloadrb	r0, [r2, #0]
  36:	b208      	tadds	r2, #8
  38:	0281      	tcmp	r1, r0
  3a:	c002      	tjeq.n	42 <mesh_node_update_status+0x42>
  3c:	b501      	tadds	r5, #1
  3e:	029d      	tcmp	r5, r3
  40:	cbf8      	tjlt.n	34 <mesh_node_update_status+0x34>
  42:	ad20      	tcmp	r5, #32
  44:	c102      	tjne.n	4c <mesh_node_update_status+0x4c>
  46:	97ff 9ffe 	tjl	0 <mesh_node_update_status>
			46: R_TC32_CALL	mesh_node_init
  4a:	806e      	tj.n	12a <mesh_node_update_status+0x12a>
  4c:	029d      	tcmp	r5, r3
  4e:	c117      	tjne.n	80 <mesh_node_update_status+0x80>
  50:	ec6a      	tadds	r2, r5, #1
  52:	0b39      	tloadr	r3, [pc, #228]	; (138 <mesh_node_update_status+0x138>)
  54:	401a      	tstorerb	r2, [r3, #0]
  56:	f0eb      	tshftls	r3, r5, #3
  58:	0c38      	tloadr	r4, [pc, #224]	; (13c <mesh_node_update_status+0x13c>)
  5a:	e8e4      	tadds	r4, r4, r3
  5c:	ec20      	tadds	r0, r4, #0
  5e:	ec31      	tadds	r1, r6, #0
  60:	a204      	tmovs	r2, #4
  62:	97ff 9ffe 	tjl	0 <memcpy>
			62: R_TC32_CALL	memcpy
  66:	5067      	tstorer	r7, [r4, #4]
  68:	e16a      	tasrs	r2, r5, #5
  6a:	0b35      	tloadr	r3, [pc, #212]	; (140 <mesh_node_update_status+0x140>)
  6c:	f092      	tshftls	r2, r2, #2
  6e:	a11f      	tmovs	r1, #31
  70:	000d      	tands	r5, r1
  72:	a001      	tmovs	r0, #1
  74:	00a8      	tshftls	r0, r5
  76:	ec05      	tadds	r5, r0, #0
  78:	18d1      	tloadr	r1, [r2, r3]
  7a:	030d      	tors	r5, r1
  7c:	10d5      	tstorer	r5, [r2, r3]
  7e:	804b      	tj.n	118 <mesh_node_update_status+0x118>
  80:	029d      	tcmp	r5, r3
  82:	ca49      	tjge.n	118 <mesh_node_update_status+0x118>
  84:	0a2d      	tloadr	r2, [pc, #180]	; (13c <mesh_node_update_status+0x13c>)
  86:	f0eb      	tshftls	r3, r5, #3
  88:	1899      	tloadr	r1, [r3, r2]
  8a:	3101      	tstorer	r1, [sp, #4]
  8c:	fa09      	tshftrs	r1, r1, #8
  8e:	4870      	tloadrb	r0, [r6, #1]
  90:	ea41      	tsubs	r1, r0, r1
  92:	f609      	tshftls	r1, r1, #24
  94:	48b4      	tloadrb	r4, [r6, #2]
  96:	3404      	tstorer	r4, [sp, #16]
  98:	48f0      	tloadrb	r0, [r6, #3]
  9a:	3005      	tstorer	r0, [sp, #20]
  9c:	fe08      	tshftrs	r0, r1, #24
  9e:	a4ff      	tmovs	r4, #255	; 0xff
  a0:	f624      	tshftls	r4, r4, #24
  a2:	e909      	tadds	r1, r1, r4
  a4:	fe09      	tshftrs	r1, r1, #24
  a6:	a93e      	tcmp	r1, #62	; 0x3e
  a8:	c909      	tjls.n	be <mesh_node_update_status+0xbe>
  aa:	a800      	tcmp	r0, #0
  ac:	c034      	tjeq.n	118 <mesh_node_update_status+0x118>
  ae:	e8d3      	tadds	r3, r2, r3
  b0:	585a      	tloadr	r2, [r3, #4]
  b2:	aa00      	tcmp	r2, #0
  b4:	c003      	tjeq.n	be <mesh_node_update_status+0xbe>
  b6:	eaba      	tsubs	r2, r7, r2
  b8:	0b22      	tloadr	r3, [pc, #136]	; (144 <mesh_node_update_status+0x144>)
  ba:	029a      	tcmp	r2, r3
  bc:	c92c      	tjls.n	118 <mesh_node_update_status+0x118>
  be:	f0e8      	tshftls	r0, r5, #3
  c0:	3002      	tstorer	r0, [sp, #8]
  c2:	0c1e      	tloadr	r4, [pc, #120]	; (13c <mesh_node_update_status+0x13c>)
  c4:	e824      	tadds	r4, r4, r0
  c6:	ec20      	tadds	r0, r4, #0
  c8:	ec31      	tadds	r1, r6, #0
  ca:	a204      	tmovs	r2, #4
  cc:	97ff 9ffe 	tjl	0 <memcpy>
			cc: R_TC32_CALL	memcpy
  d0:	3905      	tloadr	r1, [sp, #20]
  d2:	f20b      	tshftls	r3, r1, #8
  d4:	3a04      	tloadr	r2, [sp, #16]
  d6:	0313      	tors	r3, r2
  d8:	3801      	tloadr	r0, [sp, #4]
  da:	fc02      	tshftrs	r2, r0, #16
  dc:	0293      	tcmp	r3, r2
  de:	c102      	tjne.n	e6 <mesh_node_update_status+0xe6>
  e0:	5863      	tloadr	r3, [r4, #4]
  e2:	ab00      	tcmp	r3, #0
  e4:	c10a      	tjne.n	fc <mesh_node_update_status+0xfc>
  e6:	e16a      	tasrs	r2, r5, #5
  e8:	0b15      	tloadr	r3, [pc, #84]	; (140 <mesh_node_update_status+0x140>)
  ea:	f092      	tshftls	r2, r2, #2
  ec:	a01f      	tmovs	r0, #31
  ee:	0028      	tands	r0, r5
  f0:	a101      	tmovs	r1, #1
  f2:	0081      	tshftls	r1, r0
  f4:	ec08      	tadds	r0, r1, #0
  f6:	18d1      	tloadr	r1, [r2, r3]
  f8:	0301      	tors	r1, r0
  fa:	10d1      	tstorer	r1, [r2, r3]
  fc:	f0ed      	tshftls	r5, r5, #3
  fe:	0b0f      	tloadr	r3, [pc, #60]	; (13c <mesh_node_update_status+0x13c>)
 100:	e95d      	tadds	r5, r3, r5
 102:	506f      	tstorer	r7, [r5, #4]
 104:	0b10      	tloadr	r3, [pc, #64]	; (148 <mesh_node_update_status+0x148>)
 106:	581b      	tloadr	r3, [r3, #0]
 108:	ab00      	tcmp	r3, #0
 10a:	c005      	tjeq.n	118 <mesh_node_update_status+0x118>
 10c:	0a0b      	tloadr	r2, [pc, #44]	; (13c <mesh_node_update_status+0x13c>)
 10e:	ec10      	tadds	r0, r2, #0
 110:	3a02      	tloadr	r2, [sp, #8]
 112:	e880      	tadds	r0, r0, r2
 114:	9000 981a 	tjl	14c <mesh_node_update_status+0x14c>
 118:	3b00      	tloadr	r3, [sp, #0]
 11a:	b304      	tadds	r3, #4
 11c:	3300      	tstorer	r3, [sp, #0]
 11e:	b604      	tadds	r6, #4
 120:	3c00      	tloadr	r4, [sp, #0]
 122:	3803      	tloadr	r0, [sp, #12]
 124:	0284      	tcmp	r4, r0
 126:	ca00      	tjge.n	12a <mesh_node_update_status+0x12a>
 128:	8776      	tj.n	18 <mesh_node_update_status+0x18>
 12a:	6006      	tadd	sp, #24
 12c:	6df0      	tpop	{r4, r5, r6, r7, pc}
 12e:	46c0      	tnop			; (mov r8, r8)
 130:	00800740 	taddeq	r0, r0, r0, asr #14
	...
			134: R_TC32_ABS32	blt_mesh_adr
			138: R_TC32_ABS32	.bss.mesh_node_max
			13c: R_TC32_ABS32	.bss.mesh_node_st
			140: R_TC32_ABS32	.bss.mesh_node_mask
 144:	02dc6c00 	tsubcseq	r6, ip, #0
 148:	00000000 	tandeq	r0, r0, r0
			148: R_TC32_ABS32	.bss.p_mesh_node_status_callback
 14c:	0718      	tjex	r3
 14e:	46c0      	tnop			; (mov r8, r8)

Disassembly of section .text.mesh_node_flush_status:

00000000 <mesh_node_flush_status>:
mesh_node_flush_status():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6081      	tsub	sp, #4
   4:	0b1e      	tloadr	r3, [pc, #120]	; (80 <mesh_node_flush_status+0x80>)
   6:	5818      	tloadr	r0, [r3, #0]
   8:	0a1e      	tloadr	r2, [pc, #120]	; (84 <mesh_node_flush_status+0x84>)
   a:	e880      	tadds	r0, r0, r2
   c:	091e      	tloadr	r1, [pc, #120]	; (88 <mesh_node_flush_status+0x88>)
   e:	580a      	tloadr	r2, [r1, #0]
  10:	ea80      	tsubs	r0, r0, r2
  12:	a280      	tmovs	r2, #128	; 0x80
  14:	f5d2      	tshftls	r2, r2, #23
  16:	0290      	tcmp	r0, r2
  18:	c82f      	tjhi.n	7a <mesh_node_flush_status+0x7a>
  1a:	581a      	tloadr	r2, [r3, #0]
  1c:	500a      	tstorer	r2, [r1, #0]
  1e:	581b      	tloadr	r3, [r3, #0]
  20:	3300      	tstorer	r3, [sp, #0]
  22:	0c1a      	tloadr	r4, [pc, #104]	; (8c <mesh_node_flush_status+0x8c>)
  24:	b408      	tadds	r4, #8
  26:	a501      	tmovs	r5, #1
  28:	0e19      	tloadr	r6, [pc, #100]	; (90 <mesh_node_flush_status+0x90>)
  2a:	0f1a      	tloadr	r7, [pc, #104]	; (94 <mesh_node_flush_status+0x94>)
  2c:	8021      	tj.n	72 <mesh_node_flush_status+0x72>
  2e:	5863      	tloadr	r3, [r4, #4]
  30:	ab00      	tcmp	r3, #0
  32:	c01c      	tjeq.n	6e <mesh_node_flush_status+0x6e>
  34:	3a00      	tloadr	r2, [sp, #0]
  36:	ead1      	tsubs	r1, r2, r3
  38:	5833      	tloadr	r3, [r6, #0]
  3a:	f15a      	tshftls	r2, r3, #5
  3c:	ead2      	tsubs	r2, r2, r3
  3e:	f092      	tshftls	r2, r2, #2
  40:	e8d3      	tadds	r3, r2, r3
  42:	f21a      	tshftls	r2, r3, #8
  44:	0291      	tcmp	r1, r2
  46:	c912      	tjls.n	6e <mesh_node_flush_status+0x6e>
  48:	a300      	tmovs	r3, #0
  4a:	5063      	tstorer	r3, [r4, #4]
  4c:	e16b      	tasrs	r3, r5, #5
  4e:	f09b      	tshftls	r3, r3, #2
  50:	a21f      	tmovs	r2, #31
  52:	002a      	tands	r2, r5
  54:	a101      	tmovs	r1, #1
  56:	0091      	tshftls	r1, r2
  58:	ec0a      	tadds	r2, r1, #0
  5a:	19d9      	tloadr	r1, [r3, r7]
  5c:	030a      	tors	r2, r1
  5e:	11da      	tstorer	r2, [r3, r7]
  60:	0b0d      	tloadr	r3, [pc, #52]	; (98 <mesh_node_flush_status+0x98>)
  62:	581b      	tloadr	r3, [r3, #0]
  64:	ab00      	tcmp	r3, #0
  66:	c002      	tjeq.n	6e <mesh_node_flush_status+0x6e>
  68:	ec20      	tadds	r0, r4, #0
  6a:	9000 9819 	tjl	a0 <mesh_node_flush_status+0xa0>
  6e:	b501      	tadds	r5, #1
  70:	b408      	tadds	r4, #8
  72:	0a0a      	tloadr	r2, [pc, #40]	; (9c <mesh_node_flush_status+0x9c>)
  74:	4813      	tloadrb	r3, [r2, #0]
  76:	029d      	tcmp	r5, r3
  78:	cbd9      	tjlt.n	2e <mesh_node_flush_status+0x2e>
  7a:	6001      	tadd	sp, #4
  7c:	6df0      	tpop	{r4, r5, r6, r7, pc}
  7e:	46c0      	tnop			; (mov r8, r8)
  80:	00800740 	taddeq	r0, r0, r0, asr #14
  84:	ff0bdc00 	undefined instruction 0xff0bdc00
	...
			88: R_TC32_ABS32	.bss.tick_node_report.4357
			8c: R_TC32_ABS32	.bss.mesh_node_st
			90: R_TC32_ABS32	.data.online_status_timeout
			94: R_TC32_ABS32	.bss.mesh_node_mask
			98: R_TC32_ABS32	.bss.p_mesh_node_status_callback
			9c: R_TC32_ABS32	.bss.mesh_node_max
  a0:	0718      	tjex	r3
  a2:	46c0      	tnop			; (mov r8, r8)

Disassembly of section .text.mesh_node_report_status:

00000000 <mesh_node_report_status>:
mesh_node_report_status():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6083      	tsub	sp, #12
   4:	3000      	tstorer	r0, [sp, #0]
   6:	3101      	tstorer	r1, [sp, #4]
   8:	0b17      	tloadr	r3, [pc, #92]	; (68 <mesh_node_report_status+0x68>)
   a:	481b      	tloadrb	r3, [r3, #0]
   c:	a500      	tmovs	r5, #0
   e:	ab00      	tcmp	r3, #0
  10:	c026      	tjeq.n	60 <mesh_node_report_status+0x60>
  12:	f08a      	tshftls	r2, r1, #2
  14:	a100      	tmovs	r1, #0
  16:	97ff 9ffe 	tjl	0 <memset>
			16: R_TC32_CALL	memset
  1a:	0f14      	tloadr	r7, [pc, #80]	; (6c <mesh_node_report_status+0x6c>)
  1c:	583b      	tloadr	r3, [r7, #0]
  1e:	ab00      	tcmp	r3, #0
  20:	c01e      	tjeq.n	60 <mesh_node_report_status+0x60>
  22:	0c13      	tloadr	r4, [pc, #76]	; (70 <mesh_node_report_status+0x70>)
  24:	a600      	tmovs	r6, #0
  26:	583b      	tloadr	r3, [r7, #0]
  28:	a201      	tmovs	r2, #1
  2a:	00b2      	tshftls	r2, r6
  2c:	0213      	tnand	r3, r2
  2e:	c013      	tjeq.n	58 <mesh_node_report_status+0x58>
  30:	0393      	tbclrs	r3, r2
  32:	503b      	tstorer	r3, [r7, #0]
  34:	f0ab      	tshftls	r3, r5, #2
  36:	3a00      	tloadr	r2, [sp, #0]
  38:	e8d2      	tadds	r2, r2, r3
  3a:	3202      	tstorer	r2, [sp, #8]
  3c:	ec10      	tadds	r0, r2, #0
  3e:	ec21      	tadds	r1, r4, #0
  40:	a204      	tmovs	r2, #4
  42:	97ff 9ffe 	tjl	0 <memcpy>
			42: R_TC32_CALL	memcpy
  46:	5863      	tloadr	r3, [r4, #4]
  48:	ab00      	tcmp	r3, #0
  4a:	c101      	tjne.n	50 <mesh_node_report_status+0x50>
  4c:	3a02      	tloadr	r2, [sp, #8]
  4e:	4053      	tstorerb	r3, [r2, #1]
  50:	b501      	tadds	r5, #1
  52:	3b01      	tloadr	r3, [sp, #4]
  54:	029d      	tcmp	r5, r3
  56:	c003      	tjeq.n	60 <mesh_node_report_status+0x60>
  58:	b601      	tadds	r6, #1
  5a:	b408      	tadds	r4, #8
  5c:	ae20      	tcmp	r6, #32
  5e:	c1e2      	tjne.n	26 <mesh_node_report_status+0x26>
  60:	ec28      	tadds	r0, r5, #0
  62:	6003      	tadd	sp, #12
  64:	6df0      	tpop	{r4, r5, r6, r7, pc}
  66:	46c0      	tnop			; (mov r8, r8)
	...
			68: R_TC32_ABS32	.bss.mesh_node_report_enable
			6c: R_TC32_ABS32	.bss.mesh_node_mask
			70: R_TC32_ABS32	.bss.mesh_node_st

Disassembly of section .text.mesh_node_adv_status:

00000000 <mesh_node_adv_status>:
mesh_node_adv_status():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6081      	tsub	sp, #4
   4:	3000      	tstorer	r0, [sp, #0]
   6:	ec0d      	tadds	r5, r1, #0
   8:	f08a      	tshftls	r2, r1, #2
   a:	a100      	tmovs	r1, #0
   c:	97ff 9ffe 	tjl	0 <memset>
			c: R_TC32_CALL	memset
  10:	0b1a      	tloadr	r3, [pc, #104]	; (7c <mesh_node_adv_status+0x7c>)
  12:	481b      	tloadrb	r3, [r3, #0]
  14:	029d      	tcmp	r5, r3
  16:	cd00      	tjle.n	1a <mesh_node_adv_status+0x1a>
  18:	ec1d      	tadds	r5, r3, #0
  1a:	0f19      	tloadr	r7, [pc, #100]	; (80 <mesh_node_adv_status+0x80>)
  1c:	3800      	tloadr	r0, [sp, #0]
  1e:	ec39      	tadds	r1, r7, #0
  20:	a204      	tmovs	r2, #4
  22:	97ff 9ffe 	tjl	0 <memcpy>
			22: R_TC32_CALL	memcpy
  26:	a601      	tmovs	r6, #1
  28:	a401      	tmovs	r4, #1
  2a:	0f16      	tloadr	r7, [pc, #88]	; (84 <mesh_node_adv_status+0x84>)
  2c:	801e      	tj.n	6c <mesh_node_adv_status+0x6c>
  2e:	0a15      	tloadr	r2, [pc, #84]	; (84 <mesh_node_adv_status+0x84>)
  30:	4811      	tloadrb	r1, [r2, #0]
  32:	0299      	tcmp	r1, r3
  34:	c20c      	tjcs.n	50 <mesh_node_adv_status+0x50>
  36:	f0c9      	tshftls	r1, r1, #3
  38:	0b11      	tloadr	r3, [pc, #68]	; (80 <mesh_node_adv_status+0x80>)
  3a:	e8c9      	tadds	r1, r1, r3
  3c:	584b      	tloadr	r3, [r1, #4]
  3e:	ab00      	tcmp	r3, #0
  40:	c006      	tjeq.n	50 <mesh_node_adv_status+0x50>
  42:	f0a0      	tshftls	r0, r4, #2
  44:	3a00      	tloadr	r2, [sp, #0]
  46:	e880      	tadds	r0, r0, r2
  48:	b401      	tadds	r4, #1
  4a:	a204      	tmovs	r2, #4
  4c:	97ff 9ffe 	tjl	0 <memcpy>
			4c: R_TC32_CALL	memcpy
  50:	483b      	tloadrb	r3, [r7, #0]
  52:	b301      	tadds	r3, #1
  54:	f61b      	tshftls	r3, r3, #24
  56:	fe1b      	tshftrs	r3, r3, #24
  58:	403b      	tstorerb	r3, [r7, #0]
  5a:	0a08      	tloadr	r2, [pc, #32]	; (7c <mesh_node_adv_status+0x7c>)
  5c:	4812      	tloadrb	r2, [r2, #0]
  5e:	029a      	tcmp	r2, r3
  60:	c801      	tjhi.n	66 <mesh_node_adv_status+0x66>
  62:	a301      	tmovs	r3, #1
  64:	403b      	tstorerb	r3, [r7, #0]
  66:	02ac      	tcmp	r4, r5
  68:	c004      	tjeq.n	74 <mesh_node_adv_status+0x74>
  6a:	b601      	tadds	r6, #1
  6c:	0a03      	tloadr	r2, [pc, #12]	; (7c <mesh_node_adv_status+0x7c>)
  6e:	4813      	tloadrb	r3, [r2, #0]
  70:	029e      	tcmp	r6, r3
  72:	cbdc      	tjlt.n	2e <mesh_node_adv_status+0x2e>
  74:	ec20      	tadds	r0, r4, #0
  76:	6001      	tadd	sp, #4
  78:	6df0      	tpop	{r4, r5, r6, r7, pc}
  7a:	46c0      	tnop			; (mov r8, r8)
	...
			7c: R_TC32_ABS32	.bss.mesh_node_max
			80: R_TC32_ABS32	.bss.mesh_node_st
			84: R_TC32_ABS32	.data.mesh_node_cur

Disassembly of section .text.mesh_report_status_enable:

00000000 <mesh_report_status_enable>:
mesh_report_status_enable():
   0:	6530      	tpush	{r4, r5, lr}
   2:	f600      	tshftls	r0, r0, #24
   4:	fe00      	tshftrs	r0, r0, #24
   6:	a800      	tcmp	r0, #0
   8:	c014      	tjeq.n	34 <mesh_report_status_enable+0x34>
   a:	0b0c      	tloadr	r3, [pc, #48]	; (3c <mesh_report_status_enable+0x3c>)
   c:	481a      	tloadrb	r2, [r3, #0]
   e:	f954      	tshftrs	r4, r2, #5
  10:	0b0b      	tloadr	r3, [pc, #44]	; (40 <mesh_report_status_enable+0x40>)
  12:	f0a5      	tshftls	r5, r4, #2
  14:	e95d      	tadds	r5, r3, r5
  16:	a101      	tmovs	r1, #1
  18:	0249      	tnegs	r1, r1
  1a:	8000      	tj.n	1e <mesh_report_status_enable+0x1e>
  1c:	d302      	tstorem	r3!, {r1}
  1e:	02ab      	tcmp	r3, r5
  20:	c1fc      	tjne.n	1c <mesh_report_status_enable+0x1c>
  22:	a31f      	tmovs	r3, #31
  24:	001a      	tands	r2, r3
  26:	c005      	tjeq.n	34 <mesh_report_status_enable+0x34>
  28:	f0a4      	tshftls	r4, r4, #2
  2a:	a301      	tmovs	r3, #1
  2c:	0093      	tshftls	r3, r2
  2e:	bb01      	tsubs	r3, #1
  30:	0903      	tloadr	r1, [pc, #12]	; (40 <mesh_report_status_enable+0x40>)
  32:	1063      	tstorer	r3, [r4, r1]
  34:	0b03      	tloadr	r3, [pc, #12]	; (44 <mesh_report_status_enable+0x44>)
  36:	4018      	tstorerb	r0, [r3, #0]
  38:	6d30      	tpop	{r4, r5, pc}
  3a:	46c0      	tnop			; (mov r8, r8)
	...
			3c: R_TC32_ABS32	.bss.mesh_node_max
			40: R_TC32_ABS32	.bss.mesh_node_mask
			44: R_TC32_ABS32	.bss.mesh_node_report_enable

Disassembly of section .text.mesh_node_report_init:

00000000 <mesh_node_report_init>:
mesh_node_report_init():
   0:	a300      	tmovs	r3, #0
   2:	0a02      	tloadr	r2, [pc, #8]	; (c <mesh_node_report_init+0xc>)
   4:	4013      	tstorerb	r3, [r2, #0]
   6:	0a02      	tloadr	r2, [pc, #8]	; (10 <mesh_node_report_init+0x10>)
   8:	5013      	tstorer	r3, [r2, #0]
   a:	0770      	tjex	lr
	...
			c: R_TC32_ABS32	.bss.mesh_node_report_enable
			10: R_TC32_ABS32	.bss.mesh_node_mask

Disassembly of section .text.register_mesh_node_monitor:

00000000 <register_mesh_node_monitor>:
register_mesh_node_monitor():
   0:	0b01      	tloadr	r3, [pc, #4]	; (8 <register_mesh_node_monitor+0x8>)
   2:	5018      	tstorer	r0, [r3, #0]
   4:	0770      	tjex	lr
   6:	46c0      	tnop			; (mov r8, r8)
   8:	00000000 	tandeq	r0, r0, r0
			8: R_TC32_ABS32	.bss.slave_func_monitor

Disassembly of section .bss.mesh_node_max:

00000000 <mesh_node_max>:
	...

Disassembly of section .data.mesh_node_cur:

00000000 <mesh_node_cur>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .rodata.pkt_slave_terminate:

00000000 <pkt_slave_terminate>:
   0:	00000004 	tandeq	r0, r0, r4
   4:	13020203 	tnandne	r2, #805306368	; 0x30000000

Disassembly of section .bss.blt_tx_crc_empty:

00000000 <blt_tx_crc_empty>:
	...

Disassembly of section .bss.func_smp_enc:

00000000 <func_smp_enc>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_pn_table_1:

00000000 <blt_pn_table_1>:
	...

Disassembly of section .bss.blt_pn_table_2:

00000000 <blt_pn_table_2>:
	...

Disassembly of section .bss.beacon_pn_table:

00000000 <beacon_pn_table>:
	...

Disassembly of section .data.blt_tx_empty_packet:

00000000 <blt_tx_empty_packet>:
   0:	00000001 	tandeq	r0, r0, r1
   4:	00000000 	tandeq	r0, r0, r0

Disassembly of section .rodata.pkt_version_ind:

00000000 <pkt_version_ind>:
   0:	00000008 	tandeq	r0, r0, r8
   4:	060c0603 	tstorereq	r0, [ip], -r3, lsl #12
   8:	41030211 	tnandmi	r3, r1, lsl r2

Disassembly of section .data.pkt_unknown:

00000000 <pkt_unknown>:
   0:	00000004 	tandeq	r0, r0, r4
   4:	12070203 	tandne	r0, r7, #805306368	; 0x30000000

Disassembly of section .bss.blt_p_mac:

00000000 <blt_p_mac>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.flag_channel_current:

00000000 <flag_channel_current>:
	...

Disassembly of section .data.pkt_notify_short:

00000000 <pkt_notify_short>:
   0:	0000000b 	tandeq	r0, r0, fp
   4:	00050902 	tandeq	r0, r5, r2, lsl #18
   8:	0e1b0004 	undefined instruction 0x0e1b0004
	...

Disassembly of section .bss.ConnExpectDiff:

00000000 <ConnExpectDiff>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.tick_node_report.4357:

00000000 <tick_node_report.4357>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_state:

00000000 <blt_state>:
	...

Disassembly of section .bss.blt_32k_cal_time_last:

00000000 <blt_32k_cal_time_last>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_crc_init:

00000000 <blt_crc_init>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .data.pkt_ping_rsp:

00000000 <pkt_ping_rsp>:
   0:	00000003 	tandeq	r0, r0, r3
   4:	00130103 	tandseq	r0, r3, r3, lsl #2

Disassembly of section .bss.blt_p_adv:

00000000 <blt_p_adv>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.func_smp_brx:

00000000 <func_smp_brx>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.func_smp_init:

00000000 <func_smp_init>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_conn_winsize_next:

00000000 <blt_conn_winsize_next>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.irq_enabled_flag:

00000000 <irq_enabled_flag>:
	...

Disassembly of section .bss.blt_p_connParaUpReq:

00000000 <blt_p_connParaUpReq>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .data.blt_adv_chn_mask:

00000000 <blt_adv_chn_mask>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .bss.p_mesh_node_status_callback:

00000000 <p_mesh_node_status_callback>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_wakeup_src:

00000000 <blt_wakeup_src>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .data.blt_rx_len:

00000000 <blt_rx_len>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .bss.func_pair_proc:

00000000 <func_pair_proc>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_retry:

00000000 <blt_retry>:
	...

Disassembly of section .bss.blt_conn_tick_1stRx:

00000000 <blt_conn_tick_1stRx>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.func_pair_init:

00000000 <func_pair_init>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_new_connection:

00000000 <blt_new_connection>:
	...

Disassembly of section .bss.blt_tx_pkt_hold:

00000000 <blt_tx_pkt_hold>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_test_dongle_conn:

00000000 <blt_test_dongle_conn>:
	...

Disassembly of section .bss.func_timing_update:

00000000 <func_timing_update>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .data.device_node_sn:

00000000 <device_node_sn>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .bss.blt_tx_send:

00000000 <blt_tx_send>:
	...

Disassembly of section .bss.mesh_node_st:

00000000 <mesh_node_st>:
	...

Disassembly of section .bss.variant.4244:

00000000 <variant.4244>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.beacon_adv_tx_pn_ptr:

00000000 <beacon_adv_tx_pn_ptr>:
	...

Disassembly of section .data.blt_adv_interval:

00000000 <blt_adv_interval>:
   0:	0009c400 	tandeq	ip, r9, r0, lsl #8

Disassembly of section .bss.blt_conn_chn_map_next:

00000000 <blt_conn_chn_map_next>:
	...

Disassembly of section .bss.blt_conn_offset_next:

00000000 <blt_conn_offset_next>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.tick_last_tx.4003:

00000000 <tick_last_tx.4003>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .data.connParaUpReq:

00000000 <connParaUpReq>:
   0:	00000012 	tandeq	r0, r0, r2, lsl r0
   4:	000c1002 	tandeq	r1, ip, r2
   8:	01120005 	tnandeq	r2, r5
   c:	00680008 	trsubeq	r0, r8, r8
  10:	00000078 	tandeq	r0, r0, r8, ror r0
  14:	00000258 	tandeq	r0, r0, r8, asr r2

Disassembly of section .bss.blt_conn_update:

00000000 <blt_conn_update>:
	...

Disassembly of section .bss.blt_p_rsp:

00000000 <blt_p_rsp>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.mesh_node_mask:

00000000 <mesh_node_mask>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.dbg_st.4320:

00000000 <dbg_st.4320>:
	...

Disassembly of section .bss.flag_pn_table_1:

00000000 <flag_pn_table_1>:
	...

Disassembly of section .bss.blt_adv_latency:

00000000 <blt_adv_latency>:
	...

Disassembly of section .rodata.C.191.6366:

00000000 <C.191.6366>:
   0:	0c040800 	undefined instruction 0x0c040800
   4:	0e060a02 	undefined instruction 0x0e060a02
   8:	0d050901 	undefined instruction 0x0d050901
   c:	0f070b03 	tserveq	0x00070b03

Disassembly of section .bss.mesh_node_report_enable:

00000000 <mesh_node_report_enable>:
	...

Disassembly of section .bss.conn_req_handle:

00000000 <conn_req_handle>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .data.current_pn_table:

00000000 <current_pn_table>:
   0:	00000000 	tandeq	r0, r0, r0
			0: R_TC32_ABS32	blt_pn_table_0

Disassembly of section .bss.blt_mesh_group:

00000000 <blt_mesh_group>:
	...

Disassembly of section .rodata.pkt_feature_rsp:

00000000 <pkt_feature_rsp>:
   0:	0000000b 	tandeq	r0, r0, fp
   4:	01090903 	tnandeq	r9, r3, lsl #18
	...

Disassembly of section .bss.blt_tx_sending:

00000000 <blt_tx_sending>:
	...

Disassembly of section .bss.blt_conn_chn_map:

00000000 <blt_conn_chn_map>:
	...

Disassembly of section .bss.blt_conn_start_tick:

00000000 <blt_conn_start_tick>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .data.online_status_timeout:

00000000 <online_status_timeout>:
   0:	00000bb8 	undefined instruction 0x00000bb8

Disassembly of section .bss.slave_func_monitor:

00000000 <slave_func_monitor>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.blt_brx_synced:

00000000 <blt_brx_synced>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.flag_pn_table_0:

00000000 <flag_pn_table_0>:
	...

Disassembly of section .bss.blt_connParaUpReq_sent:

00000000 <blt_connParaUpReq_sent>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

aes_ccm.o:     file format elf32-littletc32
rw-rw-rw- 0/0   4328 Jan 30 00:17 2019 aes_ccm.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.aes_ll_swap 0000001a  00000000  00000000  00000034  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.aes_encrypt 00000016  00000000  00000000  0000004e  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.aes_initKey 0000001c  00000000  00000000  00000064  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.aes_ccmAuthTran 00000112  00000000  00000000  00000080  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.aes_ccmBaseTran 000000bc  00000000  00000000  00000192  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.aes_ll_encryption 00000044  00000000  00000000  0000024e  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.aes_ll_s1 0000002e  00000000  00000000  00000292  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.aes_ll_c1 00000052  00000000  00000000  000002c0  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.aes_ll_ccm_encryption_init 00000090  00000000  00000000  00000314  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text.aes_ll_ccm_encryption 00000060  00000000  00000000  000003a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text.aes_ll_ccm_decryption 00000074  00000000  00000000  00000404  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .bss.ll_enc_nonce 00000010  00000000  00000000  00000478  2**2
                  ALLOC
 15 .comment      0000001b  00000000  00000000  00000478  2**0
                  CONTENTS, READONLY
 16 .TC32.attributes 00000010  00000000  00000000  00000493  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 aes_ccm.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.aes_ll_swap	00000000 .text.aes_ll_swap
00000000 l    d  .text.aes_encrypt	00000000 .text.aes_encrypt
00000000 l    d  .text.aes_initKey	00000000 .text.aes_initKey
00000000 l    d  .text.aes_ccmAuthTran	00000000 .text.aes_ccmAuthTran
00000000 l    d  .text.aes_ccmBaseTran	00000000 .text.aes_ccmBaseTran
00000000 l    d  .text.aes_ll_encryption	00000000 .text.aes_ll_encryption
00000000 l    d  .text.aes_ll_s1	00000000 .text.aes_ll_s1
00000000 l    d  .text.aes_ll_c1	00000000 .text.aes_ll_c1
00000000 l    d  .text.aes_ll_ccm_encryption_init	00000000 .text.aes_ll_ccm_encryption_init
00000000 l    d  .text.aes_ll_ccm_encryption	00000000 .text.aes_ll_ccm_encryption
00000000 l    d  .text.aes_ll_ccm_decryption	00000000 .text.aes_ll_ccm_decryption
00000000 l    d  .bss.ll_enc_nonce	00000000 .bss.ll_enc_nonce
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 g     F .text.aes_ll_swap	0000001a aes_ll_swap
00000000 g     F .text.aes_encrypt	00000016 aes_encrypt
00000000         *UND*	00000000 memcpy
00000000         *UND*	00000000 _rijndaelEncrypt
00000000 g     F .text.aes_initKey	0000001c aes_initKey
00000000 g     F .text.aes_ccmAuthTran	00000112 aes_ccmAuthTran
00000000         *UND*	00000000 memset
00000000 g     F .text.aes_ccmBaseTran	000000bc aes_ccmBaseTran
00000000 g     F .text.aes_ll_encryption	00000044 aes_ll_encryption
00000000         *UND*	00000000 _rijndaelSetKey
00000000 g     F .text.aes_ll_s1	0000002e aes_ll_s1
00000000 g     F .text.aes_ll_c1	00000052 aes_ll_c1
00000000 g     F .text.aes_ll_ccm_encryption_init	00000090 aes_ll_ccm_encryption_init
00000004       O *COM*	00000004 ll_enc_pno
00000004       O *COM*	00000004 ll_dec_pno
00000000 g     F .text.aes_ll_ccm_encryption	00000060 aes_ll_ccm_encryption
00000000 g     F .text.aes_ll_ccm_decryption	00000074 aes_ll_ccm_decryption
00000000 g     O .bss.ll_enc_nonce	0000000d ll_enc_nonce
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN



Disassembly of section .text.aes_ll_swap:

00000000 <aes_ll_swap>:
aes_ll_swap():
   0:	6510      	tpush	{r4, lr}
   2:	ec02      	tadds	r2, r0, #0
   4:	b20f      	tadds	r2, #15
   6:	a300      	tmovs	r3, #0
   8:	1cc1      	tloadrb	r1, [r0, r3]
   a:	4814      	tloadrb	r4, [r2, #0]
   c:	14c4      	tstorerb	r4, [r0, r3]
   e:	4011      	tstorerb	r1, [r2, #0]
  10:	b301      	tadds	r3, #1
  12:	ba01      	tsubs	r2, #1
  14:	ab08      	tcmp	r3, #8
  16:	c1f7      	tjne.n	8 <aes_ll_swap+0x8>
  18:	6d10      	tpop	{r4, pc}

Disassembly of section .text.aes_encrypt:

00000000 <aes_encrypt>:
aes_encrypt():
   0:	6510      	tpush	{r4, lr}
   2:	ec14      	tadds	r4, r2, #0
   4:	ec10      	tadds	r0, r2, #0
   6:	a210      	tmovs	r2, #16
   8:	97ff 9ffe 	tjl	0 <memcpy>
			8: R_TC32_CALL	memcpy
   c:	ec20      	tadds	r0, r4, #0
   e:	97ff 9ffe 	tjl	0 <_rijndaelEncrypt>
			e: R_TC32_CALL	_rijndaelEncrypt
  12:	a000      	tmovs	r0, #0
  14:	6d10      	tpop	{r4, pc}

Disassembly of section .text.aes_initKey:

00000000 <aes_initKey>:
aes_initKey():
   0:	0b04      	tloadr	r3, [pc, #16]	; (14 <_rijndaelEncrypt+0x14>)
   2:	0a05      	tloadr	r2, [pc, #20]	; (18 <_rijndaelEncrypt+0x18>)
   4:	4801      	tloadrb	r1, [r0, #0]
   6:	4019      	tstorerb	r1, [r3, #0]
   8:	b001      	tadds	r0, #1
   a:	b301      	tadds	r3, #1
   c:	0293      	tcmp	r3, r2
   e:	c1f9      	tjne.n	4 <_rijndaelEncrypt+0x4>
  10:	a000      	tmovs	r0, #0
  12:	0770      	tjex	lr
  14:	00800550 	taddeq	r0, r0, r0, asr r5
  18:	00800560 	taddeq	r0, r0, r0, ror #10

Disassembly of section .text.aes_ccmAuthTran:

00000000 <aes_ccmAuthTran>:
aes_ccmAuthTran():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6090      	tsub	sp, #64	; 0x40
   4:	ec07      	tadds	r7, r0, #0
   6:	3102      	tstorer	r1, [sp, #8]
   8:	f416      	tshftls	r6, r2, #16
   a:	fc34      	tshftrs	r4, r6, #16
   c:	f61b      	tshftls	r3, r3, #24
   e:	fe1b      	tshftrs	r3, r3, #24
  10:	3301      	tstorer	r3, [sp, #4]
  12:	7d04      	tadd	r5, sp, #16
  14:	ec28      	tadds	r0, r5, #0
  16:	a100      	tmovs	r1, #0
  18:	a230      	tmovs	r2, #48	; 0x30
  1a:	97ff 9ffe 	tjl	0 <memset>
			1a: R_TC32_CALL	memset
  1e:	a349      	tmovs	r3, #73	; 0x49
  20:	402b      	tstorerb	r3, [r5, #0]
  22:	0668      	tmov	r0, sp
  24:	b011      	tadds	r0, #17
  26:	ec39      	tadds	r1, r7, #0
  28:	a20d      	tmovs	r2, #13
  2a:	97ff 9ffe 	tjl	0 <memcpy>
			2a: R_TC32_CALL	memcpy
  2e:	fe36      	tshftrs	r6, r6, #24
  30:	43ae      	tstorerb	r6, [r5, #14]
  32:	43ec      	tstorerb	r4, [r5, #15]
  34:	3a01      	tloadr	r2, [sp, #4]
  36:	f413      	tshftls	r3, r2, #16
  38:	b301      	tadds	r3, #1
  3a:	b3ff      	tadds	r3, #255	; 0xff
  3c:	522b      	tstorer	r3, [r5, #32]
  3e:	7808      	tadd	r0, sp, #32
  40:	a100      	tmovs	r1, #0
  42:	a210      	tmovs	r2, #16
  44:	97ff 9ffe 	tjl	0 <memset>
			44: R_TC32_CALL	memset
  48:	ec23      	tadds	r3, r4, #0
  4a:	b310      	tadds	r3, #16
  4c:	f41b      	tshftls	r3, r3, #16
  4e:	fc1b      	tshftrs	r3, r3, #16
  50:	a20f      	tmovs	r2, #15
  52:	0222      	tnand	r2, r4
  54:	c003      	tjeq.n	5e <aes_ccmAuthTran+0x5e>
  56:	0393      	tbclrs	r3, r2
  58:	b310      	tadds	r3, #16
  5a:	f41b      	tshftls	r3, r3, #16
  5c:	fc1b      	tshftrs	r3, r3, #16
  5e:	a700      	tmovs	r7, #0
  60:	3701      	tstorer	r7, [sp, #4]
  62:	a603      	tmovs	r6, #3
  64:	b30f      	tadds	r3, #15
  66:	3303      	tstorer	r3, [sp, #12]
  68:	7b08      	tadd	r3, sp, #32
  6a:	3300      	tstorer	r3, [sp, #0]
  6c:	8044      	tj.n	f8 <aes_ccmAuthTran+0xf8>
  6e:	4819      	tloadrb	r1, [r3, #0]
  70:	4c1a      	tloadrb	r2, [r3, #16]
  72:	004a      	txors	r2, r1
  74:	441a      	tstorerb	r2, [r3, #16]
  76:	b301      	tadds	r3, #1
  78:	3a00      	tloadr	r2, [sp, #0]
  7a:	029a      	tcmp	r2, r3
  7c:	c1f7      	tjne.n	6e <aes_ccmAuthTran+0x6e>
  7e:	7d04      	tadd	r5, sp, #16
  80:	a000      	tmovs	r0, #0
  82:	7908      	tadd	r1, sp, #32
  84:	ec0a      	tadds	r2, r1, #0
  86:	97ff 9ffe 	tjl	0 <aes_ccmAuthTran>
			86: R_TC32_CALL	aes_encrypt
  8a:	ee73      	tsubs	r3, r6, #1
  8c:	f61b      	tshftls	r3, r3, #24
  8e:	fe1b      	tshftrs	r3, r3, #24
  90:	ab0e      	tcmp	r3, #14
  92:	c80e      	tjhi.n	b2 <aes_ccmAuthTran+0xb2>
  94:	7b0c      	tadd	r3, sp, #48	; 0x30
  96:	e9d9      	tadds	r1, r3, r7
  98:	ec28      	tadds	r0, r5, #0
  9a:	ec32      	tadds	r2, r6, #0
  9c:	97ff 9ffe 	tjl	0 <memcpy>
			9c: R_TC32_CALL	memcpy
  a0:	a310      	tmovs	r3, #16
  a2:	eb9a      	tsubs	r2, r3, r6
  a4:	e9a8      	tadds	r0, r5, r6
  a6:	a100      	tmovs	r1, #0
  a8:	97ff 9ffe 	tjl	0 <memset>
			a8: R_TC32_CALL	memset
  ac:	a200      	tmovs	r2, #0
  ae:	3201      	tstorer	r2, [sp, #4]
  b0:	801e      	tj.n	f0 <aes_ccmAuthTran+0xf0>
  b2:	3b01      	tloadr	r3, [sp, #4]
  b4:	f119      	tshftls	r1, r3, #4
  b6:	ac0f      	tcmp	r4, #15
  b8:	c90e      	tjls.n	d8 <aes_ccmAuthTran+0xd8>
  ba:	3a02      	tloadr	r2, [sp, #8]
  bc:	e889      	tadds	r1, r1, r2
  be:	ec28      	tadds	r0, r5, #0
  c0:	a210      	tmovs	r2, #16
  c2:	97ff 9ffe 	tjl	0 <memcpy>
			c2: R_TC32_CALL	memcpy
  c6:	3b01      	tloadr	r3, [sp, #4]
  c8:	b301      	tadds	r3, #1
  ca:	f61b      	tshftls	r3, r3, #24
  cc:	fe1b      	tshftrs	r3, r3, #24
  ce:	3301      	tstorer	r3, [sp, #4]
  d0:	bc10      	tsubs	r4, #16
  d2:	f424      	tshftls	r4, r4, #16
  d4:	fc24      	tshftrs	r4, r4, #16
  d6:	800b      	tj.n	f0 <aes_ccmAuthTran+0xf0>
  d8:	3b02      	tloadr	r3, [sp, #8]
  da:	e8c9      	tadds	r1, r1, r3
  dc:	ec28      	tadds	r0, r5, #0
  de:	ec22      	tadds	r2, r4, #0
  e0:	97ff 9ffe 	tjl	0 <memcpy>
			e0: R_TC32_CALL	memcpy
  e4:	a310      	tmovs	r3, #16
  e6:	eb1a      	tsubs	r2, r3, r4
  e8:	e928      	tadds	r0, r5, r4
  ea:	a100      	tmovs	r1, #0
  ec:	97ff 9ffe 	tjl	0 <memset>
			ec: R_TC32_CALL	memset
  f0:	b710      	tadds	r7, #16
  f2:	f43f      	tshftls	r7, r7, #16
  f4:	fc3f      	tshftrs	r7, r7, #16
  f6:	a600      	tmovs	r6, #0
  f8:	3a03      	tloadr	r2, [sp, #12]
  fa:	02ba      	tcmp	r2, r7
  fc:	cb01      	tjlt.n	102 <aes_ccmAuthTran+0x102>
  fe:	7b04      	tadd	r3, sp, #16
 100:	87b5      	tj.n	6e <aes_ccmAuthTran+0x6e>
 102:	3815      	tloadr	r0, [sp, #84]	; 0x54
 104:	7908      	tadd	r1, sp, #32
 106:	a204      	tmovs	r2, #4
 108:	97ff 9ffe 	tjl	0 <memcpy>
			108: R_TC32_CALL	memcpy
 10c:	a000      	tmovs	r0, #0
 10e:	6010      	tadd	sp, #64	; 0x40
 110:	6df0      	tpop	{r4, r5, r6, r7, pc}

Disassembly of section .text.aes_ccmBaseTran:

00000000 <aes_ccmBaseTran>:
aes_ccmBaseTran():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	608f      	tsub	sp, #60	; 0x3c
   4:	ec06      	tadds	r6, r0, #0
   6:	3101      	tstorer	r1, [sp, #4]
   8:	3d14      	tloadr	r5, [sp, #80]	; 0x50
   a:	f412      	tshftls	r2, r2, #16
   c:	fc12      	tshftrs	r2, r2, #16
   e:	3202      	tstorer	r2, [sp, #8]
  10:	7c03      	tadd	r4, sp, #12
  12:	ec20      	tadds	r0, r4, #0
  14:	a100      	tmovs	r1, #0
  16:	a230      	tmovs	r2, #48	; 0x30
  18:	97ff 9ffe 	tjl	0 <memset>
			18: R_TC32_CALL	memset
  1c:	a301      	tmovs	r3, #1
  1e:	4023      	tstorerb	r3, [r4, #0]
  20:	0668      	tmov	r0, sp
  22:	b00d      	tadds	r0, #13
  24:	ec31      	tadds	r1, r6, #0
  26:	a20d      	tmovs	r2, #13
  28:	97ff 9ffe 	tjl	0 <memcpy>
			28: R_TC32_CALL	memcpy
  2c:	a000      	tmovs	r0, #0
  2e:	ec21      	tadds	r1, r4, #0
  30:	7a07      	tadd	r2, sp, #28
  32:	97ff 9ffe 	tjl	0 <aes_ccmBaseTran>
			32: R_TC32_CALL	aes_encrypt
  36:	a300      	tmovs	r3, #0
  38:	e8e2      	tadds	r2, r4, r3
  3a:	4c11      	tloadrb	r1, [r2, #16]
  3c:	1cea      	tloadrb	r2, [r5, r3]
  3e:	004a      	txors	r2, r1
  40:	14ea      	tstorerb	r2, [r5, r3]
  42:	b301      	tadds	r3, #1
  44:	ab04      	tcmp	r3, #4
  46:	c1f7      	tjne.n	38 <aes_ccmBaseTran+0x38>
  48:	a300      	tmovs	r3, #0
  4a:	43a3      	tstorerb	r3, [r4, #14]
  4c:	a301      	tmovs	r3, #1
  4e:	43e3      	tstorerb	r3, [r4, #15]
  50:	3802      	tloadr	r0, [sp, #8]
  52:	f604      	tshftls	r4, r0, #24
  54:	fe24      	tshftrs	r4, r4, #24
  56:	a30f      	tmovs	r3, #15
  58:	0223      	tnand	r3, r4
  5a:	c003      	tjeq.n	64 <aes_ccmBaseTran+0x64>
  5c:	039c      	tbclrs	r4, r3
  5e:	b410      	tadds	r4, #16
  60:	f624      	tshftls	r4, r4, #24
  62:	fe24      	tshftrs	r4, r4, #24
  64:	a601      	tmovs	r6, #1
  66:	a500      	tmovs	r5, #0
  68:	7f03      	tadd	r7, sp, #12
  6a:	790b      	tadd	r1, sp, #44	; 0x2c
  6c:	3100      	tstorer	r1, [sp, #0]
  6e:	8020      	tj.n	b2 <aes_ccmBaseTran+0xb2>
  70:	a000      	tmovs	r0, #0
  72:	ec39      	tadds	r1, r7, #0
  74:	7a07      	tadd	r2, sp, #28
  76:	97ff 9ffe 	tjl	0 <aes_ccmBaseTran>
			76: R_TC32_CALL	aes_encrypt
  7a:	ec2b      	tadds	r3, r5, #0
  7c:	7a07      	tadd	r2, sp, #28
  7e:	800c      	tj.n	9a <aes_ccmBaseTran+0x9a>
  80:	4810      	tloadrb	r0, [r2, #0]
  82:	0684      	tmov	ip, r0
  84:	3801      	tloadr	r0, [sp, #4]
  86:	1cc1      	tloadrb	r1, [r0, r3]
  88:	0660      	tmov	r0, ip
  8a:	0041      	txors	r1, r0
  8c:	3801      	tloadr	r0, [sp, #4]
  8e:	14c1      	tstorerb	r1, [r0, r3]
  90:	b301      	tadds	r3, #1
  92:	b201      	tadds	r2, #1
  94:	3900      	tloadr	r1, [sp, #0]
  96:	028a      	tcmp	r2, r1
  98:	c002      	tjeq.n	a0 <aes_ccmBaseTran+0xa0>
  9a:	3802      	tloadr	r0, [sp, #8]
  9c:	0283      	tcmp	r3, r0
  9e:	cbef      	tjlt.n	80 <aes_ccmBaseTran+0x80>
  a0:	b601      	tadds	r6, #1
  a2:	f433      	tshftls	r3, r6, #16
  a4:	fc1e      	tshftrs	r6, r3, #16
  a6:	fe1b      	tshftrs	r3, r3, #24
  a8:	43bb      	tstorerb	r3, [r7, #14]
  aa:	43fe      	tstorerb	r6, [r7, #15]
  ac:	b510      	tadds	r5, #16
  ae:	f42d      	tshftls	r5, r5, #16
  b0:	fc2d      	tshftrs	r5, r5, #16
  b2:	02a5      	tcmp	r5, r4
  b4:	c3dc      	tjcc.n	70 <aes_ccmBaseTran+0x70>
  b6:	a000      	tmovs	r0, #0
  b8:	600f      	tadd	sp, #60	; 0x3c
  ba:	6df0      	tpop	{r4, r5, r6, r7, pc}

Disassembly of section .text.aes_ll_encryption:

00000000 <aes_ll_encryption>:
aes_ll_encryption():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6084      	tsub	sp, #16
   4:	ec0e      	tadds	r6, r1, #0
   6:	ec17      	tadds	r7, r2, #0
   8:	b00f      	tadds	r0, #15
   a:	066c      	tmov	r4, sp
   c:	7d04      	tadd	r5, sp, #16
   e:	066b      	tmov	r3, sp
  10:	4802      	tloadrb	r2, [r0, #0]
  12:	401a      	tstorerb	r2, [r3, #0]
  14:	b801      	tsubs	r0, #1
  16:	b301      	tadds	r3, #1
  18:	02ab      	tcmp	r3, r5
  1a:	c1f9      	tjne.n	10 <aes_ll_encryption+0x10>
  1c:	0668      	tmov	r0, sp
  1e:	97ff 9ffe 	tjl	0 <_rijndaelSetKey>
			1e: R_TC32_CALL	_rijndaelSetKey
  22:	b60f      	tadds	r6, #15
  24:	4833      	tloadrb	r3, [r6, #0]
  26:	4023      	tstorerb	r3, [r4, #0]
  28:	be01      	tsubs	r6, #1
  2a:	b401      	tadds	r4, #1
  2c:	02ac      	tcmp	r4, r5
  2e:	c1f9      	tjne.n	24 <aes_ll_encryption+0x24>
  30:	0668      	tmov	r0, sp
  32:	97ff 9ffe 	tjl	0 <_rijndaelEncrypt>
			32: R_TC32_CALL	_rijndaelEncrypt
  36:	ec38      	tadds	r0, r7, #0
  38:	0669      	tmov	r1, sp
  3a:	a210      	tmovs	r2, #16
  3c:	97ff 9ffe 	tjl	0 <memcpy>
			3c: R_TC32_CALL	memcpy
  40:	6004      	tadd	sp, #16
  42:	6df0      	tpop	{r4, r5, r6, r7, pc}

Disassembly of section .text.aes_ll_s1:

00000000 <aes_ll_s1>:
aes_ll_s1():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	ec06      	tadds	r6, r0, #0
   4:	ec15      	tadds	r5, r2, #0
   6:	ec1c      	tadds	r4, r3, #0
   8:	ec18      	tadds	r0, r3, #0
   a:	a208      	tmovs	r2, #8
   c:	97ff 9ffe 	tjl	0 <memcpy>
			c: R_TC32_CALL	memcpy
  10:	ec20      	tadds	r0, r4, #0
  12:	b008      	tadds	r0, #8
  14:	ec29      	tadds	r1, r5, #0
  16:	a208      	tmovs	r2, #8
  18:	97ff 9ffe 	tjl	0 <memcpy>
			18: R_TC32_CALL	memcpy
  1c:	ec30      	tadds	r0, r6, #0
  1e:	ec21      	tadds	r1, r4, #0
  20:	ec22      	tadds	r2, r4, #0
  22:	97ff 9ffe 	tjl	0 <aes_ll_s1>
			22: R_TC32_CALL	aes_ll_encryption
  26:	ec20      	tadds	r0, r4, #0
  28:	97ff 9ffe 	tjl	0 <aes_ll_s1>
			28: R_TC32_CALL	aes_ll_swap
  2c:	6d70      	tpop	{r4, r5, r6, pc}

Disassembly of section .text.aes_ll_c1:

00000000 <aes_ll_c1>:
aes_ll_c1():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6085      	tsub	sp, #20
   4:	ec05      	tadds	r5, r0, #0
   6:	3300      	tstorer	r3, [sp, #0]
   8:	3c0a      	tloadr	r4, [sp, #40]	; 0x28
   a:	a000      	tmovs	r0, #0
   c:	7b01      	tadd	r3, sp, #4
   e:	1c16      	tloadrb	r6, [r2, r0]
  10:	1c0f      	tloadrb	r7, [r1, r0]
  12:	0077      	txors	r7, r6
  14:	141f      	tstorerb	r7, [r3, r0]
  16:	b001      	tadds	r0, #1
  18:	a810      	tcmp	r0, #16
  1a:	c1f7      	tjne.n	c <aes_ll_c1+0xc>
  1c:	ec28      	tadds	r0, r5, #0
  1e:	ec19      	tadds	r1, r3, #0
  20:	ec22      	tadds	r2, r4, #0
  22:	97ff 9ffe 	tjl	0 <aes_ll_c1>
			22: R_TC32_CALL	aes_ll_encryption
  26:	ec22      	tadds	r2, r4, #0
  28:	b20f      	tadds	r2, #15
  2a:	a300      	tmovs	r3, #0
  2c:	7901      	tadd	r1, sp, #4
  2e:	3800      	tloadr	r0, [sp, #0]
  30:	1cc7      	tloadrb	r7, [r0, r3]
  32:	4810      	tloadrb	r0, [r2, #0]
  34:	0078      	txors	r0, r7
  36:	14c8      	tstorerb	r0, [r1, r3]
  38:	b301      	tadds	r3, #1
  3a:	ba01      	tsubs	r2, #1
  3c:	ab10      	tcmp	r3, #16
  3e:	c1f5      	tjne.n	2c <aes_ll_c1+0x2c>
  40:	ec28      	tadds	r0, r5, #0
  42:	ec22      	tadds	r2, r4, #0
  44:	97ff 9ffe 	tjl	0 <aes_ll_c1>
			44: R_TC32_CALL	aes_ll_encryption
  48:	ec20      	tadds	r0, r4, #0
  4a:	97ff 9ffe 	tjl	0 <aes_ll_c1>
			4a: R_TC32_CALL	aes_ll_swap
  4e:	6005      	tadd	sp, #20
  50:	6df0      	tpop	{r4, r5, r6, r7, pc}

Disassembly of section .text.aes_ll_ccm_encryption_init:

00000000 <aes_ll_ccm_encryption_init>:
aes_ll_ccm_encryption_init():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6085      	tsub	sp, #20
   4:	ec07      	tadds	r7, r0, #0
   6:	ec0e      	tadds	r6, r1, #0
   8:	ec15      	tadds	r5, r2, #0
   a:	3300      	tstorer	r3, [sp, #0]
   c:	7801      	tadd	r0, sp, #4
   e:	a208      	tmovs	r2, #8
  10:	97ff 9ffe 	tjl	0 <memcpy>
			10: R_TC32_CALL	memcpy
  14:	7803      	tadd	r0, sp, #12
  16:	ec29      	tadds	r1, r5, #0
  18:	a208      	tmovs	r2, #8
  1a:	97ff 9ffe 	tjl	0 <memcpy>
			1a: R_TC32_CALL	memcpy
  1e:	a300      	tmovs	r3, #0
  20:	7c01      	tadd	r4, sp, #4
  22:	025a      	tnegs	r2, r3
  24:	e8f9      	tadds	r1, r7, r3
  26:	4bc9      	tloadrb	r1, [r1, #15]
  28:	14a1      	tstorerb	r1, [r4, r2]
  2a:	bb01      	tsubs	r3, #1
  2c:	ec1a      	tadds	r2, r3, #0
  2e:	b210      	tadds	r2, #16
  30:	c1f6      	tjne.n	20 <aes_ll_ccm_encryption_init+0x20>
  32:	ec20      	tadds	r0, r4, #0
  34:	97ff 9ffe 	tjl	0 <_rijndaelSetKey>
			34: R_TC32_CALL	_rijndaelSetKey
  38:	a300      	tmovs	r3, #0
  3a:	e8ea      	tadds	r2, r5, r3
  3c:	49d2      	tloadrb	r2, [r2, #7]
  3e:	4022      	tstorerb	r2, [r4, #0]
  40:	e8f2      	tadds	r2, r6, r3
  42:	49d2      	tloadrb	r2, [r2, #7]
  44:	4222      	tstorerb	r2, [r4, #8]
  46:	bb01      	tsubs	r3, #1
  48:	b401      	tadds	r4, #1
  4a:	ec1a      	tadds	r2, r3, #0
  4c:	b208      	tadds	r2, #8
  4e:	c1f4      	tjne.n	3a <aes_ll_ccm_encryption_init+0x3a>
  50:	7c01      	tadd	r4, sp, #4
  52:	ec20      	tadds	r0, r4, #0
  54:	97ff 9ffe 	tjl	0 <_rijndaelEncrypt>
			54: R_TC32_CALL	_rijndaelEncrypt
  58:	ec20      	tadds	r0, r4, #0
  5a:	97ff 9ffe 	tjl	0 <_rijndaelSetKey>
			5a: R_TC32_CALL	_rijndaelSetKey
  5e:	0c09      	tloadr	r4, [pc, #36]	; (84 <aes_ll_ccm_encryption_init+0x84>)
  60:	ed60      	tadds	r0, r4, #5
  62:	3900      	tloadr	r1, [sp, #0]
  64:	a204      	tmovs	r2, #4
  66:	97ff 9ffe 	tjl	0 <memcpy>
			66: R_TC32_CALL	memcpy
  6a:	ec20      	tadds	r0, r4, #0
  6c:	b009      	tadds	r0, #9
  6e:	390a      	tloadr	r1, [sp, #40]	; 0x28
  70:	a204      	tmovs	r2, #4
  72:	97ff 9ffe 	tjl	0 <memcpy>
			72: R_TC32_CALL	memcpy
  76:	a300      	tmovs	r3, #0
  78:	0a03      	tloadr	r2, [pc, #12]	; (88 <aes_ll_ccm_encryption_init+0x88>)
  7a:	5013      	tstorer	r3, [r2, #0]
  7c:	0a03      	tloadr	r2, [pc, #12]	; (8c <aes_ll_ccm_encryption_init+0x8c>)
  7e:	5013      	tstorer	r3, [r2, #0]
  80:	6005      	tadd	sp, #20
  82:	6df0      	tpop	{r4, r5, r6, r7, pc}
	...
			84: R_TC32_ABS32	.bss.ll_enc_nonce
			88: R_TC32_ABS32	ll_enc_pno
			8c: R_TC32_ABS32	ll_dec_pno

Disassembly of section .text.aes_ll_ccm_encryption:

00000000 <aes_ll_ccm_encryption>:
aes_ll_ccm_encryption():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6084      	tsub	sp, #16
   4:	4803      	tloadrb	r3, [r0, #0]
   6:	a203      	tmovs	r2, #3
   8:	001a      	tands	r2, r3
   a:	3202      	tstorer	r2, [sp, #8]
   c:	4845      	tloadrb	r5, [r0, #1]
   e:	ed2b      	tadds	r3, r5, #4
  10:	4043      	tstorerb	r3, [r0, #1]
  12:	ec86      	tadds	r6, r0, #2
  14:	0b10      	tloadr	r3, [pc, #64]	; (58 <aes_ll_ccm_encryption+0x58>)
  16:	581a      	tloadr	r2, [r3, #0]
  18:	0c10      	tloadr	r4, [pc, #64]	; (5c <aes_ll_ccm_encryption+0x5c>)
  1a:	5022      	tstorer	r2, [r4, #0]
  1c:	b201      	tadds	r2, #1
  1e:	501a      	tstorer	r2, [r3, #0]
  20:	ee4b      	tsubs	r3, r1, #1
  22:	0199      	tsubcs	r1, r3
  24:	f1c9      	tshftls	r1, r1, #7
  26:	4121      	tstorerb	r1, [r4, #4]
  28:	7f03      	tadd	r7, sp, #12
  2a:	3700      	tstorer	r7, [sp, #0]
  2c:	ec20      	tadds	r0, r4, #0
  2e:	ec31      	tadds	r1, r6, #0
  30:	ec2a      	tadds	r2, r5, #0
  32:	3b02      	tloadr	r3, [sp, #8]
  34:	97ff 9ffe 	tjl	0 <aes_ll_ccm_encryption>
			34: R_TC32_CALL	aes_ccmAuthTran
  38:	3700      	tstorer	r7, [sp, #0]
  3a:	a300      	tmovs	r3, #0
  3c:	3301      	tstorer	r3, [sp, #4]
  3e:	ec20      	tadds	r0, r4, #0
  40:	ec31      	tadds	r1, r6, #0
  42:	ec2a      	tadds	r2, r5, #0
  44:	3b02      	tloadr	r3, [sp, #8]
  46:	97ff 9ffe 	tjl	0 <aes_ll_ccm_encryption>
			46: R_TC32_CALL	aes_ccmBaseTran
  4a:	e970      	tadds	r0, r6, r5
  4c:	ec39      	tadds	r1, r7, #0
  4e:	a204      	tmovs	r2, #4
  50:	97ff 9ffe 	tjl	0 <memcpy>
			50: R_TC32_CALL	memcpy
  54:	6004      	tadd	sp, #16
  56:	6df0      	tpop	{r4, r5, r6, r7, pc}
	...
			58: R_TC32_ABS32	ll_enc_pno
			5c: R_TC32_ABS32	.bss.ll_enc_nonce

Disassembly of section .text.aes_ll_ccm_decryption:

00000000 <aes_ll_ccm_decryption>:
aes_ll_ccm_decryption():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6084      	tsub	sp, #16
   4:	4847      	tloadrb	r7, [r0, #1]
   6:	bf04      	tsubs	r7, #4
   8:	f63f      	tshftls	r7, r7, #24
   a:	fe3f      	tshftrs	r7, r7, #24
   c:	4047      	tstorerb	r7, [r0, #1]
   e:	4803      	tloadrb	r3, [r0, #0]
  10:	a203      	tmovs	r2, #3
  12:	001a      	tands	r2, r3
  14:	3202      	tstorer	r2, [sp, #8]
  16:	ec85      	tadds	r5, r0, #2
  18:	0b14      	tloadr	r3, [pc, #80]	; (6c <aes_ll_ccm_decryption+0x6c>)
  1a:	581a      	tloadr	r2, [r3, #0]
  1c:	0c14      	tloadr	r4, [pc, #80]	; (70 <aes_ll_ccm_decryption+0x70>)
  1e:	5022      	tstorer	r2, [r4, #0]
  20:	b201      	tadds	r2, #1
  22:	501a      	tstorer	r2, [r3, #0]
  24:	ee4b      	tsubs	r3, r1, #1
  26:	0199      	tsubcs	r1, r3
  28:	f1c9      	tshftls	r1, r1, #7
  2a:	4121      	tstorerb	r1, [r4, #4]
  2c:	e9ee      	tadds	r6, r5, r7
  2e:	3600      	tstorer	r6, [sp, #0]
  30:	a301      	tmovs	r3, #1
  32:	3301      	tstorer	r3, [sp, #4]
  34:	ec20      	tadds	r0, r4, #0
  36:	ec29      	tadds	r1, r5, #0
  38:	ec3a      	tadds	r2, r7, #0
  3a:	3b02      	tloadr	r3, [sp, #8]
  3c:	97ff 9ffe 	tjl	0 <aes_ll_ccm_decryption>
			3c: R_TC32_CALL	aes_ccmBaseTran
  40:	7b03      	tadd	r3, sp, #12
  42:	3300      	tstorer	r3, [sp, #0]
  44:	ec20      	tadds	r0, r4, #0
  46:	ec29      	tadds	r1, r5, #0
  48:	ec3a      	tadds	r2, r7, #0
  4a:	3b02      	tloadr	r3, [sp, #8]
  4c:	97ff 9ffe 	tjl	0 <aes_ll_ccm_decryption>
			4c: R_TC32_CALL	aes_ccmAuthTran
  50:	a300      	tmovs	r3, #0
  52:	1cf1      	tloadrb	r1, [r6, r3]
  54:	7a03      	tadd	r2, sp, #12
  56:	1cd2      	tloadrb	r2, [r2, r3]
  58:	0291      	tcmp	r1, r2
  5a:	c104      	tjne.n	66 <aes_ll_ccm_decryption+0x66>
  5c:	b301      	tadds	r3, #1
  5e:	ab04      	tcmp	r3, #4
  60:	c1f7      	tjne.n	52 <aes_ll_ccm_decryption+0x52>
  62:	a000      	tmovs	r0, #0
  64:	8000      	tj.n	68 <aes_ll_ccm_decryption+0x68>
  66:	a0ff      	tmovs	r0, #255	; 0xff
  68:	6004      	tadd	sp, #16
  6a:	6df0      	tpop	{r4, r5, r6, r7, pc}
	...
			6c: R_TC32_ABS32	ll_dec_pno
			70: R_TC32_ABS32	.bss.ll_enc_nonce

Disassembly of section .bss.ll_enc_nonce:

00000000 <ll_enc_nonce>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

ble_ll_ota.o:     file format elf32-littletc32
rw-rw-rw- 0/0   2344 Jan 30 00:17 2019 ble_ll_ota.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .ota          0000004c  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.otaWrite 00000130  00000000  00000000  00000080  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .bss.otaPktIndex 00000002  00000000  00000000  000001b0  2**1
                  ALLOC
  6 .bss.ota_crc_check.3162 00000004  00000000  00000000  000001b0  2**2
                  ALLOC
  7 .bss.start_ota_flag 00000001  00000000  00000000  000001b0  2**0
                  ALLOC
  8 .bss.ota_crc.3161 00000004  00000000  00000000  000001b0  2**2
                  ALLOC
  9 .comment      0000001b  00000000  00000000  000001b0  2**0
                  CONTENTS, READONLY
 10 .TC32.attributes 00000010  00000000  00000000  000001cb  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ble_ll_ota.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .ota	00000000 .ota
00000000 l    d  .text.otaWrite	00000000 .text.otaWrite
00000000 l    d  .bss.otaPktIndex	00000000 .bss.otaPktIndex
00000000 l     O .bss.otaPktIndex	00000002 otaPktIndex
00000000 l    d  .bss.ota_crc_check.3162	00000000 .bss.ota_crc_check.3162
00000000 l     O .bss.ota_crc_check.3162	00000004 ota_crc_check.3162
00000000 l    d  .bss.start_ota_flag	00000000 .bss.start_ota_flag
00000000 l    d  .bss.ota_crc.3161	00000000 .bss.ota_crc.3161
00000000 l     O .bss.ota_crc.3161	00000004 ota_crc.3161
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 g     F .ota	0000004c otaDone
00000000         *UND*	00000000 flash_erase_block
00000000         *UND*	00000000 flash_read_page
00000000         *UND*	00000000 flash_write_page
00000000 g     F .text.otaWrite	00000130 otaWrite
00000000         *UND*	00000000 blt_disable_latency
00000000         *UND*	00000000 memcpy
00000000         *UND*	00000000 blt_packet_crc24
00000000         *UND*	00000000 memcmp
00000000         *UND*	00000000 ota_data
00000000 g     O .bss.start_ota_flag	00000001 start_ota_flag
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN



Disassembly of section .ota:

00000000 <otaDone>:
otaDone():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6084      	tsub	sp, #16
   4:	a000      	tmovs	r0, #0
   6:	97ff 9ffe 	tjl	0 <flash_erase_block>
			6: R_TC32_CALL	flash_erase_block
   a:	a400      	tmovs	r4, #0
   c:	0f0d      	tloadr	r7, [pc, #52]	; (44 <otaDone+0x44>)
   e:	800d      	tj.n	2c <otaDone+0x2c>
  10:	f125      	tshftls	r5, r4, #4
  12:	a380      	tmovs	r3, #128	; 0x80
  14:	f29b      	tshftls	r3, r3, #10
  16:	e8e8      	tadds	r0, r5, r3
  18:	a110      	tmovs	r1, #16
  1a:	066a      	tmov	r2, sp
  1c:	97ff 9ffe 	tjl	0 <flash_read_page>
			1c: R_TC32_CALL	flash_read_page
  20:	ec28      	tadds	r0, r5, #0
  22:	a110      	tmovs	r1, #16
  24:	066a      	tmov	r2, sp
  26:	97ff 9ffe 	tjl	0 <flash_write_page>
			26: R_TC32_CALL	flash_write_page
  2a:	b401      	tadds	r4, #1
  2c:	283b      	tloadrh	r3, [r7, #0]
  2e:	029c      	tcmp	r4, r3
  30:	cdee      	tjle.n	10 <otaDone+0x10>
  32:	a080      	tmovs	r0, #128	; 0x80
  34:	f280      	tshftls	r0, r0, #10
  36:	97ff 9ffe 	tjl	0 <flash_erase_block>
			36: R_TC32_CALL	flash_erase_block
  3a:	a220      	tmovs	r2, #32
  3c:	0b02      	tloadr	r3, [pc, #8]	; (48 <otaDone+0x48>)
  3e:	401a      	tstorerb	r2, [r3, #0]
  40:	87fe      	tj.n	40 <otaDone+0x40>
  42:	46c0      	tnop			; (mov r8, r8)
  44:	00000000 	tandeq	r0, r0, r0
			44: R_TC32_ABS32	.bss.otaPktIndex
  48:	0080006f 	taddeq	r0, r0, pc, rrx

Disassembly of section .text.otaWrite:

00000000 <otaWrite>:
otaWrite():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6085      	tsub	sp, #20
   4:	ec04      	tadds	r4, r0, #0
   6:	ec07      	tadds	r7, r0, #0
   8:	b70d      	tadds	r7, #13
   a:	487d      	tloadrb	r5, [r7, #1]
   c:	f22d      	tshftls	r5, r5, #8
   e:	4b43      	tloadrb	r3, [r0, #13]
  10:	031d      	tors	r5, r3
  12:	a3ff      	tmovs	r3, #255	; 0xff
  14:	f21b      	tshftls	r3, r3, #8
  16:	029d      	tcmp	r5, r3
  18:	c076      	tjeq.n	108 <otaWrite+0x108>
  1a:	0b3d      	tloadr	r3, [pc, #244]	; (110 <otaWrite+0x110>)
  1c:	029d      	tcmp	r5, r3
  1e:	c105      	tjne.n	2c <otaWrite+0x2c>
  20:	97ff 9ffe 	tjl	0 <blt_disable_latency>
			20: R_TC32_CALL	blt_disable_latency
  24:	a200      	tmovs	r2, #0
  26:	0b3b      	tloadr	r3, [pc, #236]	; (114 <otaWrite+0x114>)
  28:	201a      	tstorerh	r2, [r3, #0]
  2a:	806d      	tj.n	108 <otaWrite+0x108>
  2c:	0b3a      	tloadr	r3, [pc, #232]	; (118 <otaWrite+0x118>)
  2e:	029d      	tcmp	r5, r3
  30:	c115      	tjne.n	5e <otaWrite+0x5e>
  32:	0b3a      	tloadr	r3, [pc, #232]	; (11c <otaWrite+0x11c>)
  34:	581b      	tloadr	r3, [r3, #0]
  36:	ab00      	tcmp	r3, #0
  38:	c007      	tjeq.n	4a <otaWrite+0x4a>
  3a:	0a39      	tloadr	r2, [pc, #228]	; (120 <otaWrite+0x120>)
  3c:	5812      	tloadr	r2, [r2, #0]
  3e:	0293      	tcmp	r3, r2
  40:	c003      	tjeq.n	4a <otaWrite+0x4a>
  42:	a220      	tmovs	r2, #32
  44:	0b37      	tloadr	r3, [pc, #220]	; (124 <otaWrite+0x124>)
  46:	401a      	tstorerb	r2, [r3, #0]
  48:	87fe      	tj.n	48 <otaWrite+0x48>
  4a:	a34b      	tmovs	r3, #75	; 0x4b
  4c:	4363      	tstorerb	r3, [r4, #13]
  4e:	0836      	tloadr	r0, [pc, #216]	; (128 <otaWrite+0x128>)
  50:	a101      	tmovs	r1, #1
  52:	ec3a      	tadds	r2, r7, #0
  54:	97ff 9ffe 	tjl	0 <flash_write_page>
			54: R_TC32_CALL	flash_write_page
  58:	97ff 9ffe 	tjl	0 <otaWrite>
			58: R_TC32_CALL	otaDone
  5c:	8054      	tj.n	108 <otaWrite+0x108>
  5e:	0833      	tloadr	r0, [pc, #204]	; (12c <otaWrite+0x12c>)
  60:	ec39      	tadds	r1, r7, #0
  62:	a214      	tmovs	r2, #20
  64:	97ff 9ffe 	tjl	0 <memcpy>
			64: R_TC32_CALL	memcpy
  68:	0e2d      	tloadr	r6, [pc, #180]	; (120 <otaWrite+0x120>)
  6a:	ec20      	tadds	r0, r4, #0
  6c:	b00f      	tadds	r0, #15
  6e:	ad00      	tcmp	r5, #0
  70:	c11d      	tjne.n	ae <otaWrite+0xae>
  72:	a213      	tmovs	r2, #19
  74:	e912      	tadds	r2, r2, r4
  76:	3200      	tstorer	r2, [sp, #0]
  78:	4d22      	tloadrb	r2, [r4, #20]
  7a:	f212      	tshftls	r2, r2, #8
  7c:	4d63      	tloadrb	r3, [r4, #21]
  7e:	f41b      	tshftls	r3, r3, #16
  80:	0313      	tors	r3, r2
  82:	4ce2      	tloadrb	r2, [r4, #19]
  84:	0313      	tors	r3, r2
  86:	4da2      	tloadrb	r2, [r4, #22]
  88:	f612      	tshftls	r2, r2, #24
  8a:	0313      	tors	r3, r2
  8c:	0a23      	tloadr	r2, [pc, #140]	; (11c <otaWrite+0x11c>)
  8e:	5013      	tstorer	r3, [r2, #0]
  90:	45a5      	tstorerb	r5, [r4, #22]
  92:	4565      	tstorerb	r5, [r4, #21]
  94:	4525      	tstorerb	r5, [r4, #20]
  96:	44e5      	tstorerb	r5, [r4, #19]
  98:	a110      	tmovs	r1, #16
  9a:	a200      	tmovs	r2, #0
  9c:	97ff 9ffe 	tjl	0 <blt_packet_crc24>
			9c: R_TC32_CALL	blt_packet_crc24
  a0:	5030      	tstorer	r0, [r6, #0]
  a2:	3800      	tloadr	r0, [sp, #0]
  a4:	091d      	tloadr	r1, [pc, #116]	; (11c <otaWrite+0x11c>)
  a6:	a204      	tmovs	r2, #4
  a8:	97ff 9ffe 	tjl	0 <memcpy>
			a8: R_TC32_CALL	memcpy
  ac:	8004      	tj.n	b8 <otaWrite+0xb8>
  ae:	5832      	tloadr	r2, [r6, #0]
  b0:	a110      	tmovs	r1, #16
  b2:	97ff 9ffe 	tjl	0 <blt_packet_crc24>
			b2: R_TC32_CALL	blt_packet_crc24
  b6:	5030      	tstorer	r0, [r6, #0]
  b8:	f12e      	tshftls	r6, r5, #4
  ba:	a380      	tmovs	r3, #128	; 0x80
  bc:	f29b      	tshftls	r3, r3, #10
  be:	e8f6      	tadds	r6, r6, r3
  c0:	ad00      	tcmp	r5, #0
  c2:	c101      	tjne.n	c8 <otaWrite+0xc8>
  c4:	a3ff      	tmovs	r3, #255	; 0xff
  c6:	42bb      	tstorerb	r3, [r7, #10]
  c8:	b702      	tadds	r7, #2
  ca:	ec30      	tadds	r0, r6, #0
  cc:	a110      	tmovs	r1, #16
  ce:	ec3a      	tadds	r2, r7, #0
  d0:	97ff 9ffe 	tjl	0 <flash_write_page>
			d0: R_TC32_CALL	flash_write_page
  d4:	7c01      	tadd	r4, sp, #4
  d6:	ec30      	tadds	r0, r6, #0
  d8:	a110      	tmovs	r1, #16
  da:	ec22      	tadds	r2, r4, #0
  dc:	97ff 9ffe 	tjl	0 <flash_read_page>
			dc: R_TC32_CALL	flash_read_page
  e0:	ec38      	tadds	r0, r7, #0
  e2:	ec21      	tadds	r1, r4, #0
  e4:	a210      	tmovs	r2, #16
  e6:	97ff 9ffe 	tjl	0 <memcmp>
			e6: R_TC32_CALL	memcmp
  ea:	a800      	tcmp	r0, #0
  ec:	c007      	tjeq.n	fe <otaWrite+0xfe>
  ee:	a080      	tmovs	r0, #128	; 0x80
  f0:	f280      	tshftls	r0, r0, #10
  f2:	97ff 9ffe 	tjl	0 <flash_erase_block>
			f2: R_TC32_CALL	flash_erase_block
  f6:	a220      	tmovs	r2, #32
  f8:	0b0a      	tloadr	r3, [pc, #40]	; (124 <otaWrite+0x124>)
  fa:	401a      	tstorerb	r2, [r3, #0]
  fc:	87fe      	tj.n	fc <otaWrite+0xfc>
  fe:	0b05      	tloadr	r3, [pc, #20]	; (114 <otaWrite+0x114>)
 100:	281a      	tloadrh	r2, [r3, #0]
 102:	02aa      	tcmp	r2, r5
 104:	c200      	tjcs.n	108 <otaWrite+0x108>
 106:	201d      	tstorerh	r5, [r3, #0]
 108:	a000      	tmovs	r0, #0
 10a:	6005      	tadd	sp, #20
 10c:	6df0      	tpop	{r4, r5, r6, r7, pc}
 10e:	46c0      	tnop			; (mov r8, r8)
 110:	0000ff01 	tandeq	pc, r0, r1, lsl #30
 114:	00000000 	tandeq	r0, r0, r0
			114: R_TC32_ABS32	.bss.otaPktIndex
 118:	0000ff02 	tandeq	pc, r0, r2, lsl #30
	...
			11c: R_TC32_ABS32	.bss.ota_crc_check.3162
			120: R_TC32_ABS32	.bss.ota_crc.3161
 124:	0080006f 	taddeq	r0, r0, pc, rrx
 128:	00020008 	tandeq	r0, r2, r8
 12c:	00000000 	tandeq	r0, r0, r0
			12c: R_TC32_ABS32	ota_data

Disassembly of section .bss.otaPktIndex:

00000000 <otaPktIndex>:
	...

Disassembly of section .bss.ota_crc_check.3162:

00000000 <ota_crc_check.3162>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .bss.start_ota_flag:

00000000 <start_ota_flag>:
	...

Disassembly of section .bss.ota_crc.3161:

00000000 <ota_crc.3161>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

ble_ll_pair.o:     file format elf32-littletc32
rw-rw-rw- 0/0  10128 Jan 30 00:17 2019 ble_ll_pair.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.pair_update_key 0000008c  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.pair_i2c_save_config 0000003c  00000000  00000000  000000c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.pair_i2c_load_config 00000014  00000000  00000000  000000fc  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.pair_save_key 00000094  00000000  00000000  00000110  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.pair_delete_key 00000054  00000000  00000000  000001a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.pair_load_key 0000004c  00000000  00000000  000001f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.pair_get_key 00000034  00000000  00000000  00000244  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.pair_set_key 00000038  00000000  00000000  00000278  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.pairInit 00000044  00000000  00000000  000002b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text.pair_set_network_name 00000028  00000000  00000000  000002f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text.pair_set_network_password 00000028  00000000  00000000  0000031c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text.pair_set_network_ltk 00000014  00000000  00000000  00000344  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text.pairWrite 0000016c  00000000  00000000  00000358  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text.pairRead 00000010  00000000  00000000  000004c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text.pairProc 000001b8  00000000  00000000  000004d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .text.pair_dec_packet 00000050  00000000  00000000  0000068c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .text.pair_enc_packet 00000078  00000000  00000000  000006dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 20 .text.pair_enc_packet_mesh 00000050  00000000  00000000  00000754  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 21 .text.pair_dec_packet_mesh 00000060  00000000  00000000  000007a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 22 .text.mesh_security_enable 0000000c  00000000  00000000  00000804  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 23 .bss.pair_ivm 00000008  00000000  00000000  00000810  2**2
                  ALLOC
 24 .data.pair_rands 00000008  00000000  00000000  00000810  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss.pair_ivs 00000008  00000000  00000000  00000818  2**2
                  ALLOC
 26 .bss.pair_work 00000010  00000000  00000000  00000818  2**2
                  ALLOC
 27 .data.pair_ltk 00000010  00000000  00000000  00000818  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 28 .bss.ble_pair_st 00000001  00000000  00000000  00000828  2**0
                  ALLOC
 29 .data.pair_nn 00000014  00000000  00000000  00000828  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 30 .bss.pair_login_ok 00000001  00000000  00000000  0000083c  2**0
                  ALLOC
 31 .rodata.str1.1 00000010  00000000  00000000  0000083c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 32 .bss.pair_enc_enable 00000001  00000000  00000000  0000084c  2**0
                  ALLOC
 33 .bss.pair_pin 00000010  00000000  00000000  0000084c  2**2
                  ALLOC
 34 .bss.pair_sk  00000010  00000000  00000000  0000084c  2**2
                  ALLOC
 35 .data.pair_pass 00000010  00000000  00000000  0000084c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 36 .data.pkt_read_rsp 00000024  00000000  00000000  0000085c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 37 .bss.pairRead_pending 00000001  00000000  00000000  00000880  2**0
                  ALLOC
 38 .data.pair_randm 00000008  00000000  00000000  00000880  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 39 .bss.st.3381  00000001  00000000  00000000  00000888  2**0
                  ALLOC
 40 .bss.security_enable 00000001  00000000  00000000  00000888  2**0
                  ALLOC
 41 .comment      0000001b  00000000  00000000  00000888  2**0
                  CONTENTS, READONLY
 42 .TC32.attributes 00000010  00000000  00000000  000008a3  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ble_ll_pair.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.pair_update_key	00000000 .text.pair_update_key
00000000 l    d  .text.pair_i2c_save_config	00000000 .text.pair_i2c_save_config
00000000 l    d  .text.pair_i2c_load_config	00000000 .text.pair_i2c_load_config
00000000 l    d  .text.pair_save_key	00000000 .text.pair_save_key
00000000 l    d  .text.pair_delete_key	00000000 .text.pair_delete_key
00000000 l    d  .text.pair_load_key	00000000 .text.pair_load_key
00000000 l    d  .text.pair_get_key	00000000 .text.pair_get_key
00000000 l    d  .text.pair_set_key	00000000 .text.pair_set_key
00000000 l    d  .text.pairInit	00000000 .text.pairInit
00000000 l    d  .text.pair_set_network_name	00000000 .text.pair_set_network_name
00000000 l    d  .text.pair_set_network_password	00000000 .text.pair_set_network_password
00000000 l    d  .text.pair_set_network_ltk	00000000 .text.pair_set_network_ltk
00000000 l    d  .text.pairWrite	00000000 .text.pairWrite
00000000 l    d  .text.pairRead	00000000 .text.pairRead
00000000 l    d  .text.pairProc	00000000 .text.pairProc
00000000 l    d  .text.pair_dec_packet	00000000 .text.pair_dec_packet
00000000 l    d  .text.pair_enc_packet	00000000 .text.pair_enc_packet
00000000 l    d  .text.pair_enc_packet_mesh	00000000 .text.pair_enc_packet_mesh
00000000 l    d  .text.pair_dec_packet_mesh	00000000 .text.pair_dec_packet_mesh
00000000 l    d  .text.mesh_security_enable	00000000 .text.mesh_security_enable
00000000 l    d  .bss.pair_ivm	00000000 .bss.pair_ivm
00000000 l    d  .data.pair_rands	00000000 .data.pair_rands
00000000 l    d  .bss.pair_ivs	00000000 .bss.pair_ivs
00000000 l    d  .bss.pair_work	00000000 .bss.pair_work
00000000 l    d  .data.pair_ltk	00000000 .data.pair_ltk
00000000 l    d  .bss.ble_pair_st	00000000 .bss.ble_pair_st
00000000 l    d  .data.pair_nn	00000000 .data.pair_nn
00000000 l    d  .bss.pair_login_ok	00000000 .bss.pair_login_ok
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .bss.pair_enc_enable	00000000 .bss.pair_enc_enable
00000000 l    d  .bss.pair_pin	00000000 .bss.pair_pin
00000000 l    d  .bss.pair_sk	00000000 .bss.pair_sk
00000000 l    d  .data.pair_pass	00000000 .data.pair_pass
00000000 l    d  .data.pkt_read_rsp	00000000 .data.pkt_read_rsp
00000000 l    d  .bss.pairRead_pending	00000000 .bss.pairRead_pending
00000000 l    d  .data.pair_randm	00000000 .data.pair_randm
00000000 l    d  .bss.st.3381	00000000 .bss.st.3381
00000000 l     O .bss.st.3381	00000001 st.3381
00000000 l    d  .bss.security_enable	00000000 .bss.security_enable
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 g     F .text.pair_update_key	0000008c pair_update_key
00000000         *UND*	00000000 aes_att_encryption2
00000000         *UND*	00000000 blt_set_adv_network_name
00000004       O *COM*	00000004 pair_ac
00000000 g     F .text.pair_i2c_save_config	0000003c pair_i2c_save_config
00000000         *UND*	00000000 i2c_sim_burst_write
00000000         *UND*	00000000 sleep_us
00000000 g     F .text.pair_i2c_load_config	00000014 pair_i2c_load_config
00000000         *UND*	00000000 i2c_sim_burst_read
00000000 g     F .text.pair_save_key	00000094 pair_save_key
00000000         *UND*	00000000 memset
00000000         *UND*	00000000 memcpy
00000000         *UND*	00000000 blt_p_mac
00000000 g     F .text.pair_delete_key	00000054 pair_delete_key
00000000 g     F .text.pair_load_key	0000004c pair_load_key
00000000 g     F .text.pair_get_key	00000034 pair_get_key
00000000 g     F .text.pair_set_key	00000038 pair_set_key
00000000 g     F .text.pairInit	00000044 pairInit
00000000         *UND*	00000000 mesh_node_report_init
00000000 g     F .text.pair_set_network_name	00000028 pair_set_network_name
00000000 g     F .text.pair_set_network_password	00000028 pair_set_network_password
00000000 g     F .text.pair_set_network_ltk	00000014 pair_set_network_ltk
00000000 g     F .text.pairWrite	0000016c pairWrite
00000000         *UND*	00000000 aes_att_decryption2
00000000         *UND*	00000000 memcmp
00000000 g     F .text.pairRead	00000010 pairRead
00000000 g     F .text.pairProc	000001b8 pairProc
00000000 g     F .text.pair_dec_packet	00000050 pair_dec_packet
00000000         *UND*	00000000 aes_att_decryption_packet
00000000 g     F .text.pair_enc_packet	00000078 pair_enc_packet
00000000         *UND*	00000000 aes_att_encryption_packet
00000000 g     F .text.pair_enc_packet_mesh	00000050 pair_enc_packet_mesh
00000000 g     F .text.pair_dec_packet_mesh	00000060 pair_dec_packet_mesh
00000000 g     F .text.mesh_security_enable	0000000c mesh_security_enable
00000000 g     O .bss.ble_pair_st	00000001 ble_pair_st
00000000 g     O .data.pkt_read_rsp	00000021 pkt_read_rsp
00000000 g     O .bss.security_enable	00000001 security_enable
00000000 g     O .data.pair_randm	00000008 pair_randm
00000000 g     O .data.pair_rands	00000008 pair_rands
00000000 g     O .bss.pair_sk	00000010 pair_sk
00000000 g     O .data.pair_ltk	00000010 pair_ltk
00000000 g     O .data.pair_nn	00000011 pair_nn
00000000 g     O .data.pair_pass	00000010 pair_pass
00000000 g     O .bss.pair_pin	00000010 pair_pin
00000000 g     O .bss.pair_work	00000010 pair_work
00000000 g     O .bss.pair_enc_enable	00000001 pair_enc_enable
00000000 g     O .bss.pair_ivm	00000008 pair_ivm
00000000 g     O .bss.pair_ivs	00000008 pair_ivs
00000000 g     O .bss.pair_login_ok	00000001 pair_login_ok
00000000 g     O .bss.pairRead_pending	00000001 pairRead_pending
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN



Disassembly of section .text.pair_update_key:

00000000 <pair_update_key>:
pair_update_key():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	0c1c      	tloadr	r4, [pc, #112]	; (74 <pair_update_key+0x74>)
   4:	081c      	tloadr	r0, [pc, #112]	; (78 <pair_update_key+0x78>)
   6:	091d      	tloadr	r1, [pc, #116]	; (7c <pair_update_key+0x7c>)
   8:	ec22      	tadds	r2, r4, #0
   a:	97ff 9ffe 	tjl	0 <aes_att_encryption2>
			a: R_TC32_CALL	aes_att_encryption2
   e:	5823      	tloadr	r3, [r4, #0]
  10:	f85c      	tshftrs	r4, r3, #1
  12:	005c      	txors	r4, r3
  14:	a201      	tmovs	r2, #1
  16:	0014      	tands	r4, r2
  18:	a200      	tmovs	r2, #0
  1a:	a101      	tmovs	r1, #1
  1c:	a001      	tmovs	r0, #1
  1e:	ac00      	tcmp	r4, #0
  20:	c005      	tjeq.n	2e <pair_update_key+0x2e>
  22:	b201      	tadds	r2, #1
  24:	aa05      	tcmp	r2, #5
  26:	cd03      	tjle.n	30 <pair_update_key+0x30>
  28:	ec02      	tadds	r2, r0, #0
  2a:	008a      	tshftls	r2, r1
  2c:	0053      	txors	r3, r2
  2e:	a200      	tmovs	r2, #0
  30:	b101      	tadds	r1, #1
  32:	a920      	tcmp	r1, #32
  34:	c1f3      	tjne.n	1e <pair_update_key+0x1e>
  36:	a400      	tmovs	r4, #0
  38:	0811      	tloadr	r0, [pc, #68]	; (80 <pair_update_key+0x80>)
  3a:	a601      	tmovs	r6, #1
  3c:	8002      	tj.n	44 <pair_update_key+0x44>
  3e:	0811      	tloadr	r0, [pc, #68]	; (84 <pair_update_key+0x84>)
  40:	0058      	txors	r0, r3
  42:	a401      	tmovs	r4, #1
  44:	a100      	tmovs	r1, #0
  46:	a200      	tmovs	r2, #0
  48:	ec37      	tadds	r7, r6, #0
  4a:	0097      	tshftls	r7, r2
  4c:	0007      	tands	r7, r0
  4e:	ee7d      	tsubs	r5, r7, #1
  50:	01af      	tsubcs	r7, r5
  52:	e9c9      	tadds	r1, r1, r7
  54:	b201      	tadds	r2, #1
  56:	aa20      	tcmp	r2, #32
  58:	c1f6      	tjne.n	48 <pair_update_key+0x48>
  5a:	a902      	tcmp	r1, #2
  5c:	cc01      	tjgt.n	62 <pair_update_key+0x62>
  5e:	a2ff      	tmovs	r2, #255	; 0xff
  60:	0053      	txors	r3, r2
  62:	ac01      	tcmp	r4, #1
  64:	c1eb      	tjne.n	3e <pair_update_key+0x3e>
  66:	0a08      	tloadr	r2, [pc, #32]	; (88 <pair_update_key+0x88>)
  68:	5013      	tstorer	r3, [r2, #0]
  6a:	0803      	tloadr	r0, [pc, #12]	; (78 <pair_update_key+0x78>)
  6c:	97ff 9ffe 	tjl	0 <blt_set_adv_network_name>
			6c: R_TC32_CALL	blt_set_adv_network_name
  70:	6df0      	tpop	{r4, r5, r6, r7, pc}
  72:	46c0      	tnop			; (mov r8, r8)
	...
			74: R_TC32_ABS32	.bss.pair_work
			78: R_TC32_ABS32	.data.pair_nn
			7c: R_TC32_ABS32	.data.pair_pass
  80:	aaaaaaaa 	tjge	feaaaab4 <pair_update_key+0xfeaaaab4>
  84:	55555555 	tloadrbpl	r5, [r5, #-1365]	; 0x555
  88:	00000000 	tandeq	r0, r0, r0
			88: R_TC32_ABS32	pair_ac

Disassembly of section .text.pair_i2c_save_config:

00000000 <pair_i2c_save_config>:
pair_i2c_save_config():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6081      	tsub	sp, #4
   4:	ec07      	tadds	r7, r0, #0
   6:	3100      	tstorer	r1, [sp, #0]
   8:	ec14      	tadds	r4, r2, #0
   a:	a600      	tmovs	r6, #0
   c:	800f      	tj.n	2e <pair_i2c_save_config+0x2e>
   e:	ec25      	tadds	r5, r4, #0
  10:	ac08      	tcmp	r4, #8
  12:	cd00      	tjle.n	16 <pair_i2c_save_config+0x16>
  14:	a508      	tmovs	r5, #8
  16:	eb64      	tsubs	r4, r4, r5
  18:	e9f1      	tadds	r1, r6, r7
  1a:	3b00      	tloadr	r3, [sp, #0]
  1c:	e99a      	tadds	r2, r3, r6
  1e:	a0a0      	tmovs	r0, #160	; 0xa0
  20:	ec2b      	tadds	r3, r5, #0
  22:	97ff 9ffe 	tjl	0 <i2c_sim_burst_write>
			22: R_TC32_CALL	i2c_sim_burst_write
  26:	e976      	tadds	r6, r6, r5
  28:	0803      	tloadr	r0, [pc, #12]	; (38 <pair_i2c_save_config+0x38>)
  2a:	97ff 9ffe 	tjl	0 <sleep_us>
			2a: R_TC32_CALL	sleep_us
  2e:	ac00      	tcmp	r4, #0
  30:	cced      	tjgt.n	e <sleep_us+0xe>
  32:	6001      	tadd	sp, #4
  34:	6df0      	tpop	{r4, r5, r6, r7, pc}
  36:	46c0      	tnop			; (mov r8, r8)
  38:	00001388 	tandeq	r1, r0, r8, lsl #7

Disassembly of section .text.pair_i2c_load_config:

00000000 <pair_i2c_load_config>:
pair_i2c_load_config():
   0:	6530      	tpush	{r4, r5, lr}
   2:	ec05      	tadds	r5, r0, #0
   4:	ec0c      	tadds	r4, r1, #0
   6:	ec13      	tadds	r3, r2, #0
   8:	a0a0      	tmovs	r0, #160	; 0xa0
   a:	ec29      	tadds	r1, r5, #0
   c:	ec22      	tadds	r2, r4, #0
   e:	97ff 9ffe 	tjl	0 <i2c_sim_burst_read>
			e: R_TC32_CALL	i2c_sim_burst_read
  12:	6d30      	tpop	{r4, r5, pc}

Disassembly of section .text.pair_save_key:

00000000 <pair_save_key>:
pair_save_key():
   0:	6510      	tpush	{r4, lr}
   2:	6084      	tsub	sp, #16
   4:	f600      	tshftls	r0, r0, #24
   6:	0a1e      	tloadr	r2, [pc, #120]	; (80 <pair_save_key+0x80>)
   8:	4813      	tloadrb	r3, [r2, #0]
   a:	a800      	tcmp	r0, #0
   c:	c004      	tjeq.n	18 <pair_save_key+0x18>
   e:	ab00      	tcmp	r3, #0
  10:	c102      	tjne.n	18 <pair_save_key+0x18>
  12:	a301      	tmovs	r3, #1
  14:	4013      	tstorerb	r3, [r2, #0]
  16:	8030      	tj.n	7a <pair_save_key+0x7a>
  18:	ab01      	tcmp	r3, #1
  1a:	c112      	tjne.n	42 <pair_save_key+0x42>
  1c:	066c      	tmov	r4, sp
  1e:	0668      	tmov	r0, sp
  20:	a100      	tmovs	r1, #0
  22:	a210      	tmovs	r2, #16
  24:	97ff 9ffe 	tjl	0 <memset>
			24: R_TC32_CALL	memset
  28:	a3fa      	tmovs	r3, #250	; 0xfa
  2a:	4023      	tstorerb	r3, [r4, #0]
  2c:	0b15      	tloadr	r3, [pc, #84]	; (84 <pair_save_key+0x84>)
  2e:	5819      	tloadr	r1, [r3, #0]
  30:	0668      	tmov	r0, sp
  32:	b002      	tadds	r0, #2
  34:	a206      	tmovs	r2, #6
  36:	97ff 9ffe 	tjl	0 <memcpy>
			36: R_TC32_CALL	memcpy
  3a:	a000      	tmovs	r0, #0
  3c:	0669      	tmov	r1, sp
  3e:	a208      	tmovs	r2, #8
  40:	8009      	tj.n	56 <pair_save_key+0x56>
  42:	ab02      	tcmp	r3, #2
  44:	c102      	tjne.n	4c <pair_save_key+0x4c>
  46:	a010      	tmovs	r0, #16
  48:	090f      	tloadr	r1, [pc, #60]	; (88 <pair_save_key+0x88>)
  4a:	8003      	tj.n	54 <pair_save_key+0x54>
  4c:	ab03      	tcmp	r3, #3
  4e:	c108      	tjne.n	62 <pair_save_key+0x62>
  50:	a020      	tmovs	r0, #32
  52:	090e      	tloadr	r1, [pc, #56]	; (8c <pair_save_key+0x8c>)
  54:	a210      	tmovs	r2, #16
  56:	97ff 9ffe 	tjl	0 <pair_save_key>
			56: R_TC32_CALL	pair_i2c_save_config
  5a:	0b09      	tloadr	r3, [pc, #36]	; (80 <pair_save_key+0x80>)
  5c:	481a      	tloadrb	r2, [r3, #0]
  5e:	b201      	tadds	r2, #1
  60:	800a      	tj.n	78 <pair_save_key+0x78>
  62:	ab04      	tcmp	r3, #4
  64:	c109      	tjne.n	7a <pair_save_key+0x7a>
  66:	a030      	tmovs	r0, #48	; 0x30
  68:	0909      	tloadr	r1, [pc, #36]	; (90 <pair_save_key+0x90>)
  6a:	a210      	tmovs	r2, #16
  6c:	97ff 9ffe 	tjl	0 <pair_save_key>
			6c: R_TC32_CALL	pair_i2c_save_config
  70:	97ff 9ffe 	tjl	0 <pair_save_key>
			70: R_TC32_CALL	pair_update_key
  74:	a200      	tmovs	r2, #0
  76:	0b02      	tloadr	r3, [pc, #8]	; (80 <pair_save_key+0x80>)
  78:	401a      	tstorerb	r2, [r3, #0]
  7a:	6004      	tadd	sp, #16
  7c:	6d10      	tpop	{r4, pc}
  7e:	46c0      	tnop			; (mov r8, r8)
	...
			80: R_TC32_ABS32	.bss.st.3381
			84: R_TC32_ABS32	blt_p_mac
			88: R_TC32_ABS32	.data.pair_nn
			8c: R_TC32_ABS32	.data.pair_pass
			90: R_TC32_ABS32	.data.pair_ltk

Disassembly of section .text.pair_delete_key:

00000000 <pair_delete_key>:
pair_delete_key():
   0:	6530      	tpush	{r4, r5, lr}
   2:	0c0f      	tloadr	r4, [pc, #60]	; (40 <pair_delete_key+0x40>)
   4:	ec20      	tadds	r0, r4, #0
   6:	a100      	tmovs	r1, #0
   8:	a210      	tmovs	r2, #16
   a:	97ff 9ffe 	tjl	0 <memset>
			a: R_TC32_CALL	memset
   e:	0d0d      	tloadr	r5, [pc, #52]	; (44 <pair_delete_key+0x44>)
  10:	ec28      	tadds	r0, r5, #0
  12:	a100      	tmovs	r1, #0
  14:	a210      	tmovs	r2, #16
  16:	97ff 9ffe 	tjl	0 <memset>
			16: R_TC32_CALL	memset
  1a:	080b      	tloadr	r0, [pc, #44]	; (48 <pair_delete_key+0x48>)
  1c:	a100      	tmovs	r1, #0
  1e:	a210      	tmovs	r2, #16
  20:	97ff 9ffe 	tjl	0 <memset>
			20: R_TC32_CALL	memset
  24:	ec20      	tadds	r0, r4, #0
  26:	0909      	tloadr	r1, [pc, #36]	; (4c <pair_delete_key+0x4c>)
  28:	a20b      	tmovs	r2, #11
  2a:	97ff 9ffe 	tjl	0 <memcpy>
			2a: R_TC32_CALL	memcpy
  2e:	ec28      	tadds	r0, r5, #0
  30:	0907      	tloadr	r1, [pc, #28]	; (50 <pair_delete_key+0x50>)
  32:	a203      	tmovs	r2, #3
  34:	97ff 9ffe 	tjl	0 <memcpy>
			34: R_TC32_CALL	memcpy
  38:	a001      	tmovs	r0, #1
  3a:	97ff 9ffe 	tjl	0 <pair_delete_key>
			3a: R_TC32_CALL	pair_save_key
  3e:	6d30      	tpop	{r4, r5, pc}
	...
			40: R_TC32_ABS32	.data.pair_nn
			44: R_TC32_ABS32	.data.pair_pass
			48: R_TC32_ABS32	.data.pair_ltk
			4c: R_TC32_ABS32	.rodata.str1.1
  50:	0000000c 	tandeq	r0, r0, ip
			50: R_TC32_ABS32	.rodata.str1.1

Disassembly of section .text.pair_load_key:

00000000 <pair_load_key>:
pair_load_key():
   0:	6510      	tpush	{r4, lr}
   2:	6081      	tsub	sp, #4
   4:	066c      	tmov	r4, sp
   6:	b403      	tadds	r4, #3
   8:	a000      	tmovs	r0, #0
   a:	ec21      	tadds	r1, r4, #0
   c:	a201      	tmovs	r2, #1
   e:	97ff 9ffe 	tjl	0 <pair_load_key>
			e: R_TC32_CALL	pair_i2c_load_config
  12:	4823      	tloadrb	r3, [r4, #0]
  14:	abfa      	tcmp	r3, #250	; 0xfa
  16:	c10e      	tjne.n	36 <pair_load_key+0x36>
  18:	a010      	tmovs	r0, #16
  1a:	0909      	tloadr	r1, [pc, #36]	; (40 <pair_load_key+0x40>)
  1c:	a210      	tmovs	r2, #16
  1e:	97ff 9ffe 	tjl	0 <pair_load_key>
			1e: R_TC32_CALL	pair_i2c_load_config
  22:	a020      	tmovs	r0, #32
  24:	0907      	tloadr	r1, [pc, #28]	; (44 <pair_load_key+0x44>)
  26:	a210      	tmovs	r2, #16
  28:	97ff 9ffe 	tjl	0 <pair_load_key>
			28: R_TC32_CALL	pair_i2c_load_config
  2c:	a030      	tmovs	r0, #48	; 0x30
  2e:	0906      	tloadr	r1, [pc, #24]	; (48 <pair_load_key+0x48>)
  30:	a210      	tmovs	r2, #16
  32:	97ff 9ffe 	tjl	0 <pair_load_key>
			32: R_TC32_CALL	pair_i2c_load_config
  36:	97ff 9ffe 	tjl	0 <pair_load_key>
			36: R_TC32_CALL	pair_update_key
  3a:	6001      	tadd	sp, #4
  3c:	6d10      	tpop	{r4, pc}
  3e:	46c0      	tnop			; (mov r8, r8)
	...
			40: R_TC32_ABS32	.data.pair_nn
			44: R_TC32_ABS32	.data.pair_pass
			48: R_TC32_ABS32	.data.pair_ltk

Disassembly of section .text.pair_get_key:

00000000 <pair_get_key>:
pair_get_key():
   0:	6510      	tpush	{r4, lr}
   2:	ec04      	tadds	r4, r0, #0
   4:	0908      	tloadr	r1, [pc, #32]	; (28 <pair_get_key+0x28>)
   6:	a210      	tmovs	r2, #16
   8:	97ff 9ffe 	tjl	0 <memcpy>
			8: R_TC32_CALL	memcpy
   c:	ec20      	tadds	r0, r4, #0
   e:	b010      	tadds	r0, #16
  10:	0906      	tloadr	r1, [pc, #24]	; (2c <pair_get_key+0x2c>)
  12:	a210      	tmovs	r2, #16
  14:	97ff 9ffe 	tjl	0 <memcpy>
			14: R_TC32_CALL	memcpy
  18:	ec20      	tadds	r0, r4, #0
  1a:	b020      	tadds	r0, #32
  1c:	0904      	tloadr	r1, [pc, #16]	; (30 <pair_get_key+0x30>)
  1e:	a210      	tmovs	r2, #16
  20:	97ff 9ffe 	tjl	0 <memcpy>
			20: R_TC32_CALL	memcpy
  24:	6d10      	tpop	{r4, pc}
  26:	46c0      	tnop			; (mov r8, r8)
	...
			28: R_TC32_ABS32	.data.pair_nn
			2c: R_TC32_ABS32	.data.pair_pass
			30: R_TC32_ABS32	.data.pair_ltk

Disassembly of section .text.pair_set_key:

00000000 <pair_set_key>:
pair_set_key():
   0:	6510      	tpush	{r4, lr}
   2:	ec04      	tadds	r4, r0, #0
   4:	0809      	tloadr	r0, [pc, #36]	; (2c <pair_set_key+0x2c>)
   6:	ec21      	tadds	r1, r4, #0
   8:	a210      	tmovs	r2, #16
   a:	97ff 9ffe 	tjl	0 <memcpy>
			a: R_TC32_CALL	memcpy
   e:	ec21      	tadds	r1, r4, #0
  10:	b110      	tadds	r1, #16
  12:	0807      	tloadr	r0, [pc, #28]	; (30 <pair_set_key+0x30>)
  14:	a210      	tmovs	r2, #16
  16:	97ff 9ffe 	tjl	0 <memcpy>
			16: R_TC32_CALL	memcpy
  1a:	ec21      	tadds	r1, r4, #0
  1c:	b120      	tadds	r1, #32
  1e:	0805      	tloadr	r0, [pc, #20]	; (34 <pair_set_key+0x34>)
  20:	a210      	tmovs	r2, #16
  22:	97ff 9ffe 	tjl	0 <memcpy>
			22: R_TC32_CALL	memcpy
  26:	97ff 9ffe 	tjl	0 <pair_set_key>
			26: R_TC32_CALL	pair_update_key
  2a:	6d10      	tpop	{r4, pc}
	...
			2c: R_TC32_ABS32	.data.pair_nn
			30: R_TC32_ABS32	.data.pair_pass
			34: R_TC32_ABS32	.data.pair_ltk

Disassembly of section .text.pairInit:

00000000 <pairInit>:
pairInit():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	a500      	tmovs	r5, #0
   4:	0b0b      	tloadr	r3, [pc, #44]	; (34 <pairInit+0x34>)
   6:	401d      	tstorerb	r5, [r3, #0]
   8:	0b0b      	tloadr	r3, [pc, #44]	; (38 <pairInit+0x38>)
   a:	401d      	tstorerb	r5, [r3, #0]
   c:	ec06      	tadds	r6, r0, #0
   e:	b60c      	tadds	r6, #12
  10:	0c0a      	tloadr	r4, [pc, #40]	; (3c <pairInit+0x3c>)
  12:	ec20      	tadds	r0, r4, #0
  14:	ec31      	tadds	r1, r6, #0
  16:	a204      	tmovs	r2, #4
  18:	97ff 9ffe 	tjl	0 <memcpy>
			18: R_TC32_CALL	memcpy
  1c:	a301      	tmovs	r3, #1
  1e:	4123      	tstorerb	r3, [r4, #4]
  20:	0c07      	tloadr	r4, [pc, #28]	; (40 <pairInit+0x40>)
  22:	ec20      	tadds	r0, r4, #0
  24:	ec31      	tadds	r1, r6, #0
  26:	a204      	tmovs	r2, #4
  28:	97ff 9ffe 	tjl	0 <memcpy>
			28: R_TC32_CALL	memcpy
  2c:	41a5      	tstorerb	r5, [r4, #6]
  2e:	97ff 9ffe 	tjl	0 <mesh_node_report_init>
			2e: R_TC32_CALL	mesh_node_report_init
  32:	6d70      	tpop	{r4, r5, r6, pc}
	...
			34: R_TC32_ABS32	.bss.ble_pair_st
			38: R_TC32_ABS32	.bss.pair_enc_enable
			3c: R_TC32_ABS32	.bss.pair_ivm
			40: R_TC32_ABS32	.bss.pair_ivs

Disassembly of section .text.pair_set_network_name:

00000000 <pair_set_network_name>:
pair_set_network_name():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	ec06      	tadds	r6, r0, #0
   4:	ec0d      	tadds	r5, r1, #0
   6:	0c07      	tloadr	r4, [pc, #28]	; (24 <pair_set_network_name+0x24>)
   8:	ec20      	tadds	r0, r4, #0
   a:	a100      	tmovs	r1, #0
   c:	a210      	tmovs	r2, #16
   e:	97ff 9ffe 	tjl	0 <memset>
			e: R_TC32_CALL	memset
  12:	ec2a      	tadds	r2, r5, #0
  14:	ad10      	tcmp	r5, #16
  16:	cd00      	tjle.n	1a <pair_set_network_name+0x1a>
  18:	a210      	tmovs	r2, #16
  1a:	ec20      	tadds	r0, r4, #0
  1c:	ec31      	tadds	r1, r6, #0
  1e:	97ff 9ffe 	tjl	0 <memcpy>
			1e: R_TC32_CALL	memcpy
  22:	6d70      	tpop	{r4, r5, r6, pc}
  24:	00000000 	tandeq	r0, r0, r0
			24: R_TC32_ABS32	.data.pair_nn

Disassembly of section .text.pair_set_network_password:

00000000 <pair_set_network_password>:
pair_set_network_password():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	ec06      	tadds	r6, r0, #0
   4:	ec0d      	tadds	r5, r1, #0
   6:	0c07      	tloadr	r4, [pc, #28]	; (24 <pair_set_network_password+0x24>)
   8:	ec20      	tadds	r0, r4, #0
   a:	a100      	tmovs	r1, #0
   c:	a210      	tmovs	r2, #16
   e:	97ff 9ffe 	tjl	0 <memset>
			e: R_TC32_CALL	memset
  12:	ec2a      	tadds	r2, r5, #0
  14:	ad10      	tcmp	r5, #16
  16:	cd00      	tjle.n	1a <pair_set_network_password+0x1a>
  18:	a210      	tmovs	r2, #16
  1a:	ec20      	tadds	r0, r4, #0
  1c:	ec31      	tadds	r1, r6, #0
  1e:	97ff 9ffe 	tjl	0 <memcpy>
			1e: R_TC32_CALL	memcpy
  22:	6d70      	tpop	{r4, r5, r6, pc}
  24:	00000000 	tandeq	r0, r0, r0
			24: R_TC32_ABS32	.data.pair_pass

Disassembly of section .text.pair_set_network_ltk:

00000000 <pair_set_network_ltk>:
pair_set_network_ltk():
   0:	6500      	tpush	{lr}
   2:	ec01      	tadds	r1, r0, #0
   4:	0802      	tloadr	r0, [pc, #8]	; (10 <pair_set_network_ltk+0x10>)
   6:	a210      	tmovs	r2, #16
   8:	97ff 9ffe 	tjl	0 <memcpy>
			8: R_TC32_CALL	memcpy
   c:	6d00      	tpop	{pc}
   e:	46c0      	tnop			; (mov r8, r8)
  10:	00000000 	tandeq	r0, r0, r0
			10: R_TC32_ABS32	.data.pair_ltk

Disassembly of section .text.pairWrite:

00000000 <pairWrite>:
pairWrite():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	4b44      	tloadrb	r4, [r0, #13]
   4:	ec05      	tadds	r5, r0, #0
   6:	b50e      	tadds	r5, #14
   8:	ac01      	tcmp	r4, #1
   a:	c106      	tjne.n	1a <pairWrite+0x1a>
   c:	084e      	tloadr	r0, [pc, #312]	; (148 <pairWrite+0x148>)
   e:	ec29      	tadds	r1, r5, #0
  10:	a208      	tmovs	r2, #8
  12:	97ff 9ffe 	tjl	0 <memcpy>
			12: R_TC32_CALL	memcpy
  16:	a202      	tmovs	r2, #2
  18:	808a      	tj.n	130 <pairWrite+0x130>
  1a:	ac04      	tcmp	r4, #4
  1c:	c110      	tjne.n	40 <pairWrite+0x40>
  1e:	0c4b      	tloadr	r4, [pc, #300]	; (14c <pairWrite+0x14c>)
  20:	4823      	tloadrb	r3, [r4, #0]
  22:	ab0f      	tcmp	r3, #15
  24:	c137      	tjne.n	96 <pairWrite+0x96>
  26:	0e4a      	tloadr	r6, [pc, #296]	; (150 <pairWrite+0x150>)
  28:	ec30      	tadds	r0, r6, #0
  2a:	ec29      	tadds	r1, r5, #0
  2c:	a210      	tmovs	r2, #16
  2e:	97ff 9ffe 	tjl	0 <memcpy>
			2e: R_TC32_CALL	memcpy
  32:	0848      	tloadr	r0, [pc, #288]	; (154 <pairWrite+0x154>)
  34:	ec31      	tadds	r1, r6, #0
  36:	0a48      	tloadr	r2, [pc, #288]	; (158 <pairWrite+0x158>)
  38:	97ff 9ffe 	tjl	0 <aes_att_decryption2>
			38: R_TC32_CALL	aes_att_decryption2
  3c:	a305      	tmovs	r3, #5
  3e:	8011      	tj.n	64 <pairWrite+0x64>
  40:	ac05      	tcmp	r4, #5
  42:	c111      	tjne.n	68 <pairWrite+0x68>
  44:	0c41      	tloadr	r4, [pc, #260]	; (14c <pairWrite+0x14c>)
  46:	4823      	tloadrb	r3, [r4, #0]
  48:	ab05      	tcmp	r3, #5
  4a:	c124      	tjne.n	96 <pairWrite+0x96>
  4c:	0e40      	tloadr	r6, [pc, #256]	; (150 <pairWrite+0x150>)
  4e:	ec30      	tadds	r0, r6, #0
  50:	ec29      	tadds	r1, r5, #0
  52:	a210      	tmovs	r2, #16
  54:	97ff 9ffe 	tjl	0 <memcpy>
			54: R_TC32_CALL	memcpy
  58:	083e      	tloadr	r0, [pc, #248]	; (154 <pairWrite+0x154>)
  5a:	ec31      	tadds	r1, r6, #0
  5c:	0a3f      	tloadr	r2, [pc, #252]	; (15c <pairWrite+0x15c>)
  5e:	97ff 9ffe 	tjl	0 <aes_att_decryption2>
			5e: R_TC32_CALL	aes_att_decryption2
  62:	a306      	tmovs	r3, #6
  64:	4023      	tstorerb	r3, [r4, #0]
  66:	806c      	tj.n	142 <pairWrite+0x142>
  68:	ac06      	tcmp	r4, #6
  6a:	c119      	tjne.n	a0 <pairWrite+0xa0>
  6c:	0c37      	tloadr	r4, [pc, #220]	; (14c <pairWrite+0x14c>)
  6e:	4823      	tloadrb	r3, [r4, #0]
  70:	ab06      	tcmp	r3, #6
  72:	c110      	tjne.n	96 <pairWrite+0x96>
  74:	0e36      	tloadr	r6, [pc, #216]	; (150 <pairWrite+0x150>)
  76:	ec30      	tadds	r0, r6, #0
  78:	ec29      	tadds	r1, r5, #0
  7a:	a210      	tmovs	r2, #16
  7c:	97ff 9ffe 	tjl	0 <memcpy>
			7c: R_TC32_CALL	memcpy
  80:	0834      	tloadr	r0, [pc, #208]	; (154 <pairWrite+0x154>)
  82:	ec31      	tadds	r1, r6, #0
  84:	0a36      	tloadr	r2, [pc, #216]	; (160 <pairWrite+0x160>)
  86:	97ff 9ffe 	tjl	0 <aes_att_decryption2>
			86: R_TC32_CALL	aes_att_decryption2
  8a:	a307      	tmovs	r3, #7
  8c:	4023      	tstorerb	r3, [r4, #0]
  8e:	a001      	tmovs	r0, #1
  90:	97ff 9ffe 	tjl	0 <pairWrite>
			90: R_TC32_CALL	pair_save_key
  94:	8055      	tj.n	142 <pairWrite+0x142>
  96:	a30e      	tmovs	r3, #14
  98:	4023      	tstorerb	r3, [r4, #0]
  9a:	a200      	tmovs	r2, #0
  9c:	0b31      	tloadr	r3, [pc, #196]	; (164 <pairWrite+0x164>)
  9e:	8048      	tj.n	132 <pairWrite+0x132>
  a0:	ec27      	tadds	r7, r4, #0
  a2:	bf0c      	tsubs	r7, #12
  a4:	027b      	tnegs	r3, r7
  a6:	015f      	taddcs	r7, r3
  a8:	af00      	tcmp	r7, #0
  aa:	c107      	tjne.n	bc <pairWrite+0xbc>
  ac:	ec23      	tadds	r3, r4, #0
  ae:	bb08      	tsubs	r3, #8
  b0:	025a      	tnegs	r2, r3
  b2:	0153      	taddcs	r3, r2
  b4:	ab00      	tcmp	r3, #0
  b6:	c101      	tjne.n	bc <pairWrite+0xbc>
  b8:	ac0a      	tcmp	r4, #10
  ba:	c13c      	tjne.n	136 <pairWrite+0x136>
  bc:	0822      	tloadr	r0, [pc, #136]	; (148 <pairWrite+0x148>)
  be:	ec29      	tadds	r1, r5, #0
  c0:	a208      	tmovs	r2, #8
  c2:	97ff 9ffe 	tjl	0 <memcpy>
			c2: R_TC32_CALL	memcpy
  c6:	0e23      	tloadr	r6, [pc, #140]	; (154 <pairWrite+0x154>)
  c8:	ec30      	tadds	r0, r6, #0
  ca:	091f      	tloadr	r1, [pc, #124]	; (148 <pairWrite+0x148>)
  cc:	a208      	tmovs	r2, #8
  ce:	97ff 9ffe 	tjl	0 <memcpy>
			ce: R_TC32_CALL	memcpy
  d2:	ec32      	tadds	r2, r6, #0
  d4:	b208      	tadds	r2, #8
  d6:	a300      	tmovs	r3, #0
  d8:	50b3      	tstorer	r3, [r6, #8]
  da:	5053      	tstorer	r3, [r2, #4]
  dc:	0a21      	tloadr	r2, [pc, #132]	; (164 <pairWrite+0x164>)
  de:	4013      	tstorerb	r3, [r2, #0]
  e0:	0e1b      	tloadr	r6, [pc, #108]	; (150 <pairWrite+0x150>)
  e2:	091d      	tloadr	r1, [pc, #116]	; (158 <pairWrite+0x158>)
  e4:	1cc8      	tloadrb	r0, [r1, r3]
  e6:	0684      	tmov	ip, r0
  e8:	0a1c      	tloadr	r2, [pc, #112]	; (15c <pairWrite+0x15c>)
  ea:	1cd0      	tloadrb	r0, [r2, r3]
  ec:	0662      	tmov	r2, ip
  ee:	0050      	txors	r0, r2
  f0:	14f0      	tstorerb	r0, [r6, r3]
  f2:	b301      	tadds	r3, #1
  f4:	ab10      	tcmp	r3, #16
  f6:	c1f5      	tjne.n	e4 <pairWrite+0xe4>
  f8:	0816      	tloadr	r0, [pc, #88]	; (154 <pairWrite+0x154>)
  fa:	ec31      	tadds	r1, r6, #0
  fc:	ec32      	tadds	r2, r6, #0
  fe:	97ff 9ffe 	tjl	0 <aes_att_encryption2>
			fe: R_TC32_CALL	aes_att_encryption2
 102:	ec29      	tadds	r1, r5, #0
 104:	b108      	tadds	r1, #8
 106:	ec30      	tadds	r0, r6, #0
 108:	a208      	tmovs	r2, #8
 10a:	97ff 9ffe 	tjl	0 <memcmp>
			10a: R_TC32_CALL	memcmp
 10e:	a800      	tcmp	r0, #0
 110:	c10d      	tjne.n	12e <pairWrite+0x12e>
 112:	a309      	tmovs	r3, #9
 114:	ac08      	tcmp	r4, #8
 116:	c003      	tjeq.n	120 <pairWrite+0x120>
 118:	a30b      	tmovs	r3, #11
 11a:	af00      	tcmp	r7, #0
 11c:	c000      	tjeq.n	120 <pairWrite+0x120>
 11e:	a30d      	tmovs	r3, #13
 120:	0a0a      	tloadr	r2, [pc, #40]	; (14c <pairWrite+0x14c>)
 122:	4013      	tstorerb	r3, [r2, #0]
 124:	af00      	tcmp	r7, #0
 126:	c00c      	tjeq.n	142 <pairWrite+0x142>
 128:	a201      	tmovs	r2, #1
 12a:	0b0f      	tloadr	r3, [pc, #60]	; (168 <pairWrite+0x168>)
 12c:	8001      	tj.n	132 <pairWrite+0x132>
 12e:	a20e      	tmovs	r2, #14
 130:	0b06      	tloadr	r3, [pc, #24]	; (14c <pairWrite+0x14c>)
 132:	401a      	tstorerb	r2, [r3, #0]
 134:	8005      	tj.n	142 <pairWrite+0x142>
 136:	ac0e      	tcmp	r4, #14
 138:	c103      	tjne.n	142 <pairWrite+0x142>
 13a:	0a04      	tloadr	r2, [pc, #16]	; (14c <pairWrite+0x14c>)
 13c:	4013      	tstorerb	r3, [r2, #0]
 13e:	0a09      	tloadr	r2, [pc, #36]	; (164 <pairWrite+0x164>)
 140:	4013      	tstorerb	r3, [r2, #0]
 142:	a001      	tmovs	r0, #1
 144:	6df0      	tpop	{r4, r5, r6, r7, pc}
 146:	46c0      	tnop			; (mov r8, r8)
	...
			148: R_TC32_ABS32	.data.pair_randm
			14c: R_TC32_ABS32	.bss.ble_pair_st
			150: R_TC32_ABS32	.bss.pair_work
			154: R_TC32_ABS32	.bss.pair_sk
			158: R_TC32_ABS32	.data.pair_nn
			15c: R_TC32_ABS32	.data.pair_pass
			160: R_TC32_ABS32	.data.pair_ltk
			164: R_TC32_ABS32	.bss.pair_enc_enable
			168: R_TC32_ABS32	.bss.pair_login_ok

Disassembly of section .text.pairRead:

00000000 <pairRead>:
pairRead():
   0:	a201      	tmovs	r2, #1
   2:	0b02      	tloadr	r3, [pc, #8]	; (c <pairRead+0xc>)
   4:	401a      	tstorerb	r2, [r3, #0]
   6:	a001      	tmovs	r0, #1
   8:	0770      	tjex	lr
   a:	46c0      	tnop			; (mov r8, r8)
   c:	00000000 	tandeq	r0, r0, r0
			c: R_TC32_ABS32	.bss.pairRead_pending

Disassembly of section .text.pairProc:

00000000 <pairProc>:
pairProc():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	0d61      	tloadr	r5, [pc, #388]	; (188 <pairProc+0x188>)
   4:	482e      	tloadrb	r6, [r5, #0]
   6:	a000      	tmovs	r0, #0
   8:	97ff 9ffe 	tjl	0 <pairProc>
			8: R_TC32_CALL	pair_save_key
   c:	0b5f      	tloadr	r3, [pc, #380]	; (18c <pairProc+0x18c>)
   e:	481a      	tloadrb	r2, [r3, #0]
  10:	a400      	tmovs	r4, #0
  12:	aa00      	tcmp	r2, #0
  14:	c100      	tjne.n	18 <pairProc+0x18>
  16:	80b4      	tj.n	182 <pairProc+0x182>
  18:	401c      	tstorerb	r4, [r3, #0]
  1a:	ae02      	tcmp	r6, #2
  1c:	c10a      	tjne.n	34 <pairProc+0x34>
  1e:	085c      	tloadr	r0, [pc, #368]	; (190 <pairProc+0x190>)
  20:	a30a      	tmovs	r3, #10
  22:	20c3      	tstorerh	r3, [r0, #6]
  24:	b00c      	tadds	r0, #12
  26:	095b      	tloadr	r1, [pc, #364]	; (194 <pairProc+0x194>)
  28:	a208      	tmovs	r2, #8
  2a:	97ff 9ffe 	tjl	0 <memcpy>
			2a: R_TC32_CALL	memcpy
  2e:	a30c      	tmovs	r3, #12
  30:	402b      	tstorerb	r3, [r5, #0]
  32:	809f      	tj.n	174 <pairProc+0x174>
  34:	ae07      	tcmp	r6, #7
  36:	c117      	tjne.n	68 <pairProc+0x68>
  38:	a212      	tmovs	r2, #18
  3a:	0b55      	tloadr	r3, [pc, #340]	; (190 <pairProc+0x190>)
  3c:	20da      	tstorerh	r2, [r3, #6]
  3e:	a300      	tmovs	r3, #0
  40:	0955      	tloadr	r1, [pc, #340]	; (198 <pairProc+0x198>)
  42:	0c56      	tloadr	r4, [pc, #344]	; (19c <pairProc+0x19c>)
  44:	0856      	tloadr	r0, [pc, #344]	; (1a0 <pairProc+0x1a0>)
  46:	0a57      	tloadr	r2, [pc, #348]	; (1a4 <pairProc+0x1a4>)
  48:	1ce7      	tloadrb	r7, [r4, r3]
  4a:	1cc5      	tloadrb	r5, [r0, r3]
  4c:	007d      	txors	r5, r7
  4e:	1cd7      	tloadrb	r7, [r2, r3]
  50:	007d      	txors	r5, r7
  52:	14cd      	tstorerb	r5, [r1, r3]
  54:	b301      	tadds	r3, #1
  56:	ab10      	tcmp	r3, #16
  58:	c1f6      	tjne.n	48 <pairProc+0x48>
  5a:	0853      	tloadr	r0, [pc, #332]	; (1a8 <pairProc+0x1a8>)
  5c:	0a4c      	tloadr	r2, [pc, #304]	; (190 <pairProc+0x190>)
  5e:	b20c      	tadds	r2, #12
  60:	97ff 9ffe 	tjl	0 <aes_att_encryption2>
			60: R_TC32_CALL	aes_att_encryption2
  64:	a20f      	tmovs	r2, #15
  66:	8074      	tj.n	152 <pairProc+0x152>
  68:	ae0d      	tcmp	r6, #13
  6a:	c152      	tjne.n	112 <pairProc+0x112>
  6c:	a212      	tmovs	r2, #18
  6e:	0b48      	tloadr	r3, [pc, #288]	; (190 <pairProc+0x190>)
  70:	20da      	tstorerh	r2, [r3, #6]
  72:	0b4e      	tloadr	r3, [pc, #312]	; (1ac <pairProc+0x1ac>)
  74:	581b      	tloadr	r3, [r3, #0]
  76:	0f47      	tloadr	r7, [pc, #284]	; (194 <pairProc+0x194>)
  78:	503b      	tstorer	r3, [r7, #0]
  7a:	0d4b      	tloadr	r5, [pc, #300]	; (1a8 <pairProc+0x1a8>)
  7c:	084c      	tloadr	r0, [pc, #304]	; (1b0 <pairProc+0x1b0>)
  7e:	ec39      	tadds	r1, r7, #0
  80:	ec2a      	tadds	r2, r5, #0
  82:	97ff 9ffe 	tjl	0 <aes_att_encryption2>
			82: R_TC32_CALL	aes_att_encryption2
  86:	ec38      	tadds	r0, r7, #0
  88:	ec29      	tadds	r1, r5, #0
  8a:	a208      	tmovs	r2, #8
  8c:	97ff 9ffe 	tjl	0 <memcpy>
			8c: R_TC32_CALL	memcpy
  90:	50ac      	tstorer	r4, [r5, #8]
  92:	50ec      	tstorer	r4, [r5, #12]
  94:	a300      	tmovs	r3, #0
  96:	0c40      	tloadr	r4, [pc, #256]	; (198 <pairProc+0x198>)
  98:	0941      	tloadr	r1, [pc, #260]	; (1a0 <pairProc+0x1a0>)
  9a:	0a40      	tloadr	r2, [pc, #256]	; (19c <pairProc+0x19c>)
  9c:	1ccf      	tloadrb	r7, [r1, r3]
  9e:	1cd0      	tloadrb	r0, [r2, r3]
  a0:	0078      	txors	r0, r7
  a2:	14e0      	tstorerb	r0, [r4, r3]
  a4:	b301      	tadds	r3, #1
  a6:	ab10      	tcmp	r3, #16
  a8:	c1f8      	tjne.n	9c <pairProc+0x9c>
  aa:	083f      	tloadr	r0, [pc, #252]	; (1a8 <pairProc+0x1a8>)
  ac:	ec21      	tadds	r1, r4, #0
  ae:	ec22      	tadds	r2, r4, #0
  b0:	97ff 9ffe 	tjl	0 <aes_att_encryption2>
			b0: R_TC32_CALL	aes_att_encryption2
  b4:	0f36      	tloadr	r7, [pc, #216]	; (190 <pairProc+0x190>)
  b6:	ec38      	tadds	r0, r7, #0
  b8:	b00c      	tadds	r0, #12
  ba:	0936      	tloadr	r1, [pc, #216]	; (194 <pairProc+0x194>)
  bc:	a208      	tmovs	r2, #8
  be:	97ff 9ffe 	tjl	0 <memcpy>
			be: R_TC32_CALL	memcpy
  c2:	b714      	tadds	r7, #20
  c4:	ec22      	tadds	r2, r4, #0
  c6:	da03      	tloadm	r2!, {r0, r1}
  c8:	d703      	tstorem	r7!, {r0, r1}
  ca:	a300      	tmovs	r3, #0
  cc:	ec27      	tadds	r7, r4, #0
  ce:	0934      	tloadr	r1, [pc, #208]	; (1a0 <pairProc+0x1a0>)
  d0:	0a32      	tloadr	r2, [pc, #200]	; (19c <pairProc+0x19c>)
  d2:	1ccc      	tloadrb	r4, [r1, r3]
  d4:	1cd0      	tloadrb	r0, [r2, r3]
  d6:	0060      	txors	r0, r4
  d8:	14f8      	tstorerb	r0, [r7, r3]
  da:	b301      	tadds	r3, #1
  dc:	ab10      	tcmp	r3, #16
  de:	c1f8      	tjne.n	d2 <pairProc+0xd2>
  e0:	ec28      	tadds	r0, r5, #0
  e2:	0933      	tloadr	r1, [pc, #204]	; (1b0 <pairProc+0x1b0>)
  e4:	a208      	tmovs	r2, #8
  e6:	97ff 9ffe 	tjl	0 <memcpy>
			e6: R_TC32_CALL	memcpy
  ea:	ec2c      	tadds	r4, r5, #0
  ec:	b408      	tadds	r4, #8
  ee:	ec20      	tadds	r0, r4, #0
  f0:	0928      	tloadr	r1, [pc, #160]	; (194 <pairProc+0x194>)
  f2:	a208      	tmovs	r2, #8
  f4:	97ff 9ffe 	tjl	0 <memcpy>
			f4: R_TC32_CALL	memcpy
  f8:	ec22      	tadds	r2, r4, #0
  fa:	ba08      	tsubs	r2, #8
  fc:	ec38      	tadds	r0, r7, #0
  fe:	ec11      	tadds	r1, r2, #0
 100:	97ff 9ffe 	tjl	0 <aes_att_encryption2>
			100: R_TC32_CALL	aes_att_encryption2
 104:	a20f      	tmovs	r2, #15
 106:	0b20      	tloadr	r3, [pc, #128]	; (188 <pairProc+0x188>)
 108:	401a      	tstorerb	r2, [r3, #0]
 10a:	a201      	tmovs	r2, #1
 10c:	0b29      	tloadr	r3, [pc, #164]	; (1b4 <pairProc+0x1b4>)
 10e:	401a      	tstorerb	r2, [r3, #0]
 110:	8030      	tj.n	174 <pairProc+0x174>
 112:	ae09      	tcmp	r6, #9
 114:	c11f      	tjne.n	156 <pairProc+0x156>
 116:	a212      	tmovs	r2, #18
 118:	0b1d      	tloadr	r3, [pc, #116]	; (190 <pairProc+0x190>)
 11a:	20da      	tstorerh	r2, [r3, #6]
 11c:	0d1e      	tloadr	r5, [pc, #120]	; (198 <pairProc+0x198>)
 11e:	ec28      	tadds	r0, r5, #0
 120:	0923      	tloadr	r1, [pc, #140]	; (1b0 <pairProc+0x1b0>)
 122:	a208      	tmovs	r2, #8
 124:	97ff 9ffe 	tjl	0 <memcpy>
			124: R_TC32_CALL	memcpy
 128:	50ac      	tstorer	r4, [r5, #8]
 12a:	50ec      	tstorer	r4, [r5, #12]
 12c:	a300      	tmovs	r3, #0
 12e:	081e      	tloadr	r0, [pc, #120]	; (1a8 <pairProc+0x1a8>)
 130:	091a      	tloadr	r1, [pc, #104]	; (19c <pairProc+0x19c>)
 132:	0a1b      	tloadr	r2, [pc, #108]	; (1a0 <pairProc+0x1a0>)
 134:	1ccf      	tloadrb	r7, [r1, r3]
 136:	1cd4      	tloadrb	r4, [r2, r3]
 138:	007c      	txors	r4, r7
 13a:	1cef      	tloadrb	r7, [r5, r3]
 13c:	007c      	txors	r4, r7
 13e:	14c4      	tstorerb	r4, [r0, r3]
 140:	b301      	tadds	r3, #1
 142:	ab10      	tcmp	r3, #16
 144:	c1f6      	tjne.n	134 <pairProc+0x134>
 146:	0917      	tloadr	r1, [pc, #92]	; (1a4 <pairProc+0x1a4>)
 148:	0a11      	tloadr	r2, [pc, #68]	; (190 <pairProc+0x190>)
 14a:	b20c      	tadds	r2, #12
 14c:	97ff 9ffe 	tjl	0 <aes_att_encryption2>
			14c: R_TC32_CALL	aes_att_encryption2
 150:	a200      	tmovs	r2, #0
 152:	0b0d      	tloadr	r3, [pc, #52]	; (188 <pairProc+0x188>)
 154:	87db      	tj.n	10e <pairProc+0x10e>
 156:	ae0b      	tcmp	r6, #11
 158:	c106      	tjne.n	168 <pairProc+0x168>
 15a:	a202      	tmovs	r2, #2
 15c:	0b0c      	tloadr	r3, [pc, #48]	; (190 <pairProc+0x190>)
 15e:	20da      	tstorerh	r2, [r3, #6]
 160:	402c      	tstorerb	r4, [r5, #0]
 162:	97ff 9ffe 	tjl	0 <pairProc>
			162: R_TC32_CALL	pair_delete_key
 166:	8005      	tj.n	174 <pairProc+0x174>
 168:	ae0e      	tcmp	r6, #14
 16a:	c103      	tjne.n	174 <pairProc+0x174>
 16c:	a202      	tmovs	r2, #2
 16e:	0b08      	tloadr	r3, [pc, #32]	; (190 <pairProc+0x190>)
 170:	20da      	tstorerh	r2, [r3, #6]
 172:	402c      	tstorerb	r4, [r5, #0]
 174:	0c06      	tloadr	r4, [pc, #24]	; (190 <pairProc+0x190>)
 176:	42e6      	tstorerb	r6, [r4, #11]
 178:	28e3      	tloadrh	r3, [r4, #6]
 17a:	ed1a      	tadds	r2, r3, #4
 17c:	4162      	tstorerb	r2, [r4, #5]
 17e:	b306      	tadds	r3, #6
 180:	5023      	tstorer	r3, [r4, #0]
 182:	ec20      	tadds	r0, r4, #0
 184:	6df0      	tpop	{r4, r5, r6, r7, pc}
 186:	46c0      	tnop			; (mov r8, r8)
	...
			188: R_TC32_ABS32	.bss.ble_pair_st
			18c: R_TC32_ABS32	.bss.pairRead_pending
			190: R_TC32_ABS32	.data.pkt_read_rsp
			194: R_TC32_ABS32	.data.pair_rands
			198: R_TC32_ABS32	.bss.pair_work
			19c: R_TC32_ABS32	.data.pair_pass
			1a0: R_TC32_ABS32	.data.pair_nn
			1a4: R_TC32_ABS32	.data.pair_ltk
			1a8: R_TC32_ABS32	.bss.pair_sk
 1ac:	00800740 	taddeq	r0, r0, r0, asr #14
	...
			1b0: R_TC32_ABS32	.data.pair_randm
			1b4: R_TC32_ABS32	.bss.pair_enc_enable

Disassembly of section .text.pair_dec_packet:

00000000 <pair_dec_packet>:
pair_dec_packet():
   0:	6530      	tpush	{r4, r5, lr}
   2:	6082      	tsub	sp, #8
   4:	ec04      	tadds	r4, r0, #0
   6:	0b0f      	tloadr	r3, [pc, #60]	; (44 <pair_dec_packet+0x44>)
   8:	481b      	tloadrb	r3, [r3, #0]
   a:	a001      	tmovs	r0, #1
   c:	ab00      	tcmp	r3, #0
   e:	c016      	tjeq.n	3e <pair_dec_packet+0x3e>
  10:	ec21      	tadds	r1, r4, #0
  12:	b10d      	tadds	r1, #13
  14:	0d0c      	tloadr	r5, [pc, #48]	; (48 <pair_dec_packet+0x48>)
  16:	ed68      	tadds	r0, r5, #5
  18:	a203      	tmovs	r2, #3
  1a:	97ff 9ffe 	tjl	0 <memcpy>
			1a: R_TC32_CALL	memcpy
  1e:	ec22      	tadds	r2, r4, #0
  20:	b210      	tadds	r2, #16
  22:	ec23      	tadds	r3, r4, #0
  24:	b312      	tadds	r3, #18
  26:	3300      	tstorer	r3, [sp, #0]
  28:	49a1      	tloadrb	r1, [r4, #6]
  2a:	49e3      	tloadrb	r3, [r4, #7]
  2c:	f21b      	tshftls	r3, r3, #8
  2e:	030b      	tors	r3, r1
  30:	bb08      	tsubs	r3, #8
  32:	3301      	tstorer	r3, [sp, #4]
  34:	0805      	tloadr	r0, [pc, #20]	; (4c <pair_dec_packet+0x4c>)
  36:	ec29      	tadds	r1, r5, #0
  38:	a302      	tmovs	r3, #2
  3a:	97ff 9ffe 	tjl	0 <aes_att_decryption_packet>
			3a: R_TC32_CALL	aes_att_decryption_packet
  3e:	6002      	tadd	sp, #8
  40:	6d30      	tpop	{r4, r5, pc}
  42:	46c0      	tnop			; (mov r8, r8)
	...
			44: R_TC32_ABS32	.bss.security_enable
			48: R_TC32_ABS32	.bss.pair_ivm
			4c: R_TC32_ABS32	.bss.pair_sk

Disassembly of section .text.pair_enc_packet:

00000000 <pair_enc_packet>:
pair_enc_packet():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	6083      	tsub	sp, #12
   4:	ec04      	tadds	r4, r0, #0
   6:	0b18      	tloadr	r3, [pc, #96]	; (68 <pair_enc_packet+0x68>)
   8:	481b      	tloadrb	r3, [r3, #0]
   a:	ab00      	tcmp	r3, #0
   c:	c028      	tjeq.n	60 <pair_enc_packet+0x60>
   e:	4a03      	tloadrb	r3, [r0, #8]
  10:	ab04      	tcmp	r3, #4
  12:	c125      	tjne.n	60 <pair_enc_packet+0x60>
  14:	4a83      	tloadrb	r3, [r0, #10]
  16:	ab1b      	tcmp	r3, #27
  18:	c122      	tjne.n	60 <pair_enc_packet+0x60>
  1a:	4ac3      	tloadrb	r3, [r0, #11]
  1c:	ab08      	tcmp	r3, #8
  1e:	c11f      	tjne.n	60 <pair_enc_packet+0x60>
  20:	0b12      	tloadr	r3, [pc, #72]	; (6c <pair_enc_packet+0x6c>)
  22:	581b      	tloadr	r3, [r3, #0]
  24:	3302      	tstorer	r3, [sp, #8]
  26:	ec05      	tadds	r5, r0, #0
  28:	b50d      	tadds	r5, #13
  2a:	ec28      	tadds	r0, r5, #0
  2c:	7902      	tadd	r1, sp, #8
  2e:	a203      	tmovs	r2, #3
  30:	97ff 9ffe 	tjl	0 <memcpy>
			30: R_TC32_CALL	memcpy
  34:	0e0e      	tloadr	r6, [pc, #56]	; (70 <pair_enc_packet+0x70>)
  36:	ecf0      	tadds	r0, r6, #3
  38:	ec29      	tadds	r1, r5, #0
  3a:	a205      	tmovs	r2, #5
  3c:	97ff 9ffe 	tjl	0 <memcpy>
			3c: R_TC32_CALL	memcpy
  40:	ec22      	tadds	r2, r4, #0
  42:	b212      	tadds	r2, #18
  44:	ec23      	tadds	r3, r4, #0
  46:	b314      	tadds	r3, #20
  48:	3300      	tstorer	r3, [sp, #0]
  4a:	49a1      	tloadrb	r1, [r4, #6]
  4c:	49e3      	tloadrb	r3, [r4, #7]
  4e:	f21b      	tshftls	r3, r3, #8
  50:	030b      	tors	r3, r1
  52:	bb0a      	tsubs	r3, #10
  54:	3301      	tstorer	r3, [sp, #4]
  56:	0807      	tloadr	r0, [pc, #28]	; (74 <pair_enc_packet+0x74>)
  58:	ec31      	tadds	r1, r6, #0
  5a:	a302      	tmovs	r3, #2
  5c:	97ff 9ffe 	tjl	0 <aes_att_encryption_packet>
			5c: R_TC32_CALL	aes_att_encryption_packet
  60:	a001      	tmovs	r0, #1
  62:	6003      	tadd	sp, #12
  64:	6d70      	tpop	{r4, r5, r6, pc}
  66:	46c0      	tnop			; (mov r8, r8)
  68:	00000000 	tandeq	r0, r0, r0
			68: R_TC32_ABS32	.bss.security_enable
  6c:	00800740 	taddeq	r0, r0, r0, asr #14
	...
			70: R_TC32_ABS32	.bss.pair_ivs
			74: R_TC32_ABS32	.bss.pair_sk

Disassembly of section .text.pair_enc_packet_mesh:

00000000 <pair_enc_packet_mesh>:
pair_enc_packet_mesh():
   0:	6500      	tpush	{lr}
   2:	6082      	tsub	sp, #8
   4:	ec03      	tadds	r3, r0, #0
   6:	0a10      	tloadr	r2, [pc, #64]	; (48 <pair_enc_packet_mesh+0x48>)
   8:	4812      	tloadrb	r2, [r2, #0]
   a:	a000      	tmovs	r0, #0
   c:	aa00      	tcmp	r2, #0
   e:	c018      	tjeq.n	42 <pair_enc_packet_mesh+0x42>
  10:	495a      	tloadrb	r2, [r3, #5]
  12:	080e      	tloadr	r0, [pc, #56]	; (4c <pair_enc_packet_mesh+0x4c>)
  14:	aaab      	tcmp	r2, #171	; 0xab
  16:	c109      	tjne.n	2c <pair_enc_packet_mesh+0x2c>
  18:	ec19      	tadds	r1, r3, #0
  1a:	b10c      	tadds	r1, #12
  1c:	ec1a      	tadds	r2, r3, #0
  1e:	b221      	tadds	r2, #33	; 0x21
  20:	b314      	tadds	r3, #20
  22:	3300      	tstorer	r3, [sp, #0]
  24:	a30d      	tmovs	r3, #13
  26:	3301      	tstorer	r3, [sp, #4]
  28:	a304      	tmovs	r3, #4
  2a:	8007      	tj.n	3c <pair_enc_packet_mesh+0x3c>
  2c:	ed59      	tadds	r1, r3, #5
  2e:	ec1a      	tadds	r2, r3, #0
  30:	b225      	tadds	r2, #37	; 0x25
  32:	b30d      	tadds	r3, #13
  34:	3300      	tstorer	r3, [sp, #0]
  36:	a318      	tmovs	r3, #24
  38:	3301      	tstorer	r3, [sp, #4]
  3a:	a302      	tmovs	r3, #2
  3c:	97ff 9ffe 	tjl	0 <aes_att_encryption_packet>
			3c: R_TC32_CALL	aes_att_encryption_packet
  40:	a001      	tmovs	r0, #1
  42:	6002      	tadd	sp, #8
  44:	6d00      	tpop	{pc}
  46:	46c0      	tnop			; (mov r8, r8)
	...
			48: R_TC32_ABS32	.bss.security_enable
			4c: R_TC32_ABS32	.data.pair_ltk

Disassembly of section .text.pair_dec_packet_mesh:

00000000 <pair_dec_packet_mesh>:
pair_dec_packet_mesh():
   0:	6500      	tpush	{lr}
   2:	6082      	tsub	sp, #8
   4:	ec03      	tadds	r3, r0, #0
   6:	0a14      	tloadr	r2, [pc, #80]	; (58 <pair_dec_packet_mesh+0x58>)
   8:	4812      	tloadrb	r2, [r2, #0]
   a:	a001      	tmovs	r0, #1
   c:	aa00      	tcmp	r2, #0
   e:	c021      	tjeq.n	54 <pair_dec_packet_mesh+0x54>
  10:	495a      	tloadrb	r2, [r3, #5]
  12:	f611      	tshftls	r1, r2, #24
  14:	a000      	tmovs	r0, #0
  16:	a900      	tcmp	r1, #0
  18:	ca1c      	tjge.n	54 <pair_dec_packet_mesh+0x54>
  1a:	4919      	tloadrb	r1, [r3, #4]
  1c:	b912      	tsubs	r1, #18
  1e:	f609      	tshftls	r1, r1, #24
  20:	fe09      	tshftrs	r1, r1, #24
  22:	a914      	tcmp	r1, #20
  24:	c816      	tjhi.n	54 <pair_dec_packet_mesh+0x54>
  26:	080d      	tloadr	r0, [pc, #52]	; (5c <pair_dec_packet_mesh+0x5c>)
  28:	aaab      	tcmp	r2, #171	; 0xab
  2a:	c109      	tjne.n	40 <pair_dec_packet_mesh+0x40>
  2c:	ec19      	tadds	r1, r3, #0
  2e:	b10c      	tadds	r1, #12
  30:	ec1a      	tadds	r2, r3, #0
  32:	b221      	tadds	r2, #33	; 0x21
  34:	b314      	tadds	r3, #20
  36:	3300      	tstorer	r3, [sp, #0]
  38:	a30d      	tmovs	r3, #13
  3a:	3301      	tstorer	r3, [sp, #4]
  3c:	a304      	tmovs	r3, #4
  3e:	8007      	tj.n	50 <pair_dec_packet_mesh+0x50>
  40:	ed59      	tadds	r1, r3, #5
  42:	ec1a      	tadds	r2, r3, #0
  44:	b225      	tadds	r2, #37	; 0x25
  46:	b30d      	tadds	r3, #13
  48:	3300      	tstorer	r3, [sp, #0]
  4a:	a318      	tmovs	r3, #24
  4c:	3301      	tstorer	r3, [sp, #4]
  4e:	a302      	tmovs	r3, #2
  50:	97ff 9ffe 	tjl	0 <aes_att_decryption_packet>
			50: R_TC32_CALL	aes_att_decryption_packet
  54:	6002      	tadd	sp, #8
  56:	6d00      	tpop	{pc}
	...
			58: R_TC32_ABS32	.bss.security_enable
			5c: R_TC32_ABS32	.data.pair_ltk

Disassembly of section .text.mesh_security_enable:

00000000 <mesh_security_enable>:
mesh_security_enable():
   0:	0b01      	tloadr	r3, [pc, #4]	; (8 <mesh_security_enable+0x8>)
   2:	4018      	tstorerb	r0, [r3, #0]
   4:	0770      	tjex	lr
   6:	46c0      	tnop			; (mov r8, r8)
   8:	00000000 	tandeq	r0, r0, r0
			8: R_TC32_ABS32	.bss.security_enable

Disassembly of section .bss.pair_ivm:

00000000 <pair_ivm>:
	...

Disassembly of section .data.pair_rands:

00000000 <pair_rands>:
   0:	b3b2b1b0 	undefined instruction 0xb3b2b1b0
   4:	b7b6b5b4 	undefined instruction 0xb7b6b5b4

Disassembly of section .bss.pair_ivs:

00000000 <pair_ivs>:
	...

Disassembly of section .bss.pair_work:

00000000 <pair_work>:
	...

Disassembly of section .data.pair_ltk:

00000000 <pair_ltk>:
   0:	03020100 	tnandeq	r2, #0
   4:	07060504 	tstorereq	r0, [r6, -r4, lsl #10]
   8:	0b0a0908 	tjleq	282430 <pair_update_key+0x282430>
   c:	000e0d0c 	tandeq	r0, lr, ip, lsl #26

Disassembly of section .bss.ble_pair_st:

00000000 <ble_pair_st>:
	...

Disassembly of section .data.pair_nn:

00000000 <pair_nn>:
   0:	6873656d 	tloadmdavs	r3!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
   4:	7365745f 	tcmpnvc	r5, #1593835520	; 0x5f000000
   8:	00003174 	tandeq	r3, r0, r4, ror r1
	...

Disassembly of section .bss.pair_login_ok:

00000000 <pair_login_ok>:
	...

Disassembly of section .rodata.str1.1:

00000000 <.rodata.str1.1>:
   0:	6873656d 	tloadmdavs	r3!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
   4:	706e755f 	trsubvc	r7, lr, pc, asr r5
   8:	00726961 	trsubseq	r6, r2, r1, ror #18
   c:	00333231 	txorseq	r3, r3, r1, lsr r2

Disassembly of section .bss.pair_enc_enable:

00000000 <pair_enc_enable>:
	...

Disassembly of section .bss.pair_pin:

00000000 <pair_pin>:
	...

Disassembly of section .bss.pair_sk:

00000000 <pair_sk>:
	...

Disassembly of section .data.pair_pass:

00000000 <pair_pass>:
   0:	00333231 	txorseq	r3, r3, r1, lsr r2
	...

Disassembly of section .data.pkt_read_rsp:

00000000 <pkt_read_rsp>:
   0:	0000001d 	tandeq	r0, r0, sp, lsl r0
   4:	00171b02 	tandseq	r1, r7, r2, lsl #22
   8:	000b0004 	tandeq	r0, fp, r4
	...

Disassembly of section .bss.pairRead_pending:

00000000 <pairRead_pending>:
	...

Disassembly of section .data.pair_randm:

00000000 <pair_randm>:
   0:	a3a2a1a0 	undefined instruction 0xa3a2a1a0
   4:	a7a6a5a4 	tstorerge	sl, [r6, r4, lsr #11]!

Disassembly of section .bss.st.3381:

00000000 <st.3381>:
	...

Disassembly of section .bss.security_enable:

00000000 <security_enable>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

blt_att.o:     file format elf32-littletc32
rw-rw-rw- 0/0   5948 Jan 30 00:17 2019 blt_att.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000058  2**0
                  ALLOC
  3 .text.l2cap_att_search 00000070  00000000  00000000  00000058  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.blt_set_att_table 00000010  00000000  00000000  000000c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.l2cap_att_handler 00000638  00000000  00000000  000000d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.blt_get_sdk_version 00000008  00000000  00000000  00000710  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .data.pkt_errRsp 00000010  00000000  00000000  00000718  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data.periConnParameters 00000008  00000000  00000000  00000728  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .rodata.primaryServiceUUID 00000002  00000000  00000000  00000730  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .data.appearance 00000002  00000000  00000000  00000732  2**1
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss.apple_need_quick_send_sec_req 00000001  00000000  00000000  00000734  2**0
                  ALLOC
 12 .data.ble_g_devName 0000000c  00000000  00000000  00000734  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .rodata.pkt_mtu_rsp 00000010  00000000  00000000  00000740  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 .rodata.periConnParamUUID 00000002  00000000  00000000  00000750  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .rodata.SppDataServer2ClientUUID 00000002  00000000  00000000  00000752  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .rodata.devNameUUID 00000002  00000000  00000000  00000754  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .bss.gAttributes 00000004  00000000  00000000  00000758  2**2
                  ALLOC
 18 .rodata.pkt_writeRsp 0000000c  00000000  00000000  00000758  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .rodata.appearanceUIID 00000002  00000000  00000000  00000764  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 .rodata.SppDataClient2ServiceUUID 00000002  00000000  00000000  00000766  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 21 .rodata.gapServiceUUID 00000002  00000000  00000000  00000768  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 22 .rodata.SppServiceUUID 00000002  00000000  00000000  0000076a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 23 .comment      0000001b  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY
 24 .TC32.attributes 00000010  00000000  00000000  00000787  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 blt_att.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.l2cap_att_search	00000000 .text.l2cap_att_search
00000000 l     F .text.l2cap_att_search	00000070 l2cap_att_search
00000000 l    d  .text.blt_set_att_table	00000000 .text.blt_set_att_table
00000000 l    d  .text.l2cap_att_handler	00000000 .text.l2cap_att_handler
00000000 l    d  .text.blt_get_sdk_version	00000000 .text.blt_get_sdk_version
00000000 l    d  .data.pkt_errRsp	00000000 .data.pkt_errRsp
00000000 l    d  .data.periConnParameters	00000000 .data.periConnParameters
00000000 l    d  .rodata.primaryServiceUUID	00000000 .rodata.primaryServiceUUID
00000000 l    d  .data.appearance	00000000 .data.appearance
00000000 l    d  .bss.apple_need_quick_send_sec_req	00000000 .bss.apple_need_quick_send_sec_req
00000000 l    d  .data.ble_g_devName	00000000 .data.ble_g_devName
00000000 l    d  .rodata.pkt_mtu_rsp	00000000 .rodata.pkt_mtu_rsp
00000000 l    d  .rodata.periConnParamUUID	00000000 .rodata.periConnParamUUID
00000000 l    d  .rodata.SppDataServer2ClientUUID	00000000 .rodata.SppDataServer2ClientUUID
00000000 l    d  .rodata.devNameUUID	00000000 .rodata.devNameUUID
00000000 l    d  .bss.gAttributes	00000000 .bss.gAttributes
00000000 l    d  .rodata.pkt_writeRsp	00000000 .rodata.pkt_writeRsp
00000000 l    d  .rodata.appearanceUIID	00000000 .rodata.appearanceUIID
00000000 l    d  .rodata.SppDataClient2ServiceUUID	00000000 .rodata.SppDataClient2ServiceUUID
00000000 l    d  .rodata.gapServiceUUID	00000000 .rodata.gapServiceUUID
00000000 l    d  .rodata.SppServiceUUID	00000000 .rodata.SppServiceUUID
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000         *UND*	00000000 memcmp
00000000 g     F .text.blt_set_att_table	00000010 blt_set_att_table
00000000 g     F .text.l2cap_att_handler	00000638 l2cap_att_handler
00000000         *UND*	00000000 memcpy
00000000         *UND*	00000000 att_write_cb
00000000         *UND*	00000000 att_read_cb
00000000         *UND*	00000000 att_get_reportMap
00000000         *UND*	00000000 att_get_reportMapSize
00000000         *UND*	00000000 vr_autoSetMode
00000000         *UND*	00000000 att_response_cb
00000000         *UND*	00000000 os_check
00000000 g     F .text.blt_get_sdk_version	00000008 blt_get_sdk_version
00000000 g     O .bss.apple_need_quick_send_sec_req	00000001 apple_need_quick_send_sec_req
00000000 g     O .rodata.primaryServiceUUID	00000002 primaryServiceUUID
00000000 g     O .rodata.gapServiceUUID	00000002 gapServiceUUID
00000000 g     O .rodata.devNameUUID	00000002 devNameUUID
00000000 g     O .rodata.appearanceUIID	00000002 appearanceUIID
00000000 g     O .rodata.periConnParamUUID	00000002 periConnParamUUID
00000000 g     O .data.appearance	00000002 appearance
00000000 g     O .data.periConnParameters	00000008 periConnParameters
00000000 g     O .data.ble_g_devName	00000009 ble_g_devName
00000000 g     O .rodata.SppServiceUUID	00000002 SppServiceUUID
00000000 g     O .rodata.SppDataServer2ClientUUID	00000002 SppDataServer2ClientUUID
00000000 g     O .rodata.SppDataClient2ServiceUUID	00000002 SppDataClient2ServiceUUID
00000000 g     O .bss.gAttributes	00000004 gAttributes
00000000 g     O .data.pkt_errRsp	0000000f pkt_errRsp
00000000 g     O .rodata.pkt_writeRsp	0000000b pkt_writeRsp
00000000 g     O .rodata.pkt_mtu_rsp	0000000d pkt_mtu_rsp
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN
00000000 g     O .data	00000021 rf_packet_att_rsp



Disassembly of section .data:

00000000 <rf_packet_att_rsp>:
	...

Disassembly of section .text.l2cap_att_search:

00000000 <l2cap_att_search>:
l2cap_att_search():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6082      	tsub	sp, #8
   4:	ec17      	tadds	r7, r2, #0
   6:	3301      	tstorer	r3, [sp, #4]
   8:	ec04      	tadds	r4, r0, #0
   a:	0b18      	tloadr	r3, [pc, #96]	; (6c <l2cap_att_search+0x6c>)
   c:	581e      	tloadr	r6, [r3, #0]
   e:	4833      	tloadrb	r3, [r6, #0]
  10:	a500      	tmovs	r5, #0
  12:	0298      	tcmp	r0, r3
  14:	c026      	tjeq.n	64 <l2cap_att_search+0x64>
  16:	ec0a      	tadds	r2, r1, #0
  18:	0299      	tcmp	r1, r3
  1a:	c900      	tjls.n	1e <l2cap_att_search+0x1e>
  1c:	ec1a      	tadds	r2, r3, #0
  1e:	f412      	tshftls	r2, r2, #16
  20:	fc12      	tshftrs	r2, r2, #16
  22:	3200      	tstorer	r2, [sp, #0]
  24:	801a      	tj.n	5c <l2cap_att_search+0x5c>
  26:	f0a5      	tshftls	r5, r4, #2
  28:	e92d      	tadds	r5, r5, r4
  2a:	f06d      	tshftls	r5, r5, #1
  2c:	e92d      	tadds	r5, r5, r4
  2e:	e975      	tadds	r5, r6, r5
  30:	48eb      	tloadrb	r3, [r5, #3]
  32:	4928      	tloadrb	r0, [r5, #4]
  34:	f200      	tshftls	r0, r0, #8
  36:	0318      	tors	r0, r3
  38:	496b      	tloadrb	r3, [r5, #5]
  3a:	f41b      	tshftls	r3, r3, #16
  3c:	0318      	tors	r0, r3
  3e:	49ab      	tloadrb	r3, [r5, #6]
  40:	f61b      	tshftls	r3, r3, #24
  42:	0318      	tors	r0, r3
  44:	486a      	tloadrb	r2, [r5, #1]
  46:	ec39      	tadds	r1, r7, #0
  48:	97ff 9ffe 	tjl	0 <memcmp>
			48: R_TC32_CALL	memcmp
  4c:	a800      	tcmp	r0, #0
  4e:	c102      	tjne.n	56 <l2cap_att_search+0x56>
  50:	3b01      	tloadr	r3, [sp, #4]
  52:	201c      	tstorerh	r4, [r3, #0]
  54:	8006      	tj.n	64 <l2cap_att_search+0x64>
  56:	b401      	tadds	r4, #1
  58:	f424      	tshftls	r4, r4, #16
  5a:	fc24      	tshftrs	r4, r4, #16
  5c:	3b00      	tloadr	r3, [sp, #0]
  5e:	029c      	tcmp	r4, r3
  60:	c9e1      	tjls.n	26 <l2cap_att_search+0x26>
  62:	a500      	tmovs	r5, #0
  64:	ec28      	tadds	r0, r5, #0
  66:	6002      	tadd	sp, #8
  68:	6df0      	tpop	{r4, r5, r6, r7, pc}
  6a:	46c0      	tnop			; (mov r8, r8)
  6c:	00000000 	tandeq	r0, r0, r0
			6c: R_TC32_ABS32	.bss.gAttributes

Disassembly of section .text.blt_set_att_table:

00000000 <blt_set_att_table>:
blt_set_att_table():
   0:	a800      	tcmp	r0, #0
   2:	c001      	tjeq.n	8 <blt_set_att_table+0x8>
   4:	0b01      	tloadr	r3, [pc, #4]	; (c <blt_set_att_table+0xc>)
   6:	5018      	tstorer	r0, [r3, #0]
   8:	0770      	tjex	lr
   a:	46c0      	tnop			; (mov r8, r8)
   c:	00000000 	tandeq	r0, r0, r0
			c: R_TC32_ABS32	.bss.gAttributes

Disassembly of section .text.l2cap_att_handler:

00000000 <l2cap_att_handler>:
l2cap_att_handler():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6086      	tsub	sp, #24
   4:	ec04      	tadds	r4, r0, #0
   6:	0ea2      	tloadr	r6, [pc, #648]	; (290 <l2cap_att_handler+0x290>)
   8:	a300      	tmovs	r3, #0
   a:	4033      	tstorerb	r3, [r6, #0]
   c:	4073      	tstorerb	r3, [r6, #1]
   e:	40b3      	tstorerb	r3, [r6, #2]
  10:	40f3      	tstorerb	r3, [r6, #3]
  12:	0aa0      	tloadr	r2, [pc, #640]	; (294 <l2cap_att_handler+0x294>)
  14:	4393      	tstorerb	r3, [r2, #14]
  16:	4ac3      	tloadrb	r3, [r0, #11]
  18:	4b05      	tloadrb	r5, [r0, #12]
  1a:	f22d      	tshftls	r5, r5, #8
  1c:	031d      	tors	r5, r3
  1e:	066b      	tmov	r3, sp
  20:	b316      	tadds	r3, #22
  22:	201d      	tstorerh	r5, [r3, #0]
  24:	2195      	tstorerh	r5, [r2, #12]
  26:	0b9c      	tloadr	r3, [pc, #624]	; (298 <l2cap_att_handler+0x298>)
  28:	581b      	tloadr	r3, [r3, #0]
  2a:	3302      	tstorer	r3, [sp, #8]
  2c:	4818      	tloadrb	r0, [r3, #0]
  2e:	4b62      	tloadrb	r2, [r4, #13]
  30:	4ba3      	tloadrb	r3, [r4, #14]
  32:	f21b      	tshftls	r3, r3, #8
  34:	0313      	tors	r3, r2
  36:	ec02      	tadds	r2, r0, #0
  38:	0298      	tcmp	r0, r3
  3a:	c900      	tjls.n	3e <l2cap_att_handler+0x3e>
  3c:	ec1a      	tadds	r2, r3, #0
  3e:	f412      	tshftls	r2, r2, #16
  40:	fc12      	tshftrs	r2, r2, #16
  42:	3203      	tstorer	r2, [sp, #12]
  44:	49a1      	tloadrb	r1, [r4, #6]
  46:	49e2      	tloadrb	r2, [r4, #7]
  48:	f212      	tshftls	r2, r2, #8
  4a:	030a      	tors	r2, r1
  4c:	a102      	tmovs	r1, #2
  4e:	aa11      	tcmp	r2, #17
  50:	c900      	tjls.n	54 <l2cap_att_handler+0x54>
  52:	a110      	tmovs	r1, #16
  54:	a20f      	tmovs	r2, #15
  56:	e912      	tadds	r2, r2, r4
  58:	3204      	tstorer	r2, [sp, #16]
  5a:	4aa2      	tloadrb	r2, [r4, #10]
  5c:	aa0a      	tcmp	r2, #10
  5e:	c100      	tjne.n	62 <l2cap_att_handler+0x62>
  60:	8245      	tj.n	4ee <l2cap_att_handler+0x4ee>
  62:	aa0a      	tcmp	r2, #10
  64:	c80e      	tjhi.n	84 <l2cap_att_handler+0x84>
  66:	aa04      	tcmp	r2, #4
  68:	c100      	tjne.n	6c <l2cap_att_handler+0x6c>
  6a:	81b4      	tj.n	3d6 <l2cap_att_handler+0x3d6>
  6c:	aa04      	tcmp	r2, #4
  6e:	c803      	tjhi.n	78 <l2cap_att_handler+0x78>
  70:	aa02      	tcmp	r2, #2
  72:	c000      	tjeq.n	76 <l2cap_att_handler+0x76>
  74:	82ab      	tj.n	5ce <l2cap_att_handler+0x5ce>
  76:	8293      	tj.n	5a0 <l2cap_att_handler+0x5a0>
  78:	aa06      	tcmp	r2, #6
  7a:	c07a      	tjeq.n	172 <l2cap_att_handler+0x172>
  7c:	aa08      	tcmp	r2, #8
  7e:	c000      	tjeq.n	82 <l2cap_att_handler+0x82>
  80:	82a5      	tj.n	5ce <l2cap_att_handler+0x5ce>
  82:	80f4      	tj.n	26e <l2cap_att_handler+0x26e>
  84:	aa10      	tcmp	r2, #16
  86:	c00c      	tjeq.n	a2 <l2cap_att_handler+0xa2>
  88:	aa10      	tcmp	r2, #16
  8a:	c803      	tjhi.n	94 <l2cap_att_handler+0x94>
  8c:	aa0c      	tcmp	r2, #12
  8e:	c000      	tjeq.n	92 <l2cap_att_handler+0x92>
  90:	829d      	tj.n	5ce <l2cap_att_handler+0x5ce>
  92:	822c      	tj.n	4ee <l2cap_att_handler+0x4ee>
  94:	aa12      	tcmp	r2, #18
  96:	c100      	tjne.n	9a <l2cap_att_handler+0x9a>
  98:	81ee      	tj.n	478 <l2cap_att_handler+0x478>
  9a:	aa52      	tcmp	r2, #82	; 0x52
  9c:	c000      	tjeq.n	a0 <l2cap_att_handler+0xa0>
  9e:	8296      	tj.n	5ce <l2cap_att_handler+0x5ce>
  a0:	81ea      	tj.n	478 <l2cap_att_handler+0x478>
  a2:	02ab      	tcmp	r3, r5
  a4:	019b      	tsubcs	r3, r3
  a6:	025b      	tnegs	r3, r3
  a8:	0a7a      	tloadr	r2, [pc, #488]	; (294 <l2cap_att_handler+0x294>)
  aa:	4393      	tstorerb	r3, [r2, #14]
  ac:	a300      	tmovs	r3, #0
  ae:	3301      	tstorer	r3, [sp, #4]
  b0:	a700      	tmovs	r7, #0
  b2:	ec25      	tadds	r5, r4, #0
  b4:	803b      	tj.n	12e <l2cap_att_handler+0x12e>
  b6:	3801      	tloadr	r0, [sp, #4]
  b8:	a800      	tcmp	r0, #0
  ba:	c002      	tjeq.n	c2 <l2cap_att_handler+0xc2>
  bc:	48a3      	tloadrb	r3, [r4, #2]
  be:	0283      	tcmp	r3, r0
  c0:	c145      	tjne.n	14e <l2cap_att_handler+0x14e>
  c2:	48a1      	tloadrb	r1, [r4, #2]
  c4:	3102      	tstorer	r1, [sp, #8]
  c6:	e87b      	tadds	r3, r7, r1
  c8:	ab13      	tcmp	r3, #19
  ca:	cc40      	tjgt.n	14e <l2cap_att_handler+0x14e>
  cc:	066a      	tmov	r2, sp
  ce:	2ad2      	tloadrh	r2, [r2, #22]
  d0:	3201      	tstorer	r2, [sp, #4]
  d2:	066b      	tmov	r3, sp
  d4:	ed18      	tadds	r0, r3, #4
  d6:	2800      	tloadrh	r0, [r0, #0]
  d8:	0b70      	tloadr	r3, [pc, #448]	; (29c <l2cap_att_handler+0x29c>)
  da:	13d8      	tstorerh	r0, [r3, r7]
  dc:	b702      	tadds	r7, #2
  de:	f63f      	tshftls	r7, r7, #24
  e0:	fe3f      	tshftrs	r7, r7, #24
  e2:	ba01      	tsubs	r2, #1
  e4:	4823      	tloadrb	r3, [r4, #0]
  e6:	e8d3      	tadds	r3, r2, r3
  e8:	096c      	tloadr	r1, [pc, #432]	; (29c <l2cap_att_handler+0x29c>)
  ea:	13cb      	tstorerh	r3, [r1, r7]
  ec:	b702      	tadds	r7, #2
  ee:	f63f      	tshftls	r7, r7, #24
  f0:	fe3f      	tshftrs	r7, r7, #24
  f2:	e9c8      	tadds	r0, r1, r7
  f4:	48a2      	tloadrb	r2, [r4, #2]
  f6:	49e3      	tloadrb	r3, [r4, #7]
  f8:	4a21      	tloadrb	r1, [r4, #8]
  fa:	f209      	tshftls	r1, r1, #8
  fc:	0319      	tors	r1, r3
  fe:	4a63      	tloadrb	r3, [r4, #9]
 100:	f41b      	tshftls	r3, r3, #16
 102:	0319      	tors	r1, r3
 104:	4aa3      	tloadrb	r3, [r4, #10]
 106:	f61b      	tshftls	r3, r3, #24
 108:	0319      	tors	r1, r3
 10a:	97ff 9ffe 	tjl	0 <memcpy>
			10a: R_TC32_CALL	memcpy
 10e:	48a3      	tloadrb	r3, [r4, #2]
 110:	e8ff      	tadds	r7, r7, r3
 112:	f63f      	tshftls	r7, r7, #24
 114:	fe3f      	tshftrs	r7, r7, #24
 116:	4823      	tloadrb	r3, [r4, #0]
 118:	3a01      	tloadr	r2, [sp, #4]
 11a:	e89b      	tadds	r3, r3, r2
 11c:	f41b      	tshftls	r3, r3, #16
 11e:	fc1b      	tshftrs	r3, r3, #16
 120:	0668      	tmov	r0, sp
 122:	22c3      	tstorerh	r3, [r0, #22]
 124:	3903      	tloadr	r1, [sp, #12]
 126:	028b      	tcmp	r3, r1
 128:	c80d      	tjhi.n	146 <l2cap_att_handler+0x146>
 12a:	3a02      	tloadr	r2, [sp, #8]
 12c:	3201      	tstorer	r2, [sp, #4]
 12e:	066b      	tmov	r3, sp
 130:	2ad8      	tloadrh	r0, [r3, #22]
 132:	3903      	tloadr	r1, [sp, #12]
 134:	0288      	tcmp	r0, r1
 136:	c80a      	tjhi.n	14e <l2cap_att_handler+0x14e>
 138:	3a04      	tloadr	r2, [sp, #16]
 13a:	b316      	tadds	r3, #22
 13c:	97ff 9ffe 	tjl	0 <l2cap_att_handler>
			13c: R_TC32_CALL	l2cap_att_search
 140:	ee04      	tsubs	r4, r0, #0
 142:	c1b8      	tjne.n	b6 <l2cap_att_handler+0xb6>
 144:	8003      	tj.n	14e <l2cap_att_handler+0x14e>
 146:	ec2c      	tadds	r4, r5, #0
 148:	3a02      	tloadr	r2, [sp, #8]
 14a:	3201      	tstorer	r2, [sp, #4]
 14c:	8000      	tj.n	150 <l2cap_att_handler+0x150>
 14e:	ec2c      	tadds	r4, r5, #0
 150:	af00      	tcmp	r7, #0
 152:	c100      	tjne.n	156 <l2cap_att_handler+0x156>
 154:	8084      	tj.n	260 <l2cap_att_handler+0x260>
 156:	b708      	tadds	r7, #8
 158:	0b4d      	tloadr	r3, [pc, #308]	; (290 <l2cap_att_handler+0x290>)
 15a:	401f      	tstorerb	r7, [r3, #0]
 15c:	fa3b      	tshftrs	r3, r7, #8
 15e:	084c      	tloadr	r0, [pc, #304]	; (290 <l2cap_att_handler+0x290>)
 160:	4043      	tstorerb	r3, [r0, #1]
 162:	fc3b      	tshftrs	r3, r7, #16
 164:	4083      	tstorerb	r3, [r0, #2]
 166:	fe3f      	tshftrs	r7, r7, #24
 168:	40c7      	tstorerb	r7, [r0, #3]
 16a:	3b01      	tloadr	r3, [sp, #4]
 16c:	b304      	tadds	r3, #4
 16e:	42c3      	tstorerb	r3, [r0, #11]
 170:	8230      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 172:	0f47      	tloadr	r7, [pc, #284]	; (290 <l2cap_att_handler+0x290>)
 174:	02ab      	tcmp	r3, r5
 176:	019b      	tsubcs	r3, r3
 178:	025b      	tnegs	r3, r3
 17a:	0a46      	tloadr	r2, [pc, #280]	; (294 <l2cap_att_handler+0x294>)
 17c:	4393      	tstorerb	r3, [r2, #14]
 17e:	a100      	tmovs	r1, #0
 180:	3101      	tstorer	r1, [sp, #4]
 182:	a211      	tmovs	r2, #17
 184:	e912      	tadds	r2, r2, r4
 186:	3202      	tstorer	r2, [sp, #8]
 188:	ec25      	tadds	r5, r4, #0
 18a:	804f      	tj.n	22c <l2cap_att_handler+0x22c>
 18c:	3b01      	tloadr	r3, [sp, #4]
 18e:	ab12      	tcmp	r3, #18
 190:	cc59      	tjgt.n	246 <l2cap_att_handler+0x246>
 192:	48a2      	tloadrb	r2, [r4, #2]
 194:	49ab      	tloadrb	r3, [r5, #6]
 196:	49e9      	tloadrb	r1, [r5, #7]
 198:	f209      	tshftls	r1, r1, #8
 19a:	030b      	tors	r3, r1
 19c:	bb07      	tsubs	r3, #7
 19e:	029a      	tcmp	r2, r3
 1a0:	c13f      	tjne.n	222 <l2cap_att_handler+0x222>
 1a2:	49e3      	tloadrb	r3, [r4, #7]
 1a4:	4a21      	tloadrb	r1, [r4, #8]
 1a6:	f209      	tshftls	r1, r1, #8
 1a8:	0319      	tors	r1, r3
 1aa:	4a63      	tloadrb	r3, [r4, #9]
 1ac:	f41b      	tshftls	r3, r3, #16
 1ae:	0319      	tors	r1, r3
 1b0:	4aa3      	tloadrb	r3, [r4, #10]
 1b2:	f61b      	tshftls	r3, r3, #24
 1b4:	0319      	tors	r1, r3
 1b6:	3802      	tloadr	r0, [sp, #8]
 1b8:	97ff 9ffe 	tjl	0 <memcmp>
			1b8: R_TC32_CALL	memcmp
 1bc:	a800      	tcmp	r0, #0
 1be:	c130      	tjne.n	222 <l2cap_att_handler+0x222>
 1c0:	0668      	tmov	r0, sp
 1c2:	2ac3      	tloadrh	r3, [r0, #22]
 1c4:	f619      	tshftls	r1, r3, #24
 1c6:	fe09      	tshftrs	r1, r1, #24
 1c8:	3100      	tstorer	r1, [sp, #0]
 1ca:	3901      	tloadr	r1, [sp, #4]
 1cc:	e87a      	tadds	r2, r7, r1
 1ce:	4800      	tloadrb	r0, [r0, #0]
 1d0:	42d0      	tstorerb	r0, [r2, #11]
 1d2:	ec0a      	tadds	r2, r1, #0
 1d4:	b201      	tadds	r2, #1
 1d6:	f412      	tshftls	r2, r2, #16
 1d8:	fc12      	tshftrs	r2, r2, #16
 1da:	e8b9      	tadds	r1, r7, r2
 1dc:	fa18      	tshftrs	r0, r3, #8
 1de:	42c8      	tstorerb	r0, [r1, #11]
 1e0:	b201      	tadds	r2, #1
 1e2:	f412      	tshftls	r2, r2, #16
 1e4:	fc12      	tshftrs	r2, r2, #16
 1e6:	e8b9      	tadds	r1, r7, r2
 1e8:	3101      	tstorer	r1, [sp, #4]
 1ea:	4820      	tloadrb	r0, [r4, #0]
 1ec:	0684      	tmov	ip, r0
 1ee:	a101      	tmovs	r1, #1
 1f0:	0249      	tnegs	r1, r1
 1f2:	048c      	tadd	ip, r1
 1f4:	3800      	tloadr	r0, [sp, #0]
 1f6:	ec01      	tadds	r1, r0, #0
 1f8:	0461      	tadd	r1, ip
 1fa:	3801      	tloadr	r0, [sp, #4]
 1fc:	42c1      	tstorerb	r1, [r0, #11]
 1fe:	b201      	tadds	r2, #1
 200:	f412      	tshftls	r2, r2, #16
 202:	fc12      	tshftrs	r2, r2, #16
 204:	e8b9      	tadds	r1, r7, r2
 206:	4820      	tloadrb	r0, [r4, #0]
 208:	e818      	tadds	r0, r3, r0
 20a:	b801      	tsubs	r0, #1
 20c:	e200      	tasrs	r0, r0, #8
 20e:	42c8      	tstorerb	r0, [r1, #11]
 210:	b201      	tadds	r2, #1
 212:	f412      	tshftls	r2, r2, #16
 214:	fc12      	tshftrs	r2, r2, #16
 216:	3201      	tstorer	r2, [sp, #4]
 218:	4822      	tloadrb	r2, [r4, #0]
 21a:	e89b      	tadds	r3, r3, r2
 21c:	0669      	tmov	r1, sp
 21e:	22cb      	tstorerh	r3, [r1, #22]
 220:	8004      	tj.n	22c <l2cap_att_handler+0x22c>
 222:	066a      	tmov	r2, sp
 224:	2ad3      	tloadrh	r3, [r2, #22]
 226:	b301      	tadds	r3, #1
 228:	0668      	tmov	r0, sp
 22a:	22c3      	tstorerh	r3, [r0, #22]
 22c:	0669      	tmov	r1, sp
 22e:	2ac8      	tloadrh	r0, [r1, #22]
 230:	3a03      	tloadr	r2, [sp, #12]
 232:	0290      	tcmp	r0, r2
 234:	c807      	tjhi.n	246 <l2cap_att_handler+0x246>
 236:	ec11      	tadds	r1, r2, #0
 238:	3a04      	tloadr	r2, [sp, #16]
 23a:	066b      	tmov	r3, sp
 23c:	b316      	tadds	r3, #22
 23e:	97ff 9ffe 	tjl	0 <l2cap_att_handler>
			23e: R_TC32_CALL	l2cap_att_search
 242:	ee04      	tsubs	r4, r0, #0
 244:	c1a2      	tjne.n	18c <l2cap_att_handler+0x18c>
 246:	ec2c      	tadds	r4, r5, #0
 248:	3b01      	tloadr	r3, [sp, #4]
 24a:	ab00      	tcmp	r3, #0
 24c:	c008      	tjeq.n	260 <l2cap_att_handler+0x260>
 24e:	b307      	tadds	r3, #7
 250:	403b      	tstorerb	r3, [r7, #0]
 252:	fa1a      	tshftrs	r2, r3, #8
 254:	407a      	tstorerb	r2, [r7, #1]
 256:	fc1a      	tshftrs	r2, r3, #16
 258:	40ba      	tstorerb	r2, [r7, #2]
 25a:	fe1b      	tshftrs	r3, r3, #24
 25c:	40fb      	tstorerb	r3, [r7, #3]
 25e:	81b9      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 260:	0b0c      	tloadr	r3, [pc, #48]	; (294 <l2cap_att_handler+0x294>)
 262:	4b9a      	tloadrb	r2, [r3, #14]
 264:	aa00      	tcmp	r2, #0
 266:	c000      	tjeq.n	26a <l2cap_att_handler+0x26a>
 268:	81b4      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 26a:	a20a      	tmovs	r2, #10
 26c:	8196      	tj.n	59c <l2cap_att_handler+0x59c>
 26e:	0f08      	tloadr	r7, [pc, #32]	; (290 <l2cap_att_handler+0x290>)
 270:	02ab      	tcmp	r3, r5
 272:	019b      	tsubcs	r3, r3
 274:	025b      	tnegs	r3, r3
 276:	0a07      	tloadr	r2, [pc, #28]	; (294 <l2cap_att_handler+0x294>)
 278:	4393      	tstorerb	r3, [r2, #14]
 27a:	a902      	tcmp	r1, #2
 27c:	c178      	tjne.n	370 <l2cap_att_handler+0x370>
 27e:	4be3      	tloadrb	r3, [r4, #15]
 280:	ab03      	tcmp	r3, #3
 282:	c175      	tjne.n	370 <l2cap_att_handler+0x370>
 284:	4c23      	tloadrb	r3, [r4, #16]
 286:	ab28      	tcmp	r3, #40	; 0x28
 288:	c172      	tjne.n	370 <l2cap_att_handler+0x370>
 28a:	a500      	tmovs	r5, #0
 28c:	3501      	tstorer	r5, [sp, #4]
 28e:	8060      	tj.n	352 <l2cap_att_handler+0x352>
	...
			290: R_TC32_ABS32	.data
			294: R_TC32_ABS32	.data.pkt_errRsp
			298: R_TC32_ABS32	.bss.gAttributes
 29c:	0000000c 	tandeq	r0, r0, ip
			29c: R_TC32_ABS32	.data
 2a0:	3901      	tloadr	r1, [sp, #4]
 2a2:	a900      	tcmp	r1, #0
 2a4:	c002      	tjeq.n	2ac <l2cap_att_handler+0x2ac>
 2a6:	4843      	tloadrb	r3, [r0, #1]
 2a8:	028b      	tcmp	r3, r1
 2aa:	c15d      	tjne.n	368 <l2cap_att_handler+0x368>
 2ac:	4843      	tloadrb	r3, [r0, #1]
 2ae:	e8eb      	tadds	r3, r5, r3
 2b0:	ab12      	tcmp	r3, #18
 2b2:	cc59      	tjgt.n	368 <l2cap_att_handler+0x368>
 2b4:	066a      	tmov	r2, sp
 2b6:	2ad3      	tloadrh	r3, [r2, #22]
 2b8:	e97a      	tadds	r2, r7, r5
 2ba:	4313      	tstorerb	r3, [r2, #12]
 2bc:	ec69      	tadds	r1, r5, #1
 2be:	f409      	tshftls	r1, r1, #16
 2c0:	fc09      	tshftrs	r1, r1, #16
 2c2:	e87a      	tadds	r2, r7, r1
 2c4:	fa1d      	tshftrs	r5, r3, #8
 2c6:	4315      	tstorerb	r5, [r2, #12]
 2c8:	b101      	tadds	r1, #1
 2ca:	f409      	tshftls	r1, r1, #16
 2cc:	fc09      	tshftrs	r1, r1, #16
 2ce:	b301      	tadds	r3, #1
 2d0:	f41b      	tshftls	r3, r3, #16
 2d2:	3300      	tstorer	r3, [sp, #0]
 2d4:	fc1a      	tshftrs	r2, r3, #16
 2d6:	066b      	tmov	r3, sp
 2d8:	22da      	tstorerh	r2, [r3, #22]
 2da:	e87d      	tadds	r5, r7, r1
 2dc:	3501      	tstorer	r5, [sp, #4]
 2de:	49c3      	tloadrb	r3, [r0, #7]
 2e0:	4a05      	tloadrb	r5, [r0, #8]
 2e2:	f22d      	tshftls	r5, r5, #8
 2e4:	032b      	tors	r3, r5
 2e6:	3302      	tstorer	r3, [sp, #8]
 2e8:	4a43      	tloadrb	r3, [r0, #9]
 2ea:	f41b      	tshftls	r3, r3, #16
 2ec:	3d02      	tloadr	r5, [sp, #8]
 2ee:	031d      	tors	r5, r3
 2f0:	4a83      	tloadrb	r3, [r0, #10]
 2f2:	f61b      	tshftls	r3, r3, #24
 2f4:	031d      	tors	r5, r3
 2f6:	482d      	tloadrb	r5, [r5, #0]
 2f8:	3b01      	tloadr	r3, [sp, #4]
 2fa:	431d      	tstorerb	r5, [r3, #12]
 2fc:	b101      	tadds	r1, #1
 2fe:	f409      	tshftls	r1, r1, #16
 300:	fc09      	tshftrs	r1, r1, #16
 302:	ec05      	tadds	r5, r0, #0
 304:	b50b      	tadds	r5, #11
 306:	e878      	tadds	r0, r7, r1
 308:	4302      	tstorerb	r2, [r0, #12]
 30a:	b101      	tadds	r1, #1
 30c:	f409      	tshftls	r1, r1, #16
 30e:	fc09      	tshftrs	r1, r1, #16
 310:	e87a      	tadds	r2, r7, r1
 312:	3800      	tloadr	r0, [sp, #0]
 314:	fe03      	tshftrs	r3, r0, #24
 316:	4313      	tstorerb	r3, [r2, #12]
 318:	b101      	tadds	r1, #1
 31a:	f409      	tshftls	r1, r1, #16
 31c:	fc09      	tshftrs	r1, r1, #16
 31e:	3102      	tstorer	r1, [sp, #8]
 320:	09bf      	tloadr	r1, [pc, #764]	; (620 <l2cap_att_handler+0x620>)
 322:	ec08      	tadds	r0, r1, #0
 324:	3902      	tloadr	r1, [sp, #8]
 326:	e840      	tadds	r0, r0, r1
 328:	486a      	tloadrb	r2, [r5, #1]
 32a:	48eb      	tloadrb	r3, [r5, #3]
 32c:	4929      	tloadrb	r1, [r5, #4]
 32e:	f209      	tshftls	r1, r1, #8
 330:	0319      	tors	r1, r3
 332:	496b      	tloadrb	r3, [r5, #5]
 334:	f41b      	tshftls	r3, r3, #16
 336:	0319      	tors	r1, r3
 338:	49ab      	tloadrb	r3, [r5, #6]
 33a:	f61b      	tshftls	r3, r3, #24
 33c:	0319      	tors	r1, r3
 33e:	97ff 9ffe 	tjl	0 <memcpy>
			33e: R_TC32_CALL	memcpy
 342:	486d      	tloadrb	r5, [r5, #1]
 344:	3501      	tstorer	r5, [sp, #4]
 346:	3a02      	tloadr	r2, [sp, #8]
 348:	ec15      	tadds	r5, r2, #0
 34a:	3a01      	tloadr	r2, [sp, #4]
 34c:	e8ad      	tadds	r5, r5, r2
 34e:	f42d      	tshftls	r5, r5, #16
 350:	fc2d      	tshftrs	r5, r5, #16
 352:	066b      	tmov	r3, sp
 354:	2ad8      	tloadrh	r0, [r3, #22]
 356:	3903      	tloadr	r1, [sp, #12]
 358:	0288      	tcmp	r0, r1
 35a:	c805      	tjhi.n	368 <l2cap_att_handler+0x368>
 35c:	3a04      	tloadr	r2, [sp, #16]
 35e:	b316      	tadds	r3, #22
 360:	97ff 9ffe 	tjl	0 <l2cap_att_handler>
			360: R_TC32_CALL	l2cap_att_search
 364:	a800      	tcmp	r0, #0
 366:	c19b      	tjne.n	2a0 <l2cap_att_handler+0x2a0>
 368:	3b01      	tloadr	r3, [sp, #4]
 36a:	b305      	tadds	r3, #5
 36c:	42fb      	tstorerb	r3, [r7, #11]
 36e:	8027      	tj.n	3c0 <l2cap_att_handler+0x3c0>
 370:	ec28      	tadds	r0, r5, #0
 372:	3903      	tloadr	r1, [sp, #12]
 374:	3a04      	tloadr	r2, [sp, #16]
 376:	066b      	tmov	r3, sp
 378:	b316      	tadds	r3, #22
 37a:	97ff 9ffe 	tjl	0 <l2cap_att_handler>
			37a: R_TC32_CALL	l2cap_att_search
 37e:	ec03      	tadds	r3, r0, #0
 380:	a500      	tmovs	r5, #0
 382:	a800      	tcmp	r0, #0
 384:	c01b      	tjeq.n	3be <l2cap_att_handler+0x3be>
 386:	066d      	tmov	r5, sp
 388:	2aea      	tloadrh	r2, [r5, #22]
 38a:	433a      	tstorerb	r2, [r7, #12]
 38c:	fa12      	tshftrs	r2, r2, #8
 38e:	437a      	tstorerb	r2, [r7, #13]
 390:	4882      	tloadrb	r2, [r0, #2]
 392:	ec15      	tadds	r5, r2, #0
 394:	aa13      	tcmp	r2, #19
 396:	c900      	tjls.n	39a <l2cap_att_handler+0x39a>
 398:	a513      	tmovs	r5, #19
 39a:	f62d      	tshftls	r5, r5, #24
 39c:	fe2d      	tshftrs	r5, r5, #24
 39e:	ec38      	tadds	r0, r7, #0
 3a0:	b00e      	tadds	r0, #14
 3a2:	49da      	tloadrb	r2, [r3, #7]
 3a4:	4a19      	tloadrb	r1, [r3, #8]
 3a6:	f209      	tshftls	r1, r1, #8
 3a8:	0311      	tors	r1, r2
 3aa:	4a5a      	tloadrb	r2, [r3, #9]
 3ac:	f412      	tshftls	r2, r2, #16
 3ae:	0311      	tors	r1, r2
 3b0:	4a9b      	tloadrb	r3, [r3, #10]
 3b2:	f61b      	tshftls	r3, r3, #24
 3b4:	0319      	tors	r1, r3
 3b6:	ec2a      	tadds	r2, r5, #0
 3b8:	97ff 9ffe 	tjl	0 <memcpy>
			3b8: R_TC32_CALL	memcpy
 3bc:	b502      	tadds	r5, #2
 3be:	42fd      	tstorerb	r5, [r7, #11]
 3c0:	ad00      	tcmp	r5, #0
 3c2:	c057      	tjeq.n	474 <l2cap_att_handler+0x474>
 3c4:	b508      	tadds	r5, #8
 3c6:	403d      	tstorerb	r5, [r7, #0]
 3c8:	fa2b      	tshftrs	r3, r5, #8
 3ca:	407b      	tstorerb	r3, [r7, #1]
 3cc:	fc2b      	tshftrs	r3, r5, #16
 3ce:	40bb      	tstorerb	r3, [r7, #2]
 3d0:	fe2d      	tshftrs	r5, r5, #24
 3d2:	40fd      	tstorerb	r5, [r7, #3]
 3d4:	80fe      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 3d6:	0f93      	tloadr	r7, [pc, #588]	; (624 <l2cap_att_handler+0x624>)
 3d8:	02ab      	tcmp	r3, r5
 3da:	019b      	tsubcs	r3, r3
 3dc:	025b      	tnegs	r3, r3
 3de:	0a92      	tloadr	r2, [pc, #584]	; (628 <l2cap_att_handler+0x628>)
 3e0:	4393      	tstorerb	r3, [r2, #14]
 3e2:	a000      	tmovs	r0, #0
 3e4:	3001      	tstorer	r0, [sp, #4]
 3e6:	a001      	tmovs	r0, #1
 3e8:	a300      	tmovs	r3, #0
 3ea:	ec25      	tadds	r5, r4, #0
 3ec:	8030      	tj.n	450 <l2cap_att_handler+0x450>
 3ee:	f094      	tshftls	r4, r2, #2
 3f0:	e8a4      	tadds	r4, r4, r2
 3f2:	f064      	tshftls	r4, r4, #1
 3f4:	e8a4      	tadds	r4, r4, r2
 3f6:	3902      	tloadr	r1, [sp, #8]
 3f8:	e864      	tadds	r4, r4, r1
 3fa:	3901      	tloadr	r1, [sp, #4]
 3fc:	a900      	tcmp	r1, #0
 3fe:	c101      	tjne.n	404 <l2cap_att_handler+0x404>
 400:	4861      	tloadrb	r1, [r4, #1]
 402:	3101      	tstorer	r1, [sp, #4]
 404:	4861      	tloadrb	r1, [r4, #1]
 406:	068c      	tmov	ip, r1
 408:	3901      	tloadr	r1, [sp, #4]
 40a:	058c      	tcmp	ip, r1
 40c:	c125      	tjne.n	45a <l2cap_att_handler+0x45a>
 40e:	e8c9      	tadds	r1, r1, r3
 410:	068c      	tmov	ip, r1
 412:	a117      	tmovs	r1, #23
 414:	058c      	tcmp	ip, r1
 416:	cc20      	tjgt.n	45a <l2cap_att_handler+0x45a>
 418:	0881      	tloadr	r0, [pc, #516]	; (620 <l2cap_att_handler+0x620>)
 41a:	12c2      	tstorerh	r2, [r0, r3]
 41c:	b201      	tadds	r2, #1
 41e:	0669      	tmov	r1, sp
 420:	22ca      	tstorerh	r2, [r1, #22]
 422:	b302      	tadds	r3, #2
 424:	3304      	tstorer	r3, [sp, #16]
 426:	e8c0      	tadds	r0, r0, r3
 428:	4862      	tloadrb	r2, [r4, #1]
 42a:	48e3      	tloadrb	r3, [r4, #3]
 42c:	4921      	tloadrb	r1, [r4, #4]
 42e:	f209      	tshftls	r1, r1, #8
 430:	0319      	tors	r1, r3
 432:	4963      	tloadrb	r3, [r4, #5]
 434:	f41b      	tshftls	r3, r3, #16
 436:	0319      	tors	r1, r3
 438:	49a3      	tloadrb	r3, [r4, #6]
 43a:	f61b      	tshftls	r3, r3, #24
 43c:	0319      	tors	r1, r3
 43e:	97ff 9ffe 	tjl	0 <memcpy>
			43e: R_TC32_CALL	memcpy
 442:	4860      	tloadrb	r0, [r4, #1]
 444:	3904      	tloadr	r1, [sp, #16]
 446:	e80b      	tadds	r3, r1, r0
 448:	b802      	tsubs	r0, #2
 44a:	ee42      	tsubs	r2, r0, #1
 44c:	0190      	tsubcs	r0, r2
 44e:	b001      	tadds	r0, #1
 450:	0669      	tmov	r1, sp
 452:	2aca      	tloadrh	r2, [r1, #22]
 454:	3903      	tloadr	r1, [sp, #12]
 456:	028a      	tcmp	r2, r1
 458:	c9c9      	tjls.n	3ee <l2cap_att_handler+0x3ee>
 45a:	ec2c      	tadds	r4, r5, #0
 45c:	ab00      	tcmp	r3, #0
 45e:	c009      	tjeq.n	474 <l2cap_att_handler+0x474>
 460:	b308      	tadds	r3, #8
 462:	403b      	tstorerb	r3, [r7, #0]
 464:	fa1a      	tshftrs	r2, r3, #8
 466:	407a      	tstorerb	r2, [r7, #1]
 468:	fc1a      	tshftrs	r2, r3, #16
 46a:	40ba      	tstorerb	r2, [r7, #2]
 46c:	fe1b      	tshftrs	r3, r3, #24
 46e:	40fb      	tstorerb	r3, [r7, #3]
 470:	42f8      	tstorerb	r0, [r7, #11]
 472:	80af      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 474:	a20a      	tmovs	r2, #10
 476:	8090      	tj.n	59a <l2cap_att_handler+0x59a>
 478:	0285      	tcmp	r5, r0
 47a:	c835      	tjhi.n	4e8 <l2cap_att_handler+0x4e8>
 47c:	f0ab      	tshftls	r3, r5, #2
 47e:	e95b      	tadds	r3, r3, r5
 480:	f05b      	tshftls	r3, r3, #1
 482:	e95d      	tadds	r5, r3, r5
 484:	3b02      	tloadr	r3, [sp, #8]
 486:	e8ed      	tadds	r5, r5, r3
 488:	49a7      	tloadrb	r7, [r4, #6]
 48a:	f63f      	tshftls	r7, r7, #24
 48c:	a0fd      	tmovs	r0, #253	; 0xfd
 48e:	f600      	tshftls	r0, r0, #24
 490:	e83f      	tadds	r7, r7, r0
 492:	fe3f      	tshftrs	r7, r7, #24
 494:	aa12      	tcmp	r2, #18
 496:	c10d      	tjne.n	4b4 <l2cap_att_handler+0x4b4>
 498:	48ab      	tloadrb	r3, [r5, #2]
 49a:	02bb      	tcmp	r3, r7
 49c:	c307      	tjcc.n	4ae <l2cap_att_handler+0x4ae>
 49e:	0b61      	tloadr	r3, [pc, #388]	; (624 <l2cap_att_handler+0x624>)
 4a0:	a200      	tmovs	r2, #0
 4a2:	a107      	tmovs	r1, #7
 4a4:	4019      	tstorerb	r1, [r3, #0]
 4a6:	405a      	tstorerb	r2, [r3, #1]
 4a8:	409a      	tstorerb	r2, [r3, #2]
 4aa:	40da      	tstorerb	r2, [r3, #3]
 4ac:	8002      	tj.n	4b4 <l2cap_att_handler+0x4b4>
 4ae:	a20d      	tmovs	r2, #13
 4b0:	0b5d      	tloadr	r3, [pc, #372]	; (628 <l2cap_att_handler+0x628>)
 4b2:	439a      	tstorerb	r2, [r3, #14]
 4b4:	ec20      	tadds	r0, r4, #0
 4b6:	97ff 9ffe 	tjl	0 <att_write_cb>
			4b6: R_TC32_CALL	att_write_cb
 4ba:	a800      	tcmp	r0, #0
 4bc:	c000      	tjeq.n	4c0 <l2cap_att_handler+0x4c0>
 4be:	8089      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 4c0:	48ab      	tloadrb	r3, [r5, #2]
 4c2:	02bb      	tcmp	r3, r7
 4c4:	c200      	tjcs.n	4c8 <l2cap_att_handler+0x4c8>
 4c6:	8085      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 4c8:	49eb      	tloadrb	r3, [r5, #7]
 4ca:	4a28      	tloadrb	r0, [r5, #8]
 4cc:	f200      	tshftls	r0, r0, #8
 4ce:	0318      	tors	r0, r3
 4d0:	4a6b      	tloadrb	r3, [r5, #9]
 4d2:	f41b      	tshftls	r3, r3, #16
 4d4:	0318      	tors	r0, r3
 4d6:	4aab      	tloadrb	r3, [r5, #10]
 4d8:	f61b      	tshftls	r3, r3, #24
 4da:	0318      	tors	r0, r3
 4dc:	ec21      	tadds	r1, r4, #0
 4de:	b10d      	tadds	r1, #13
 4e0:	ec3a      	tadds	r2, r7, #0
 4e2:	97ff 9ffe 	tjl	0 <memcpy>
			4e2: R_TC32_CALL	memcpy
 4e6:	8075      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 4e8:	aa12      	tcmp	r2, #18
 4ea:	c173      	tjne.n	5d4 <l2cap_att_handler+0x5d4>
 4ec:	8054      	tj.n	598 <l2cap_att_handler+0x598>
 4ee:	0285      	tcmp	r5, r0
 4f0:	c852      	tjhi.n	598 <l2cap_att_handler+0x598>
 4f2:	aa0a      	tcmp	r2, #10
 4f4:	c102      	tjne.n	4fc <l2cap_att_handler+0x4fc>
 4f6:	ec20      	tadds	r0, r4, #0
 4f8:	97ff 9ffe 	tjl	0 <att_read_cb>
			4f8: R_TC32_CALL	att_read_cb
 4fc:	f0ab      	tshftls	r3, r5, #2
 4fe:	e95b      	tadds	r3, r3, r5
 500:	f05b      	tshftls	r3, r3, #1
 502:	e95d      	tadds	r5, r3, r5
 504:	3902      	tloadr	r1, [sp, #8]
 506:	e86d      	tadds	r5, r5, r1
 508:	49eb      	tloadrb	r3, [r5, #7]
 50a:	4a2f      	tloadrb	r7, [r5, #8]
 50c:	f23f      	tshftls	r7, r7, #8
 50e:	031f      	tors	r7, r3
 510:	4a6b      	tloadrb	r3, [r5, #9]
 512:	f41b      	tshftls	r3, r3, #16
 514:	031f      	tors	r7, r3
 516:	4aab      	tloadrb	r3, [r5, #10]
 518:	f61b      	tshftls	r3, r3, #24
 51a:	031f      	tors	r7, r3
 51c:	48a8      	tloadrb	r0, [r5, #2]
 51e:	4ae2      	tloadrb	r2, [r4, #11]
 520:	f093      	tshftls	r3, r2, #2
 522:	e89b      	tadds	r3, r3, r2
 524:	f05b      	tshftls	r3, r3, #1
 526:	e89a      	tadds	r2, r3, r2
 528:	0b40      	tloadr	r3, [pc, #256]	; (62c <l2cap_att_handler+0x62c>)
 52a:	581b      	tloadr	r3, [r3, #0]
 52c:	e89b      	tadds	r3, r3, r2
 52e:	485a      	tloadrb	r2, [r3, #1]
 530:	aa02      	tcmp	r2, #2
 532:	c114      	tjne.n	55e <l2cap_att_handler+0x55e>
 534:	48d9      	tloadrb	r1, [r3, #3]
 536:	491a      	tloadrb	r2, [r3, #4]
 538:	f212      	tshftls	r2, r2, #8
 53a:	030a      	tors	r2, r1
 53c:	4959      	tloadrb	r1, [r3, #5]
 53e:	f409      	tshftls	r1, r1, #16
 540:	030a      	tors	r2, r1
 542:	499b      	tloadrb	r3, [r3, #6]
 544:	f61b      	tshftls	r3, r3, #24
 546:	0313      	tors	r3, r2
 548:	485a      	tloadrb	r2, [r3, #1]
 54a:	aa2a      	tcmp	r2, #42	; 0x2a
 54c:	c107      	tjne.n	55e <l2cap_att_handler+0x55e>
 54e:	481b      	tloadrb	r3, [r3, #0]
 550:	ab4b      	tcmp	r3, #75	; 0x4b
 552:	c104      	tjne.n	55e <l2cap_att_handler+0x55e>
 554:	97ff 9ffe 	tjl	0 <att_get_reportMap>
			554: R_TC32_CALL	att_get_reportMap
 558:	ec07      	tadds	r7, r0, #0
 55a:	97ff 9ffe 	tjl	0 <att_get_reportMapSize>
			55a: R_TC32_CALL	att_get_reportMapSize
 55e:	4aa3      	tloadrb	r3, [r4, #10]
 560:	ab0c      	tcmp	r3, #12
 562:	c108      	tjne.n	576 <l2cap_att_handler+0x576>
 564:	4b63      	tloadrb	r3, [r4, #13]
 566:	0283      	tcmp	r3, r0
 568:	cc02      	tjgt.n	570 <l2cap_att_handler+0x570>
 56a:	eac0      	tsubs	r0, r0, r3
 56c:	e8ff      	tadds	r7, r7, r3
 56e:	8002      	tj.n	576 <l2cap_att_handler+0x576>
 570:	a207      	tmovs	r2, #7
 572:	0b2d      	tloadr	r3, [pc, #180]	; (628 <l2cap_att_handler+0x628>)
 574:	439a      	tstorerb	r2, [r3, #14]
 576:	a500      	tmovs	r5, #0
 578:	a800      	tcmp	r0, #0
 57a:	cb03      	tjlt.n	584 <l2cap_att_handler+0x584>
 57c:	ec05      	tadds	r5, r0, #0
 57e:	a816      	tcmp	r0, #22
 580:	cd00      	tjle.n	584 <l2cap_att_handler+0x584>
 582:	a516      	tmovs	r5, #22
 584:	0827      	tloadr	r0, [pc, #156]	; (624 <l2cap_att_handler+0x624>)
 586:	b00b      	tadds	r0, #11
 588:	ec39      	tadds	r1, r7, #0
 58a:	ec2a      	tadds	r2, r5, #0
 58c:	97ff 9ffe 	tjl	0 <memcpy>
			58c: R_TC32_CALL	memcpy
 590:	b507      	tadds	r5, #7
 592:	0a24      	tloadr	r2, [pc, #144]	; (624 <l2cap_att_handler+0x624>)
 594:	5015      	tstorer	r5, [r2, #0]
 596:	801d      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 598:	a201      	tmovs	r2, #1
 59a:	0b23      	tloadr	r3, [pc, #140]	; (628 <l2cap_att_handler+0x628>)
 59c:	439a      	tstorerb	r2, [r3, #14]
 59e:	8019      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 5a0:	0b23      	tloadr	r3, [pc, #140]	; (630 <l2cap_att_handler+0x630>)
 5a2:	481f      	tloadrb	r7, [r3, #0]
 5a4:	af01      	tcmp	r7, #1
 5a6:	c107      	tjne.n	5b8 <l2cap_att_handler+0x5b8>
 5a8:	ad86      	tcmp	r5, #134	; 0x86
 5aa:	c905      	tjls.n	5b8 <l2cap_att_handler+0x5b8>
 5ac:	a203      	tmovs	r2, #3
 5ae:	401a      	tstorerb	r2, [r3, #0]
 5b0:	97ff 9ffe 	tjl	0 <vr_autoSetMode>
			5b0: R_TC32_CALL	vr_autoSetMode
 5b4:	0b1f      	tloadr	r3, [pc, #124]	; (634 <l2cap_att_handler+0x634>)
 5b6:	401f      	tstorerb	r7, [r3, #0]
 5b8:	0b1a      	tloadr	r3, [pc, #104]	; (624 <l2cap_att_handler+0x624>)
 5ba:	a200      	tmovs	r2, #0
 5bc:	a109      	tmovs	r1, #9
 5be:	4019      	tstorerb	r1, [r3, #0]
 5c0:	405a      	tstorerb	r2, [r3, #1]
 5c2:	409a      	tstorerb	r2, [r3, #2]
 5c4:	40da      	tstorerb	r2, [r3, #3]
 5c6:	a117      	tmovs	r1, #23
 5c8:	42d9      	tstorerb	r1, [r3, #11]
 5ca:	431a      	tstorerb	r2, [r3, #12]
 5cc:	8002      	tj.n	5d4 <l2cap_att_handler+0x5d4>
 5ce:	ec20      	tadds	r0, r4, #0
 5d0:	97ff 9ffe 	tjl	0 <att_response_cb>
			5d0: R_TC32_CALL	att_response_cb
 5d4:	4832      	tloadrb	r2, [r6, #0]
 5d6:	4873      	tloadrb	r3, [r6, #1]
 5d8:	f21b      	tshftls	r3, r3, #8
 5da:	0313      	tors	r3, r2
 5dc:	48b2      	tloadrb	r2, [r6, #2]
 5de:	f412      	tshftls	r2, r2, #16
 5e0:	0313      	tors	r3, r2
 5e2:	48f2      	tloadrb	r2, [r6, #3]
 5e4:	f612      	tshftls	r2, r2, #24
 5e6:	0313      	tors	r3, r2
 5e8:	c010      	tjeq.n	60c <l2cap_att_handler+0x60c>
 5ea:	a202      	tmovs	r2, #2
 5ec:	4132      	tstorerb	r2, [r6, #4]
 5ee:	ee9a      	tsubs	r2, r3, #2
 5f0:	4172      	tstorerb	r2, [r6, #5]
 5f2:	bb06      	tsubs	r3, #6
 5f4:	41b3      	tstorerb	r3, [r6, #6]
 5f6:	fa1b      	tshftrs	r3, r3, #8
 5f8:	41f3      	tstorerb	r3, [r6, #7]
 5fa:	a304      	tmovs	r3, #4
 5fc:	4233      	tstorerb	r3, [r6, #8]
 5fe:	a300      	tmovs	r3, #0
 600:	4273      	tstorerb	r3, [r6, #9]
 602:	4aa3      	tloadrb	r3, [r4, #10]
 604:	b301      	tadds	r3, #1
 606:	42b3      	tstorerb	r3, [r6, #10]
 608:	ec30      	tadds	r0, r6, #0
 60a:	8007      	tj.n	61c <l2cap_att_handler+0x61c>
 60c:	0b06      	tloadr	r3, [pc, #24]	; (628 <l2cap_att_handler+0x628>)
 60e:	4b9a      	tloadrb	r2, [r3, #14]
 610:	a000      	tmovs	r0, #0
 612:	aa00      	tcmp	r2, #0
 614:	c002      	tjeq.n	61c <l2cap_att_handler+0x61c>
 616:	4aa2      	tloadrb	r2, [r4, #10]
 618:	42da      	tstorerb	r2, [r3, #11]
 61a:	ec18      	tadds	r0, r3, #0
 61c:	6006      	tadd	sp, #24
 61e:	6df0      	tpop	{r4, r5, r6, r7, pc}
 620:	0000000c 	tandeq	r0, r0, ip
			620: R_TC32_ABS32	.data
	...
			624: R_TC32_ABS32	.data
			628: R_TC32_ABS32	.data.pkt_errRsp
			62c: R_TC32_ABS32	.bss.gAttributes
			630: R_TC32_ABS32	os_check
			634: R_TC32_ABS32	.bss.apple_need_quick_send_sec_req

Disassembly of section .text.blt_get_sdk_version:

00000000 <blt_get_sdk_version>:
blt_get_sdk_version():
   0:	0800      	tloadr	r0, [pc, #0]	; (4 <blt_get_sdk_version+0x4>)
   2:	0770      	tjex	lr
   4:	00000125 	tandeq	r0, r0, r5, lsr #2

Disassembly of section .data.pkt_errRsp:

00000000 <pkt_errRsp>:
   0:	0000000b 	tandeq	r0, r0, fp
   4:	00050902 	tandeq	r0, r5, r2, lsl #18
   8:	00010004 	tandeq	r0, r1, r4
   c:	000a0000 	tandeq	r0, sl, r0

Disassembly of section .data.periConnParameters:

00000000 <periConnParameters>:
   0:	00280014 	txoreq	r0, r8, r4, lsl r0
   4:	03e80000 	tmovneq	r0, #0

Disassembly of section .rodata.primaryServiceUUID:

00000000 <primaryServiceUUID>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .data.appearance:

00000000 <appearance>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .bss.apple_need_quick_send_sec_req:

00000000 <apple_need_quick_send_sec_req>:
	...

Disassembly of section .data.ble_g_devName:

00000000 <ble_g_devName>:
   0:	65756c62 	tloadrbvs	r6, [r5, #-3170]!	; 0xc62
   4:	6867694c 	tstormmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
   8:	00000074 	tandeq	r0, r0, r4, ror r0

Disassembly of section .rodata.pkt_mtu_rsp:

00000000 <pkt_mtu_rsp>:
   0:	00000009 	tandeq	r0, r0, r9
   4:	00030702 	tandeq	r0, r3, r2, lsl #14
   8:	17030004 	tstorerne	r0, [r3, -r4]
   c:	00000000 	tandeq	r0, r0, r0

Disassembly of section .rodata.periConnParamUUID:

00000000 <periConnParamUUID>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .rodata.SppDataServer2ClientUUID:

00000000 <SppDataServer2ClientUUID>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .rodata.devNameUUID:

00000000 <devNameUUID>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .bss.gAttributes:

00000000 <gAttributes>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .rodata.pkt_writeRsp:

00000000 <pkt_writeRsp>:
   0:	00000007 	tandeq	r0, r0, r7
   4:	00010502 	tandeq	r0, r1, r2, lsl #10
   8:	00130004 	tandseq	r0, r3, r4

Disassembly of section .rodata.appearanceUIID:

00000000 <appearanceUIID>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .rodata.SppDataClient2ServiceUUID:

00000000 <SppDataClient2ServiceUUID>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .rodata.gapServiceUUID:

00000000 <gapServiceUUID>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .rodata.SppServiceUUID:

00000000 <SppServiceUUID>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

blt_smp.o:     file format elf32-littletc32
rw-rw-rw- 0/0   7328 Jan 30 00:17 2019 blt_smp.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.blt_smp_init 00000064  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.blt_send_sec_req_packet 00000024  00000000  00000000  00000098  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.blt_smp_brx 00000310  00000000  00000000  000000bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.blt_smp_enc 00000018  00000000  00000000  000003cc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.blt_smp_pair_busy 0000001c  00000000  00000000  000003e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.blt_smp_func_init 0000002c  00000000  00000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .bss.smp_sk   00000010  00000000  00000000  0000042c  2**2
                  ALLOC
 10 .bss.smp_pair_busy 00000001  00000000  00000000  0000042c  2**0
                  ALLOC
 11 .bss.smp_state 00000001  00000000  00000000  0000042c  2**0
                  ALLOC
 12 .bss.smp_tk   00000010  00000000  00000000  0000042c  2**2
                  ALLOC
 13 .data.smp_pairingRand 0000001c  00000000  00000000  0000042c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 14 .data.smp_encInfo 0000001c  00000000  00000000  00000448  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 15 .rodata.const_u8_16_zero 00000010  00000000  00000000  00000464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .rodata.smp_evid_rand_seed 00000010  00000000  00000000  00000474  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .rodata.smp_pairingResp 00000014  00000000  00000000  00000484  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .bss.smp_confirm 00000010  00000000  00000000  00000498  2**2
                  ALLOC
 19 .bss.blt_smp_paring_req_recvd 00000001  00000000  00000000  00000498  2**0
                  ALLOC
 20 .bss.smp_bonded 00000001  00000000  00000000  00000498  2**0
                  ALLOC
 21 .bss.smp_ltk  00000004  00000000  00000000  00000498  2**2
                  ALLOC
 22 .data.smp_pauseEncryptRsp 00000008  00000000  00000000  00000498  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .rodata.smp_startEncryptRsp 00000008  00000000  00000000  000004a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 24 .data.smp_masterId 00000018  00000000  00000000  000004a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 25 .data.smp_EncryptRsp 00000014  00000000  00000000  000004c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 26 .data.smp_pairingCnf 0000001c  00000000  00000000  000004d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 27 .rodata.smp_secReq 0000000c  00000000  00000000  000004f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 28 .bss.smp_p1   00000010  00000000  00000000  000004fc  2**2
                  ALLOC
 29 .bss.smp_p2   00000010  00000000  00000000  000004fc  2**2
                  ALLOC
 30 .bss.ble_slave_ll_enc_en 00000001  00000000  00000000  000004fc  2**0
                  ALLOC
 31 .bss.start_enc_pending 00000001  00000000  00000000  000004fc  2**0
                  ALLOC
 32 .data.smp_startEncrypt 00000008  00000000  00000000  000004fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 33 .data.keyDistributeEndCode.3913 00000001  00000000  00000000  00000504  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 34 .comment      0000001b  00000000  00000000  00000505  2**0
                  CONTENTS, READONLY
 35 .TC32.attributes 00000010  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 blt_smp.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.blt_smp_init	00000000 .text.blt_smp_init
00000000 l    d  .text.blt_send_sec_req_packet	00000000 .text.blt_send_sec_req_packet
00000000 l     F .text.blt_send_sec_req_packet	00000024 blt_send_sec_req_packet
00000000 l    d  .text.blt_smp_brx	00000000 .text.blt_smp_brx
00000000 l    d  .text.blt_smp_enc	00000000 .text.blt_smp_enc
00000000 l    d  .text.blt_smp_pair_busy	00000000 .text.blt_smp_pair_busy
00000000 l    d  .text.blt_smp_func_init	00000000 .text.blt_smp_func_init
00000000 l    d  .bss.smp_sk	00000000 .bss.smp_sk
00000000 l     O .bss.smp_sk	00000010 smp_sk
00000000 l    d  .bss.smp_pair_busy	00000000 .bss.smp_pair_busy
00000000 l    d  .bss.smp_state	00000000 .bss.smp_state
00000000 l     O .bss.smp_state	00000001 smp_state
00000000 l    d  .bss.smp_tk	00000000 .bss.smp_tk
00000000 l     O .bss.smp_tk	00000010 smp_tk
00000000 l    d  .data.smp_pairingRand	00000000 .data.smp_pairingRand
00000000 l     O .data.smp_pairingRand	0000001b smp_pairingRand
00000000 l    d  .data.smp_encInfo	00000000 .data.smp_encInfo
00000000 l     O .data.smp_encInfo	0000001b smp_encInfo
00000000 l    d  .rodata.const_u8_16_zero	00000000 .rodata.const_u8_16_zero
00000000 l     O .rodata.const_u8_16_zero	00000010 const_u8_16_zero
00000000 l    d  .rodata.smp_evid_rand_seed	00000000 .rodata.smp_evid_rand_seed
00000000 l    d  .rodata.smp_pairingResp	00000000 .rodata.smp_pairingResp
00000000 l     O .rodata.smp_pairingResp	00000011 smp_pairingResp
00000000 l    d  .bss.smp_confirm	00000000 .bss.smp_confirm
00000000 l     O .bss.smp_confirm	00000010 smp_confirm
00000000 l    d  .bss.blt_smp_paring_req_recvd	00000000 .bss.blt_smp_paring_req_recvd
00000000 l    d  .bss.smp_bonded	00000000 .bss.smp_bonded
00000000 l     O .bss.smp_bonded	00000001 smp_bonded
00000000 l    d  .bss.smp_ltk	00000000 .bss.smp_ltk
00000000 l     O .bss.smp_ltk	00000004 smp_ltk
00000000 l    d  .data.smp_pauseEncryptRsp	00000000 .data.smp_pauseEncryptRsp
00000000 l     O .data.smp_pauseEncryptRsp	00000007 smp_pauseEncryptRsp
00000000 l    d  .rodata.smp_startEncryptRsp	00000000 .rodata.smp_startEncryptRsp
00000000 l     O .rodata.smp_startEncryptRsp	00000007 smp_startEncryptRsp
00000000 l    d  .data.smp_masterId	00000000 .data.smp_masterId
00000000 l     O .data.smp_masterId	00000015 smp_masterId
00000000 l    d  .data.smp_EncryptRsp	00000000 .data.smp_EncryptRsp
00000000 l     O .data.smp_EncryptRsp	00000013 smp_EncryptRsp
00000000 l    d  .data.smp_pairingCnf	00000000 .data.smp_pairingCnf
00000000 l     O .data.smp_pairingCnf	0000001b smp_pairingCnf
00000000 l    d  .rodata.smp_secReq	00000000 .rodata.smp_secReq
00000000 l     O .rodata.smp_secReq	0000000c smp_secReq
00000000 l    d  .bss.smp_p1	00000000 .bss.smp_p1
00000000 l     O .bss.smp_p1	00000010 smp_p1
00000000 l    d  .bss.smp_p2	00000000 .bss.smp_p2
00000000 l     O .bss.smp_p2	00000010 smp_p2
00000000 l    d  .bss.ble_slave_ll_enc_en	00000000 .bss.ble_slave_ll_enc_en
00000000 l     O .bss.ble_slave_ll_enc_en	00000001 ble_slave_ll_enc_en
00000000 l    d  .bss.start_enc_pending	00000000 .bss.start_enc_pending
00000000 l     O .bss.start_enc_pending	00000001 start_enc_pending
00000000 l    d  .data.smp_startEncrypt	00000000 .data.smp_startEncrypt
00000000 l     O .data.smp_startEncrypt	00000007 smp_startEncrypt
00000000 l    d  .data.keyDistributeEndCode.3913	00000000 .data.keyDistributeEndCode.3913
00000000 l     O .data.keyDistributeEndCode.3913	00000001 keyDistributeEndCode.3913
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 g     F .text.blt_smp_init	00000064 blt_smp_init
00000000         *UND*	00000000 memcpy
00000000         *UND*	00000000 blt_push_fifo
00000000         *UND*	00000000 sec_req_sent
00000000 g     F .text.blt_smp_brx	00000310 blt_smp_brx
00000000         *UND*	00000000 aes_ll_ccm_decryption
00000000         *UND*	00000000 memcmp
00000000         *UND*	00000000 generateRandomNum
00000000         *UND*	00000000 aes_ll_encryption
00000000         *UND*	00000000 aes_ll_c1
00000000         *UND*	00000000 aes_ll_s1
00000000         *UND*	00000000 aes_ll_ccm_encryption_init
00000008       O *COM*	00000004 enc_skdm
00000004       O *COM*	00000004 enc_ivm
00000000         *UND*	00000000 connect_startTime
00000000         *UND*	00000000 apple_need_quick_send_sec_req
00000000 g     F .text.blt_smp_enc	00000018 blt_smp_enc
00000000         *UND*	00000000 aes_ll_ccm_encryption
00000000 g     F .text.blt_smp_pair_busy	0000001c blt_smp_pair_busy
00000000 g     F .text.blt_smp_func_init	0000002c blt_smp_func_init
00000000         *UND*	00000000 func_smp_brx
00000000         *UND*	00000000 func_smp_init
00000000         *UND*	00000000 func_smp_enc
00000000 g     O .rodata.smp_evid_rand_seed	00000010 smp_evid_rand_seed
00000000 g     O .bss.smp_pair_busy	00000001 smp_pair_busy
00000000 g     O .bss.blt_smp_paring_req_recvd	00000001 blt_smp_paring_req_recvd
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN



Disassembly of section .text.blt_smp_init:

00000000 <blt_smp_init>:
blt_smp_init():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	ec04      	tadds	r4, r0, #0
   4:	a500      	tmovs	r5, #0
   6:	0b10      	tloadr	r3, [pc, #64]	; (48 <blt_smp_init+0x48>)
   8:	401d      	tstorerb	r5, [r3, #0]
   a:	0b10      	tloadr	r3, [pc, #64]	; (4c <blt_smp_init+0x4c>)
   c:	4802      	tloadrb	r2, [r0, #0]
   e:	f652      	tshftls	r2, r2, #25
  10:	ffd2      	tshftrs	r2, r2, #31
  12:	401a      	tstorerb	r2, [r3, #0]
  14:	4802      	tloadrb	r2, [r0, #0]
  16:	f9d2      	tshftrs	r2, r2, #7
  18:	405a      	tstorerb	r2, [r3, #1]
  1a:	0e0d      	tloadr	r6, [pc, #52]	; (50 <blt_smp_init+0x50>)
  1c:	ec01      	tadds	r1, r0, #0
  1e:	b108      	tadds	r1, #8
  20:	ec30      	tadds	r0, r6, #0
  22:	a206      	tmovs	r2, #6
  24:	97ff 9ffe 	tjl	0 <memcpy>
			24: R_TC32_CALL	memcpy
  28:	edb0      	tadds	r0, r6, #6
  2a:	eca1      	tadds	r1, r4, #2
  2c:	a206      	tmovs	r2, #6
  2e:	97ff 9ffe 	tjl	0 <memcpy>
			2e: R_TC32_CALL	memcpy
  32:	a201      	tmovs	r2, #1
  34:	0b07      	tloadr	r3, [pc, #28]	; (54 <blt_smp_init+0x54>)
  36:	401a      	tstorerb	r2, [r3, #0]
  38:	0b07      	tloadr	r3, [pc, #28]	; (58 <blt_smp_init+0x58>)
  3a:	401d      	tstorerb	r5, [r3, #0]
  3c:	0b07      	tloadr	r3, [pc, #28]	; (5c <blt_smp_init+0x5c>)
  3e:	401d      	tstorerb	r5, [r3, #0]
  40:	0b07      	tloadr	r3, [pc, #28]	; (60 <blt_smp_init+0x60>)
  42:	401d      	tstorerb	r5, [r3, #0]
  44:	6d70      	tpop	{r4, r5, r6, pc}
  46:	46c0      	tnop			; (mov r8, r8)
	...
			48: R_TC32_ABS32	.bss.ble_slave_ll_enc_en
			4c: R_TC32_ABS32	.bss.smp_p1
			50: R_TC32_ABS32	.bss.smp_p2
			54: R_TC32_ABS32	.bss.smp_pair_busy
			58: R_TC32_ABS32	.bss.blt_smp_paring_req_recvd
			5c: R_TC32_ABS32	.bss.smp_state
			60: R_TC32_ABS32	.bss.start_enc_pending

Disassembly of section .text.blt_send_sec_req_packet:

00000000 <blt_send_sec_req_packet>:
blt_send_sec_req_packet():
   0:	6510      	tpush	{r4, lr}
   2:	0c06      	tloadr	r4, [pc, #24]	; (1c <blt_send_sec_req_packet+0x1c>)
   4:	4823      	tloadrb	r3, [r4, #0]
   6:	ab00      	tcmp	r3, #0
   8:	c106      	tjne.n	18 <blt_send_sec_req_packet+0x18>
   a:	0805      	tloadr	r0, [pc, #20]	; (20 <blt_send_sec_req_packet+0x20>)
   c:	97ff 9ffe 	tjl	0 <blt_push_fifo>
			c: R_TC32_CALL	blt_push_fifo
  10:	a800      	tcmp	r0, #0
  12:	c001      	tjeq.n	18 <blt_send_sec_req_packet+0x18>
  14:	a301      	tmovs	r3, #1
  16:	4023      	tstorerb	r3, [r4, #0]
  18:	6d10      	tpop	{r4, pc}
  1a:	46c0      	tnop			; (mov r8, r8)
	...
			1c: R_TC32_ABS32	sec_req_sent
			20: R_TC32_ABS32	.rodata.smp_secReq

Disassembly of section .text.blt_smp_brx:

00000000 <blt_smp_brx>:
blt_smp_brx():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6082      	tsub	sp, #8
   4:	ec04      	tadds	r4, r0, #0
   6:	a900      	tcmp	r1, #0
   8:	c100      	tjne.n	c <blt_smp_brx+0xc>
   a:	8104      	tj.n	216 <blt_smp_brx+0x216>
   c:	4b43      	tloadrb	r3, [r0, #13]
   e:	ab00      	tcmp	r3, #0
  10:	c100      	tjne.n	14 <blt_smp_brx+0x14>
  12:	8100      	tj.n	216 <blt_smp_brx+0x216>
  14:	0b9f      	tloadr	r3, [pc, #636]	; (294 <blt_smp_brx+0x294>)
  16:	481b      	tloadrb	r3, [r3, #0]
  18:	ab00      	tcmp	r3, #0
  1a:	c003      	tjeq.n	24 <blt_smp_brx+0x24>
  1c:	b00c      	tadds	r0, #12
  1e:	a101      	tmovs	r1, #1
  20:	97ff 9ffe 	tjl	0 <aes_ll_ccm_decryption>
			20: R_TC32_CALL	aes_ll_ccm_decryption
  24:	4ba3      	tloadrb	r3, [r4, #14]
  26:	4b22      	tloadrb	r2, [r4, #12]
  28:	a503      	tmovs	r5, #3
  2a:	0015      	tands	r5, r2
  2c:	ad03      	tcmp	r5, #3
  2e:	c171      	tjne.n	114 <blt_smp_brx+0x114>
  30:	ab03      	tcmp	r3, #3
  32:	c15d      	tjne.n	f0 <blt_smp_brx+0xf0>
  34:	ec26      	tadds	r6, r4, #0
  36:	b608      	tadds	r6, #8
  38:	ec25      	tadds	r5, r4, #0
  3a:	b50f      	tadds	r5, #15
  3c:	0896      	tloadr	r0, [pc, #600]	; (298 <blt_smp_brx+0x298>)
  3e:	ec29      	tadds	r1, r5, #0
  40:	a20a      	tmovs	r2, #10
  42:	97ff 9ffe 	tjl	0 <memcmp>
			42: R_TC32_CALL	memcmp
  46:	0c95      	tloadr	r4, [pc, #596]	; (29c <blt_smp_brx+0x29c>)
  48:	a800      	tcmp	r0, #0
  4a:	c119      	tjne.n	80 <blt_smp_brx+0x80>
  4c:	0a94      	tloadr	r2, [pc, #592]	; (2a0 <blt_smp_brx+0x2a0>)
  4e:	0b95      	tloadr	r3, [pc, #596]	; (2a4 <blt_smp_brx+0x2a4>)
  50:	501a      	tstorer	r2, [r3, #0]
  52:	ec26      	tadds	r6, r4, #0
  54:	b60b      	tadds	r6, #11
  56:	a00a      	tmovs	r0, #10
  58:	ec31      	tadds	r1, r6, #0
  5a:	97ff 9ffe 	tjl	0 <generateRandomNum>
			5a: R_TC32_CALL	generateRandomNum
  5e:	0f92      	tloadr	r7, [pc, #584]	; (2a8 <blt_smp_brx+0x2a8>)
  60:	ed61      	tadds	r1, r4, #5
  62:	ec38      	tadds	r0, r7, #0
  64:	0a91      	tloadr	r2, [pc, #580]	; (2ac <blt_smp_brx+0x2ac>)
  66:	b20b      	tadds	r2, #11
  68:	97ff 9ffe 	tjl	0 <aes_ll_encryption>
			68: R_TC32_CALL	aes_ll_encryption
  6c:	b415      	tadds	r4, #21
  6e:	483a      	tloadrb	r2, [r7, #0]
  70:	4833      	tloadrb	r3, [r6, #0]
  72:	0053      	txors	r3, r2
  74:	4033      	tstorerb	r3, [r6, #0]
  76:	b601      	tadds	r6, #1
  78:	b701      	tadds	r7, #1
  7a:	02a6      	tcmp	r6, r4
  7c:	c1f7      	tjne.n	6e <blt_smp_brx+0x6e>
  7e:	8020      	tj.n	c2 <blt_smp_brx+0xc2>
  80:	4bf2      	tloadrb	r2, [r6, #15]
  82:	a372      	tmovs	r3, #114	; 0x72
  84:	025b      	tnegs	r3, r3
  86:	0053      	txors	r3, r2
  88:	42e3      	tstorerb	r3, [r4, #11]
  8a:	4c32      	tloadrb	r2, [r6, #16]
  8c:	a306      	tmovs	r3, #6
  8e:	025b      	tnegs	r3, r3
  90:	0053      	txors	r3, r2
  92:	4323      	tstorerb	r3, [r4, #12]
  94:	a300      	tmovs	r3, #0
  96:	0884      	tloadr	r0, [pc, #528]	; (2a8 <blt_smp_brx+0x2a8>)
  98:	e8e2      	tadds	r2, r4, r3
  9a:	e8c7      	tadds	r7, r0, r3
  9c:	e8f1      	tadds	r1, r6, r3
  9e:	48bf      	tloadrb	r7, [r7, #2]
  a0:	49c9      	tloadrb	r1, [r1, #7]
  a2:	0079      	txors	r1, r7
  a4:	4351      	tstorerb	r1, [r2, #13]
  a6:	b301      	tadds	r3, #1
  a8:	ab08      	tcmp	r3, #8
  aa:	c1f5      	tjne.n	98 <blt_smp_brx+0x98>
  ac:	ed61      	tadds	r1, r4, #5
  ae:	0e7f      	tloadr	r6, [pc, #508]	; (2ac <blt_smp_brx+0x2ac>)
  b0:	b60b      	tadds	r6, #11
  b2:	ec32      	tadds	r2, r6, #0
  b4:	97ff 9ffe 	tjl	0 <aes_ll_encryption>
			b4: R_TC32_CALL	aes_ll_encryption
  b8:	0b7a      	tloadr	r3, [pc, #488]	; (2a4 <blt_smp_brx+0x2a4>)
  ba:	501e      	tstorer	r6, [r3, #0]
  bc:	a201      	tmovs	r2, #1
  be:	0b7c      	tloadr	r3, [pc, #496]	; (2b0 <blt_smp_brx+0x2b0>)
  c0:	401a      	tstorerb	r2, [r3, #0]
  c2:	a00c      	tmovs	r0, #12
  c4:	097b      	tloadr	r1, [pc, #492]	; (2b4 <blt_smp_brx+0x2b4>)
  c6:	b107      	tadds	r1, #7
  c8:	97ff 9ffe 	tjl	0 <generateRandomNum>
			c8: R_TC32_CALL	generateRandomNum
  cc:	ec29      	tadds	r1, r5, #0
  ce:	b10a      	tadds	r1, #10
  d0:	0879      	tloadr	r0, [pc, #484]	; (2b8 <blt_smp_brx+0x2b8>)
  d2:	a208      	tmovs	r2, #8
  d4:	97ff 9ffe 	tjl	0 <memcpy>
			d4: R_TC32_CALL	memcpy
  d8:	ec29      	tadds	r1, r5, #0
  da:	b112      	tadds	r1, #18
  dc:	0877      	tloadr	r0, [pc, #476]	; (2bc <blt_smp_brx+0x2bc>)
  de:	a204      	tmovs	r2, #4
  e0:	97ff 9ffe 	tjl	0 <memcpy>
			e0: R_TC32_CALL	memcpy
  e4:	a301      	tmovs	r3, #1
  e6:	0a76      	tloadr	r2, [pc, #472]	; (2c0 <blt_smp_brx+0x2c0>)
  e8:	4013      	tstorerb	r3, [r2, #0]
  ea:	0a76      	tloadr	r2, [pc, #472]	; (2c4 <blt_smp_brx+0x2c4>)
  ec:	4013      	tstorerb	r3, [r2, #0]
  ee:	80c0      	tj.n	272 <blt_smp_brx+0x272>
  f0:	ab06      	tcmp	r3, #6
  f2:	c10a      	tjne.n	10a <blt_smp_brx+0x10a>
  f4:	0874      	tloadr	r0, [pc, #464]	; (2c8 <blt_smp_brx+0x2c8>)
  f6:	97ff 9ffe 	tjl	0 <blt_push_fifo>
			f6: R_TC32_CALL	blt_push_fifo
  fa:	0b74      	tloadr	r3, [pc, #464]	; (2cc <blt_smp_brx+0x2cc>)
  fc:	481b      	tloadrb	r3, [r3, #0]
  fe:	ab00      	tcmp	r3, #0
 100:	c100      	tjne.n	104 <blt_smp_brx+0x104>
 102:	80b6      	tj.n	272 <blt_smp_brx+0x272>
 104:	0b6f      	tloadr	r3, [pc, #444]	; (2c4 <blt_smp_brx+0x2c4>)
 106:	401d      	tstorerb	r5, [r3, #0]
 108:	80b3      	tj.n	272 <blt_smp_brx+0x272>
 10a:	ab0a      	tcmp	r3, #10
 10c:	c000      	tjeq.n	110 <blt_smp_brx+0x110>
 10e:	80b0      	tj.n	272 <blt_smp_brx+0x272>
 110:	086f      	tloadr	r0, [pc, #444]	; (2d0 <blt_smp_brx+0x2d0>)
 112:	80a2      	tj.n	25a <blt_smp_brx+0x25a>
 114:	2a23      	tloadrh	r3, [r4, #16]
 116:	ab06      	tcmp	r3, #6
 118:	c000      	tjeq.n	11c <blt_smp_brx+0x11c>
 11a:	80aa      	tj.n	272 <blt_smp_brx+0x272>
 11c:	a108      	tmovs	r1, #8
 11e:	e909      	tadds	r1, r1, r4
 120:	3101      	tstorer	r1, [sp, #4]
 122:	4a8d      	tloadrb	r5, [r1, #10]
 124:	ad03      	tcmp	r5, #3
 126:	c029      	tjeq.n	17c <blt_smp_brx+0x17c>
 128:	ad03      	tcmp	r5, #3
 12a:	c802      	tjhi.n	132 <blt_smp_brx+0x132>
 12c:	ad01      	tcmp	r5, #1
 12e:	c169      	tjne.n	204 <blt_smp_brx+0x204>
 130:	8004      	tj.n	13c <blt_smp_brx+0x13c>
 132:	ad04      	tcmp	r5, #4
 134:	c045      	tjeq.n	1c2 <blt_smp_brx+0x1c2>
 136:	ad05      	tcmp	r5, #5
 138:	c164      	tjne.n	204 <blt_smp_brx+0x204>
 13a:	8060      	tj.n	1fe <blt_smp_brx+0x1fe>
 13c:	0b65      	tloadr	r3, [pc, #404]	; (2d4 <blt_smp_brx+0x2d4>)
 13e:	401d      	tstorerb	r5, [r3, #0]
 140:	97ff 9ffe 	tjl	0 <blt_smp_brx>
			140: R_TC32_CALL	blt_send_sec_req_packet
 144:	0864      	tloadr	r0, [pc, #400]	; (194 <blt_push_fifo+0x194>)
 146:	97ff 9ffe 	tjl	0 <blt_push_fifo>
			146: R_TC32_CALL	blt_push_fifo
 14a:	ec21      	tadds	r1, r4, #0
 14c:	b112      	tadds	r1, #18
 14e:	0863      	tloadr	r0, [pc, #396]	; (2dc <blt_smp_brx+0x2dc>)
 150:	b002      	tadds	r0, #2
 152:	a207      	tmovs	r2, #7
 154:	97ff 9ffe 	tjl	0 <memcpy>
			154: R_TC32_CALL	memcpy
 158:	0b5c      	tloadr	r3, [pc, #368]	; (2cc <blt_smp_brx+0x2cc>)
 15a:	401d      	tstorerb	r5, [r3, #0]
 15c:	a302      	tmovs	r3, #2
 15e:	3901      	tloadr	r1, [sp, #4]
 160:	4c0a      	tloadrb	r2, [r1, #16]
 162:	001a      	tands	r2, r3
 164:	0213      	tnand	r3, r2
 166:	c002      	tjeq.n	16e <blt_smp_brx+0x16e>
 168:	a209      	tmovs	r2, #9
 16a:	0b5d      	tloadr	r3, [pc, #372]	; (2e0 <blt_smp_brx+0x2e0>)
 16c:	8049      	tj.n	202 <blt_smp_brx+0x202>
 16e:	0b5c      	tloadr	r3, [pc, #368]	; (2e0 <blt_smp_brx+0x2e0>)
 170:	0215      	tnand	r5, r2
 172:	c001      	tjeq.n	178 <blt_smp_brx+0x178>
 174:	a207      	tmovs	r2, #7
 176:	8044      	tj.n	202 <blt_smp_brx+0x202>
 178:	a204      	tmovs	r2, #4
 17a:	8042      	tj.n	202 <blt_smp_brx+0x202>
 17c:	ec21      	tadds	r1, r4, #0
 17e:	b113      	tadds	r1, #19
 180:	0858      	tloadr	r0, [pc, #352]	; (2e4 <blt_smp_brx+0x2e4>)
 182:	a210      	tmovs	r2, #16
 184:	97ff 9ffe 	tjl	0 <memcpy>
			184: R_TC32_CALL	memcpy
 188:	0f54      	tloadr	r7, [pc, #336]	; (2dc <blt_smp_brx+0x2dc>)
 18a:	ec38      	tadds	r0, r7, #0
 18c:	b009      	tadds	r0, #9
 18e:	0952      	tloadr	r1, [pc, #328]	; (2d8 <blt_smp_brx+0x2d8>)
 190:	b10a      	tadds	r1, #10
 192:	a207      	tmovs	r2, #7
 194:	97ff 9ffe 	tjl	0 <memcpy>
			194: R_TC32_CALL	memcpy
 198:	0e53      	tloadr	r6, [pc, #332]	; (2e8 <blt_smp_brx+0x2e8>)
 19a:	b60b      	tadds	r6, #11
 19c:	a010      	tmovs	r0, #16
 19e:	ec31      	tadds	r1, r6, #0
 1a0:	97ff 9ffe 	tjl	0 <generateRandomNum>
			1a0: R_TC32_CALL	generateRandomNum
 1a4:	0c51      	tloadr	r4, [pc, #324]	; (2ec <blt_smp_brx+0x2ec>)
 1a6:	ec23      	tadds	r3, r4, #0
 1a8:	b30b      	tadds	r3, #11
 1aa:	3300      	tstorer	r3, [sp, #0]
 1ac:	0850      	tloadr	r0, [pc, #320]	; (2f0 <blt_smp_brx+0x2f0>)
 1ae:	ec31      	tadds	r1, r6, #0
 1b0:	ec3a      	tadds	r2, r7, #0
 1b2:	0b50      	tloadr	r3, [pc, #320]	; (2f4 <blt_smp_brx+0x2f4>)
 1b4:	97ff 9ffe 	tjl	0 <aes_ll_c1>
			1b4: R_TC32_CALL	aes_ll_c1
 1b8:	42a5      	tstorerb	r5, [r4, #10]
 1ba:	ec20      	tadds	r0, r4, #0
 1bc:	97ff 9ffe 	tjl	0 <blt_push_fifo>
			1bc: R_TC32_CALL	blt_push_fifo
 1c0:	8020      	tj.n	204 <blt_smp_brx+0x204>
 1c2:	ec27      	tadds	r7, r4, #0
 1c4:	b713      	tadds	r7, #19
 1c6:	0e4a      	tloadr	r6, [pc, #296]	; (2f0 <blt_smp_brx+0x2f0>)
 1c8:	0d35      	tloadr	r5, [pc, #212]	; (2a0 <blt_smp_brx+0x2a0>)
 1ca:	3500      	tstorer	r5, [sp, #0]
 1cc:	ec30      	tadds	r0, r6, #0
 1ce:	ec39      	tadds	r1, r7, #0
 1d0:	0a42      	tloadr	r2, [pc, #264]	; (2dc <blt_smp_brx+0x2dc>)
 1d2:	0b48      	tloadr	r3, [pc, #288]	; (2f4 <blt_smp_brx+0x2f4>)
 1d4:	97ff 9ffe 	tjl	0 <aes_ll_c1>
			1d4: R_TC32_CALL	aes_ll_c1
 1d8:	0842      	tloadr	r0, [pc, #264]	; (2e4 <blt_smp_brx+0x2e4>)
 1da:	ec29      	tadds	r1, r5, #0
 1dc:	a210      	tmovs	r2, #16
 1de:	97ff 9ffe 	tjl	0 <memcmp>
			1de: R_TC32_CALL	memcmp
 1e2:	a800      	tcmp	r0, #0
 1e4:	c10e      	tjne.n	204 <blt_smp_brx+0x204>
 1e6:	0c40      	tloadr	r4, [pc, #256]	; (2e8 <blt_smp_brx+0x2e8>)
 1e8:	ec20      	tadds	r0, r4, #0
 1ea:	97ff 9ffe 	tjl	0 <blt_push_fifo>
			1ea: R_TC32_CALL	blt_push_fifo
 1ee:	ec22      	tadds	r2, r4, #0
 1f0:	b20b      	tadds	r2, #11
 1f2:	ec30      	tadds	r0, r6, #0
 1f4:	ec39      	tadds	r1, r7, #0
 1f6:	ec2b      	tadds	r3, r5, #0
 1f8:	97ff 9ffe 	tjl	0 <aes_ll_s1>
			1f8: R_TC32_CALL	aes_ll_s1
 1fc:	8002      	tj.n	204 <blt_smp_brx+0x204>
 1fe:	a200      	tmovs	r2, #0
 200:	0b3d      	tloadr	r3, [pc, #244]	; (2f8 <blt_smp_brx+0x2f8>)
 202:	401a      	tstorerb	r2, [r3, #0]
 204:	3b01      	tloadr	r3, [sp, #4]
 206:	4a9a      	tloadrb	r2, [r3, #10]
 208:	0b35      	tloadr	r3, [pc, #212]	; (2e0 <blt_smp_brx+0x2e0>)
 20a:	481b      	tloadrb	r3, [r3, #0]
 20c:	029a      	tcmp	r2, r3
 20e:	c330      	tjcc.n	272 <blt_smp_brx+0x272>
 210:	a201      	tmovs	r2, #1
 212:	0b27      	tloadr	r3, [pc, #156]	; (2b0 <blt_smp_brx+0x2b0>)
 214:	801a      	tj.n	24c <blt_smp_brx+0x24c>
 216:	0b2b      	tloadr	r3, [pc, #172]	; (2c4 <blt_smp_brx+0x2c4>)
 218:	481a      	tloadrb	r2, [r3, #0]
 21a:	aa01      	tcmp	r2, #1
 21c:	c103      	tjne.n	226 <blt_smp_brx+0x226>
 21e:	a202      	tmovs	r2, #2
 220:	401a      	tstorerb	r2, [r3, #0]
 222:	0824      	tloadr	r0, [pc, #144]	; (2b4 <blt_smp_brx+0x2b4>)
 224:	8019      	tj.n	25a <blt_smp_brx+0x25a>
 226:	aa02      	tcmp	r2, #2
 228:	c112      	tjne.n	250 <blt_smp_brx+0x250>
 22a:	a200      	tmovs	r2, #0
 22c:	401a      	tstorerb	r2, [r3, #0]
 22e:	0833      	tloadr	r0, [pc, #204]	; (2fc <blt_smp_brx+0x2fc>)
 230:	97ff 9ffe 	tjl	0 <blt_push_fifo>
			230: R_TC32_CALL	blt_push_fifo
 234:	0b1b      	tloadr	r3, [pc, #108]	; (2a4 <blt_smp_brx+0x2a4>)
 236:	5818      	tloadr	r0, [r3, #0]
 238:	0b1e      	tloadr	r3, [pc, #120]	; (2b4 <blt_smp_brx+0x2b4>)
 23a:	edda      	tadds	r2, r3, #7
 23c:	b30f      	tadds	r3, #15
 23e:	3300      	tstorer	r3, [sp, #0]
 240:	091d      	tloadr	r1, [pc, #116]	; (2b8 <blt_smp_brx+0x2b8>)
 242:	0b1e      	tloadr	r3, [pc, #120]	; (2bc <blt_smp_brx+0x2bc>)
 244:	97ff 9ffe 	tjl	0 <aes_ll_ccm_encryption_init>
			244: R_TC32_CALL	aes_ll_ccm_encryption_init
 248:	a201      	tmovs	r2, #1
 24a:	0b12      	tloadr	r3, [pc, #72]	; (294 <blt_smp_brx+0x294>)
 24c:	401a      	tstorerb	r2, [r3, #0]
 24e:	8010      	tj.n	272 <blt_smp_brx+0x272>
 250:	aa03      	tcmp	r2, #3
 252:	c105      	tjne.n	260 <blt_smp_brx+0x260>
 254:	a204      	tmovs	r2, #4
 256:	401a      	tstorerb	r2, [r3, #0]
 258:	0814      	tloadr	r0, [pc, #80]	; (2ac <blt_smp_brx+0x2ac>)
 25a:	97ff 9ffe 	tjl	0 <blt_push_fifo>
			25a: R_TC32_CALL	blt_push_fifo
 25e:	8008      	tj.n	272 <blt_smp_brx+0x272>
 260:	aa04      	tcmp	r2, #4
 262:	c106      	tjne.n	272 <blt_smp_brx+0x272>
 264:	a400      	tmovs	r4, #0
 266:	401c      	tstorerb	r4, [r3, #0]
 268:	080c      	tloadr	r0, [pc, #48]	; (29c <blt_smp_brx+0x29c>)
 26a:	97ff 9ffe 	tjl	0 <blt_push_fifo>
			26a: R_TC32_CALL	blt_push_fifo
 26e:	0b22      	tloadr	r3, [pc, #136]	; (2f8 <blt_smp_brx+0x2f8>)
 270:	401c      	tstorerb	r4, [r3, #0]
 272:	0b23      	tloadr	r3, [pc, #140]	; (300 <blt_smp_brx+0x300>)
 274:	581a      	tloadr	r2, [r3, #0]
 276:	0b23      	tloadr	r3, [pc, #140]	; (304 <blt_smp_brx+0x304>)
 278:	581b      	tloadr	r3, [r3, #0]
 27a:	ead2      	tsubs	r2, r2, r3
 27c:	0b22      	tloadr	r3, [pc, #136]	; (308 <blt_smp_brx+0x308>)
 27e:	029a      	tcmp	r2, r3
 280:	c803      	tjhi.n	28a <blt_smp_brx+0x28a>
 282:	0b22      	tloadr	r3, [pc, #136]	; (30c <blt_smp_brx+0x30c>)
 284:	481b      	tloadrb	r3, [r3, #0]
 286:	ab01      	tcmp	r3, #1
 288:	c101      	tjne.n	28e <blt_smp_brx+0x28e>
 28a:	97ff 9ffe 	tjl	0 <blt_smp_brx>
			28a: R_TC32_CALL	blt_send_sec_req_packet
 28e:	6002      	tadd	sp, #8
 290:	6df0      	tpop	{r4, r5, r6, r7, pc}
 292:	46c0      	tnop			; (mov r8, r8)
	...
			294: R_TC32_ABS32	.bss.ble_slave_ll_enc_en
			298: R_TC32_ABS32	.rodata.const_u8_16_zero
			29c: R_TC32_ABS32	.data.smp_masterId
			2a0: R_TC32_ABS32	.bss.smp_sk
			2a4: R_TC32_ABS32	.bss.smp_ltk
			2a8: R_TC32_ABS32	.rodata.smp_evid_rand_seed
			2ac: R_TC32_ABS32	.data.smp_encInfo
			2b0: R_TC32_ABS32	.bss.smp_bonded
			2b4: R_TC32_ABS32	.data.smp_EncryptRsp
			2b8: R_TC32_ABS32	enc_skdm
			2bc: R_TC32_ABS32	enc_ivm
			2c0: R_TC32_ABS32	sec_req_sent
			2c4: R_TC32_ABS32	.bss.start_enc_pending
			2c8: R_TC32_ABS32	.rodata.smp_startEncryptRsp
			2cc: R_TC32_ABS32	.bss.smp_state
			2d0: R_TC32_ABS32	.data.smp_pauseEncryptRsp
			2d4: R_TC32_ABS32	.bss.blt_smp_paring_req_recvd
			2d8: R_TC32_ABS32	.rodata.smp_pairingResp
			2dc: R_TC32_ABS32	.bss.smp_p1
			2e0: R_TC32_ABS32	.data.keyDistributeEndCode.3913
			2e4: R_TC32_ABS32	.bss.smp_confirm
			2e8: R_TC32_ABS32	.data.smp_pairingRand
			2ec: R_TC32_ABS32	.data.smp_pairingCnf
			2f0: R_TC32_ABS32	.bss.smp_tk
			2f4: R_TC32_ABS32	.bss.smp_p2
			2f8: R_TC32_ABS32	.bss.smp_pair_busy
			2fc: R_TC32_ABS32	.data.smp_startEncrypt
 300:	00800740 	taddeq	r0, r0, r0, asr #14
 304:	00000000 	tandeq	r0, r0, r0
			304: R_TC32_ABS32	connect_startTime
 308:	01e84800 	tmovneq	r4, r0, lsl #16
 30c:	00000000 	tandeq	r0, r0, r0
			30c: R_TC32_ABS32	apple_need_quick_send_sec_req

Disassembly of section .text.blt_smp_enc:

00000000 <blt_smp_enc>:
blt_smp_enc():
   0:	6500      	tpush	{lr}
   2:	0b04      	tloadr	r3, [pc, #16]	; (14 <blt_smp_enc+0x14>)
   4:	481b      	tloadrb	r3, [r3, #0]
   6:	ab00      	tcmp	r3, #0
   8:	c002      	tjeq.n	10 <blt_smp_enc+0x10>
   a:	a100      	tmovs	r1, #0
   c:	97ff 9ffe 	tjl	0 <aes_ll_ccm_encryption>
			c: R_TC32_CALL	aes_ll_ccm_encryption
  10:	6d00      	tpop	{pc}
  12:	46c0      	tnop			; (mov r8, r8)
  14:	00000000 	tandeq	r0, r0, r0
			14: R_TC32_ABS32	.bss.ble_slave_ll_enc_en

Disassembly of section .text.blt_smp_pair_busy:

00000000 <blt_smp_pair_busy>:
blt_smp_pair_busy():
   0:	0b04      	tloadr	r3, [pc, #16]	; (14 <blt_smp_pair_busy+0x14>)
   2:	481b      	tloadrb	r3, [r3, #0]
   4:	a000      	tmovs	r0, #0
   6:	ab00      	tcmp	r3, #0
   8:	c003      	tjeq.n	12 <blt_smp_pair_busy+0x12>
   a:	0b03      	tloadr	r3, [pc, #12]	; (18 <blt_smp_pair_busy+0x18>)
   c:	4818      	tloadrb	r0, [r3, #0]
   e:	ee43      	tsubs	r3, r0, #1
  10:	0198      	tsubcs	r0, r3
  12:	0770      	tjex	lr
	...
			14: R_TC32_ABS32	.bss.smp_pair_busy
			18: R_TC32_ABS32	.bss.blt_smp_paring_req_recvd

Disassembly of section .text.blt_smp_func_init:

00000000 <blt_smp_func_init>:
blt_smp_func_init():
   0:	0a04      	tloadr	r2, [pc, #16]	; (14 <blt_smp_func_init+0x14>)
   2:	0b05      	tloadr	r3, [pc, #20]	; (18 <blt_smp_func_init+0x18>)
   4:	501a      	tstorer	r2, [r3, #0]
   6:	0a05      	tloadr	r2, [pc, #20]	; (1c <blt_smp_func_init+0x1c>)
   8:	0b05      	tloadr	r3, [pc, #20]	; (20 <blt_smp_func_init+0x20>)
   a:	501a      	tstorer	r2, [r3, #0]
   c:	0a05      	tloadr	r2, [pc, #20]	; (24 <blt_smp_func_init+0x24>)
   e:	0b06      	tloadr	r3, [pc, #24]	; (28 <blt_smp_func_init+0x28>)
  10:	501a      	tstorer	r2, [r3, #0]
  12:	0770      	tjex	lr
	...
			14: R_TC32_ABS32	blt_smp_brx
			18: R_TC32_ABS32	func_smp_brx
			1c: R_TC32_ABS32	blt_smp_init
			20: R_TC32_ABS32	func_smp_init
			24: R_TC32_ABS32	blt_smp_enc
			28: R_TC32_ABS32	func_smp_enc

Disassembly of section .bss.smp_sk:

00000000 <smp_sk>:
	...

Disassembly of section .bss.smp_pair_busy:

00000000 <smp_pair_busy>:
	...

Disassembly of section .bss.smp_state:

00000000 <smp_state>:
	...

Disassembly of section .bss.smp_tk:

00000000 <smp_tk>:
	...

Disassembly of section .data.smp_pairingRand:

00000000 <smp_pairingRand>:
   0:	00000017 	tandeq	r0, r0, r7, lsl r0
   4:	00111502 	tandseq	r1, r1, r2, lsl #10
   8:	00040006 	tandeq	r0, r4, r6
	...

Disassembly of section .data.smp_encInfo:

00000000 <smp_encInfo>:
   0:	00000017 	tandeq	r0, r0, r7, lsl r0
   4:	00111502 	tandseq	r1, r1, r2, lsl #10
   8:	00060006 	tandeq	r0, r6, r6
	...

Disassembly of section .rodata.const_u8_16_zero:

00000000 <const_u8_16_zero>:
	...

Disassembly of section .rodata.smp_evid_rand_seed:

00000000 <smp_evid_rand_seed>:
   0:	cf11fa8e 	tservgt	0x0011fa8e
   4:	6ee3b526 	undefined instruction 0x6ee3b526
   8:	3874f479 	tloadmdacc	r4!, {r0, r3, r4, r5, r6, sl, ip, sp, lr, pc}^
   c:	4138684c 	teqmi	r8, ip, asr #16

Disassembly of section .rodata.smp_pairingResp:

00000000 <smp_pairingResp>:
   0:	0000000d 	tandeq	r0, r0, sp
   4:	00070b02 	tandeq	r0, r7, r2, lsl #22
   8:	03020006 	tnandeq	r2, #6
   c:	02100100 	tandseq	r0, r0, #0
  10:	00000001 	tandeq	r0, r0, r1

Disassembly of section .bss.smp_confirm:

00000000 <smp_confirm>:
	...

Disassembly of section .bss.blt_smp_paring_req_recvd:

00000000 <blt_smp_paring_req_recvd>:
	...

Disassembly of section .bss.smp_bonded:

00000000 <smp_bonded>:
	...

Disassembly of section .bss.smp_ltk:

00000000 <smp_ltk>:
   0:	00000000 	tandeq	r0, r0, r0

Disassembly of section .data.smp_pauseEncryptRsp:

00000000 <smp_pauseEncryptRsp>:
   0:	00000003 	tandeq	r0, r0, r3
   4:	000b0103 	tandeq	r0, fp, r3, lsl #2

Disassembly of section .rodata.smp_startEncryptRsp:

00000000 <smp_startEncryptRsp>:
   0:	00000003 	tandeq	r0, r0, r3
   4:	00060103 	tandeq	r0, r6, r3, lsl #2

Disassembly of section .data.smp_masterId:

00000000 <smp_masterId>:
   0:	00000011 	tandeq	r0, r0, r1, lsl r0
   4:	000b0f02 	tandeq	r0, fp, r2, lsl #30
   8:	00070006 	tandeq	r0, r7, r6
	...

Disassembly of section .data.smp_EncryptRsp:

00000000 <smp_EncryptRsp>:
   0:	0000000f 	tandeq	r0, r0, pc
   4:	00040d03 	tandeq	r0, r4, r3, lsl #26
	...

Disassembly of section .data.smp_pairingCnf:

00000000 <smp_pairingCnf>:
   0:	00000017 	tandeq	r0, r0, r7, lsl r0
   4:	00111502 	tandseq	r1, r1, r2, lsl #10
   8:	00030006 	tandeq	r0, r3, r6
	...

Disassembly of section .rodata.smp_secReq:

00000000 <smp_secReq>:
   0:	00000008 	tandeq	r0, r0, r8
   4:	00020602 	tandeq	r0, r2, r2, lsl #12
   8:	010b0006 	tnandeq	fp, r6

Disassembly of section .bss.smp_p1:

00000000 <smp_p1>:
	...

Disassembly of section .bss.smp_p2:

00000000 <smp_p2>:
	...

Disassembly of section .bss.ble_slave_ll_enc_en:

00000000 <ble_slave_ll_enc_en>:
	...

Disassembly of section .bss.start_enc_pending:

00000000 <start_enc_pending>:
	...

Disassembly of section .data.smp_startEncrypt:

00000000 <smp_startEncrypt>:
   0:	00000003 	tandeq	r0, r0, r3
   4:	00050103 	tandeq	r0, r5, r3, lsl #2

Disassembly of section .data.keyDistributeEndCode.3913:

00000000 <keyDistributeEndCode.3913>:
   0:	Address 0x00000000 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

aes_sw.o:     file format elf32-littletc32
rw-rw-rw- 0/0   4180 Jan 30 00:17 2019 aes_sw.o
architecture: tc32, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.AES_cpy32 00000018  00000000  00000000  00000034  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.AES_xtime 00000016  00000000  00000000  0000004c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text._rijndaelSetKey 00000014  00000000  00000000  00000064  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._rijndaelEncrypt 0000016c  00000000  00000000  00000078  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._rijndaelDecrypt 00000174  00000000  00000000  000001e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.user_rijndaelEncrypt 0000002c  00000000  00000000  00000358  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.user_rijndaelDecrypt 0000002c  00000000  00000000  00000384  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .bss.ctx_iks  000000b0  00000000  00000000  000003b0  2**2
                  ALLOC
 11 .rodata.ctx_iv 00000010  00000000  00000000  000003b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .rodata.aes_sw_S 00000100  00000000  00000000  000003c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 13 .rodata.Rcon  0000000c  00000000  00000000  000004c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 .rodata.aes_sw_Si 00000100  00000000  00000000  000004cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .comment      0000001b  00000000  00000000  000005cc  2**0
                  CONTENTS, READONLY
 16 .TC32.attributes 00000010  00000000  00000000  000005e7  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 aes_sw.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.AES_cpy32	00000000 .text.AES_cpy32
00000000 l     F .text.AES_cpy32	00000018 AES_cpy32
00000000 l    d  .text.AES_xtime	00000000 .text.AES_xtime
00000000 l     F .text.AES_xtime	00000016 AES_xtime
00000000 l    d  .text._rijndaelSetKey	00000000 .text._rijndaelSetKey
00000000 l    d  .text._rijndaelEncrypt	00000000 .text._rijndaelEncrypt
00000000 l    d  .text._rijndaelDecrypt	00000000 .text._rijndaelDecrypt
00000000 l    d  .text.user_rijndaelEncrypt	00000000 .text.user_rijndaelEncrypt
00000000 l    d  .text.user_rijndaelDecrypt	00000000 .text.user_rijndaelDecrypt
00000000 l    d  .bss.ctx_iks	00000000 .bss.ctx_iks
00000000 l     O .bss.ctx_iks	000000b0 ctx_iks
00000000 l    d  .rodata.ctx_iv	00000000 .rodata.ctx_iv
00000000 l    d  .rodata.aes_sw_S	00000000 .rodata.aes_sw_S
00000000 l     O .rodata.aes_sw_S	00000100 aes_sw_S
00000000 l    d  .rodata.Rcon	00000000 .rodata.Rcon
00000000 l     O .rodata.Rcon	0000000a Rcon
00000000 l    d  .rodata.aes_sw_Si	00000000 .rodata.aes_sw_Si
00000000 l     O .rodata.aes_sw_Si	00000100 aes_sw_Si
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 g     F .text._rijndaelSetKey	00000014 _rijndaelSetKey
00000000         *UND*	00000000 memcpy
00000010       O *COM*	00000004 ctx_ks
00000000 g     F .text._rijndaelEncrypt	0000016c _rijndaelEncrypt
00000000 g     F .text._rijndaelDecrypt	00000174 _rijndaelDecrypt
00000000 g     F .text.user_rijndaelEncrypt	0000002c user_rijndaelEncrypt
00000000 g     F .text.user_rijndaelDecrypt	0000002c user_rijndaelDecrypt
00000000 g     O .rodata.ctx_iv	00000010 ctx_iv
00000001       O *COM*	00000001 ADC_SAMPLE_CLK
00000001       O *COM*	00000001 ADC_RES
00000001       O *COM*	00000001 ADC_DATA_SIGN



Disassembly of section .text.AES_cpy32:

00000000 <AES_cpy32>:
AES_cpy32():
   0:	6510      	tpush	{r4, lr}
   2:	ec0a      	tadds	r2, r1, #0
   4:	da10      	tloadm	r2!, {r4}
   6:	ec03      	tadds	r3, r0, #0
   8:	d310      	tstorem	r3!, {r4}
   a:	5849      	tloadr	r1, [r1, #4]
   c:	5041      	tstorer	r1, [r0, #4]
   e:	5851      	tloadr	r1, [r2, #4]
  10:	5059      	tstorer	r1, [r3, #4]
  12:	5892      	tloadr	r2, [r2, #8]
  14:	509a      	tstorer	r2, [r3, #8]
  16:	6d10      	tpop	{r4, pc}

Disassembly of section .text.AES_xtime:

00000000 <AES_xtime>:
AES_xtime():
   0:	f042      	tshftls	r2, r0, #1
   2:	f603      	tshftls	r3, r0, #24
   4:	c504      	tjpl.n	10 <AES_xtime+0x10>
   6:	a31b      	tmovs	r3, #27
   8:	ec10      	tadds	r0, r2, #0
   a:	0058      	txors	r0, r3
   c:	f600      	tshftls	r0, r0, #24
   e:	8000      	tj.n	12 <AES_xtime+0x12>
  10:	f640      	tshftls	r0, r0, #25
  12:	fe00      	tshftrs	r0, r0, #24
  14:	0770      	tjex	lr

Disassembly of section .text._rijndaelSetKey:

00000000 <_rijndaelSetKey>:
_rijndaelSetKey():
   0:	6500      	tpush	{lr}
   2:	ec01      	tadds	r1, r0, #0
   4:	0802      	tloadr	r0, [pc, #8]	; (10 <_rijndaelSetKey+0x10>)
   6:	a210      	tmovs	r2, #16
   8:	97ff 9ffe 	tjl	0 <memcpy>
			8: R_TC32_CALL	memcpy
   c:	6d00      	tpop	{pc}
   e:	46c0      	tnop			; (mov r8, r8)
  10:	00000000 	tandeq	r0, r0, r0
			10: R_TC32_ABS32	ctx_ks

Disassembly of section .text._rijndaelEncrypt:

00000000 <_rijndaelEncrypt>:
_rijndaelEncrypt():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6090      	tsub	sp, #64	; 0x40
   4:	ec06      	tadds	r6, r0, #0
   6:	7b0c      	tadd	r3, sp, #48	; 0x30
   8:	0a55      	tloadr	r2, [pc, #340]	; (160 <_rijndaelEncrypt+0x160>)
   a:	ec19      	tadds	r1, r3, #0
   c:	da31      	tloadm	r2!, {r0, r4, r5}
   e:	d131      	tstorem	r1!, {r0, r4, r5}
  10:	5812      	tloadr	r2, [r2, #0]
  12:	500a      	tstorer	r2, [r1, #0]
  14:	ec32      	tadds	r2, r6, #0
  16:	7910      	tadd	r1, sp, #64	; 0x40
  18:	db01      	tloadm	r3!, {r0}
  1a:	5814      	tloadr	r4, [r2, #0]
  1c:	0060      	txors	r0, r4
  1e:	d201      	tstorem	r2!, {r0}
  20:	028b      	tcmp	r3, r1
  22:	c1f9      	tjne.n	18 <_rijndaelEncrypt+0x18>
  24:	a000      	tmovs	r0, #0
  26:	3003      	tstorer	r0, [sp, #12]
  28:	a503      	tmovs	r5, #3
  2a:	8092      	tj.n	152 <_rijndaelEncrypt+0x152>
  2c:	ec2b      	tadds	r3, r5, #0
  2e:	0023      	tands	r3, r4
  30:	f09b      	tshftls	r3, r3, #2
  32:	18f3      	tloadr	r3, [r6, r3]
  34:	a2ff      	tmovs	r2, #255	; 0xff
  36:	0013      	tands	r3, r2
  38:	084a      	tloadr	r0, [pc, #296]	; (164 <_rijndaelEncrypt+0x164>)
  3a:	1cc3      	tloadrb	r3, [r0, r3]
  3c:	3300      	tstorer	r3, [sp, #0]
  3e:	b401      	tadds	r4, #1
  40:	ec2b      	tadds	r3, r5, #0
  42:	0023      	tands	r3, r4
  44:	f09b      	tshftls	r3, r3, #2
  46:	18f3      	tloadr	r3, [r6, r3]
  48:	fa1b      	tshftrs	r3, r3, #8
  4a:	0013      	tands	r3, r2
  4c:	1cc3      	tloadrb	r3, [r0, r3]
  4e:	3301      	tstorer	r3, [sp, #4]
  50:	ec63      	tadds	r3, r4, #1
  52:	002b      	tands	r3, r5
  54:	f09b      	tshftls	r3, r3, #2
  56:	18f3      	tloadr	r3, [r6, r3]
  58:	fc1b      	tshftrs	r3, r3, #16
  5a:	0013      	tands	r3, r2
  5c:	1cc3      	tloadrb	r3, [r0, r3]
  5e:	3302      	tstorer	r3, [sp, #8]
  60:	eca3      	tadds	r3, r4, #2
  62:	002b      	tands	r3, r5
  64:	f09b      	tshftls	r3, r3, #2
  66:	18f3      	tloadr	r3, [r6, r3]
  68:	fe1b      	tshftrs	r3, r3, #24
  6a:	1cc7      	tloadrb	r7, [r0, r3]
  6c:	3a03      	tloadr	r2, [sp, #12]
  6e:	aa09      	tcmp	r2, #9
  70:	c029      	tjeq.n	c6 <_rijndaelEncrypt+0xc6>
  72:	3801      	tloadr	r0, [sp, #4]
  74:	3b00      	tloadr	r3, [sp, #0]
  76:	0058      	txors	r0, r3
  78:	3a02      	tloadr	r2, [sp, #8]
  7a:	007a      	txors	r2, r7
  7c:	3205      	tstorer	r2, [sp, #20]
  7e:	0042      	txors	r2, r0
  80:	3204      	tstorer	r2, [sp, #16]
  82:	97ff 9ffe 	tjl	0 <_rijndaelEncrypt>
			82: R_TC32_CALL	AES_xtime
  86:	3b04      	tloadr	r3, [sp, #16]
  88:	3a00      	tloadr	r2, [sp, #0]
  8a:	0053      	txors	r3, r2
  8c:	0043      	txors	r3, r0
  8e:	3307      	tstorer	r3, [sp, #28]
  90:	3802      	tloadr	r0, [sp, #8]
  92:	3b01      	tloadr	r3, [sp, #4]
  94:	0058      	txors	r0, r3
  96:	97ff 9ffe 	tjl	0 <_rijndaelEncrypt>
			96: R_TC32_CALL	AES_xtime
  9a:	3b04      	tloadr	r3, [sp, #16]
  9c:	3a01      	tloadr	r2, [sp, #4]
  9e:	0053      	txors	r3, r2
  a0:	0043      	txors	r3, r0
  a2:	3301      	tstorer	r3, [sp, #4]
  a4:	3805      	tloadr	r0, [sp, #20]
  a6:	97ff 9ffe 	tjl	0 <_rijndaelEncrypt>
			a6: R_TC32_CALL	AES_xtime
  aa:	3b04      	tloadr	r3, [sp, #16]
  ac:	3a02      	tloadr	r2, [sp, #8]
  ae:	0053      	txors	r3, r2
  b0:	0043      	txors	r3, r0
  b2:	3302      	tstorer	r3, [sp, #8]
  b4:	3800      	tloadr	r0, [sp, #0]
  b6:	0078      	txors	r0, r7
  b8:	97ff 9ffe 	tjl	0 <_rijndaelEncrypt>
			b8: R_TC32_CALL	AES_xtime
  bc:	3b04      	tloadr	r3, [sp, #16]
  be:	005f      	txors	r7, r3
  c0:	0047      	txors	r7, r0
  c2:	3807      	tloadr	r0, [sp, #28]
  c4:	3000      	tstorer	r0, [sp, #0]
  c6:	f63f      	tshftls	r7, r7, #24
  c8:	3a02      	tloadr	r2, [sp, #8]
  ca:	f413      	tshftls	r3, r2, #16
  cc:	031f      	tors	r7, r3
  ce:	3b00      	tloadr	r3, [sp, #0]
  d0:	031f      	tors	r7, r3
  d2:	3801      	tloadr	r0, [sp, #4]
  d4:	f203      	tshftls	r3, r0, #8
  d6:	031f      	tors	r7, r3
  d8:	3a06      	tloadr	r2, [sp, #24]
  da:	d280      	tstorem	r2!, {r7}
  dc:	3206      	tstorer	r2, [sp, #24]
  de:	ac04      	tcmp	r4, #4
  e0:	c1a4      	tjne.n	2c <_rijndaelEncrypt+0x2c>
  e2:	a300      	tmovs	r3, #0
  e4:	ecd9      	tadds	r1, r3, #3
  e6:	0029      	tands	r1, r5
  e8:	f089      	tshftls	r1, r1, #2
  ea:	7a0c      	tadd	r2, sp, #48	; 0x30
  ec:	1889      	tloadr	r1, [r1, r2]
  ee:	021d      	tnand	r5, r3
  f0:	c116      	tjne.n	120 <_rijndaelEncrypt+0x120>
  f2:	a220      	tmovs	r2, #32
  f4:	a700      	tmovs	r7, #0
  f6:	a41f      	tmovs	r4, #31
  f8:	069c      	tmov	ip, r3
  fa:	f23f      	tshftls	r7, r7, #8
  fc:	ec20      	tadds	r0, r4, #0
  fe:	0010      	tands	r0, r2
 100:	ec0b      	tadds	r3, r1, #0
 102:	00c3      	tshftrs	r3, r0
 104:	3300      	tstorer	r3, [sp, #0]
 106:	a0ff      	tmovs	r0, #255	; 0xff
 108:	0003      	tands	r3, r0
 10a:	0816      	tloadr	r0, [pc, #88]	; (164 <_rijndaelEncrypt+0x164>)
 10c:	1cc3      	tloadrb	r3, [r0, r3]
 10e:	031f      	tors	r7, r3
 110:	ba08      	tsubs	r2, #8
 112:	aa00      	tcmp	r2, #0
 114:	c1f1      	tjne.n	fa <_rijndaelEncrypt+0xfa>
 116:	0663      	tmov	r3, ip
 118:	0a13      	tloadr	r2, [pc, #76]	; (168 <_rijndaelEncrypt+0x168>)
 11a:	3c03      	tloadr	r4, [sp, #12]
 11c:	1d11      	tloadrb	r1, [r2, r4]
 11e:	0079      	txors	r1, r7
 120:	ec2c      	tadds	r4, r5, #0
 122:	001c      	tands	r4, r3
 124:	7a0c      	tadd	r2, sp, #48	; 0x30
 126:	f0a4      	tshftls	r4, r4, #2
 128:	18a7      	tloadr	r7, [r4, r2]
 12a:	0079      	txors	r1, r7
 12c:	10a1      	tstorer	r1, [r4, r2]
 12e:	b301      	tadds	r3, #1
 130:	ab04      	tcmp	r3, #4
 132:	c1d7      	tjne.n	e4 <_rijndaelEncrypt+0xe4>
 134:	a300      	tmovs	r3, #0
 136:	7a0c      	tadd	r2, sp, #48	; 0x30
 138:	18d1      	tloadr	r1, [r2, r3]
 13a:	7a08      	tadd	r2, sp, #32
 13c:	18d2      	tloadr	r2, [r2, r3]
 13e:	004a      	txors	r2, r1
 140:	10f2      	tstorer	r2, [r6, r3]
 142:	b304      	tadds	r3, #4
 144:	ab10      	tcmp	r3, #16
 146:	c1f6      	tjne.n	136 <_rijndaelEncrypt+0x136>
 148:	3803      	tloadr	r0, [sp, #12]
 14a:	b001      	tadds	r0, #1
 14c:	3003      	tstorer	r0, [sp, #12]
 14e:	a80a      	tcmp	r0, #10
 150:	c003      	tjeq.n	15a <_rijndaelEncrypt+0x15a>
 152:	7a08      	tadd	r2, sp, #32
 154:	3206      	tstorer	r2, [sp, #24]
 156:	a400      	tmovs	r4, #0
 158:	8768      	tj.n	2c <_rijndaelEncrypt+0x2c>
 15a:	6010      	tadd	sp, #64	; 0x40
 15c:	6df0      	tpop	{r4, r5, r6, r7, pc}
 15e:	46c0      	tnop			; (mov r8, r8)
	...
			160: R_TC32_ABS32	ctx_ks
			164: R_TC32_ABS32	.rodata.aes_sw_S
			168: R_TC32_ABS32	.rodata.Rcon

Disassembly of section .text._rijndaelDecrypt:

00000000 <_rijndaelDecrypt>:
_rijndaelDecrypt():
   0:	65f0      	tpush	{r4, r5, r6, r7, lr}
   2:	6090      	tsub	sp, #64	; 0x40
   4:	ec06      	tadds	r6, r0, #0
   6:	ec02      	tadds	r2, r0, #0
   8:	b20c      	tadds	r2, #12
   a:	0b58      	tloadr	r3, [pc, #352]	; (16c <_rijndaelDecrypt+0x16c>)
   c:	ec19      	tadds	r1, r3, #0
   e:	b1a0      	tadds	r1, #160	; 0xa0
  10:	b3b0      	tadds	r3, #176	; 0xb0
  12:	bb04      	tsubs	r3, #4
  14:	5814      	tloadr	r4, [r2, #0]
  16:	5818      	tloadr	r0, [r3, #0]
  18:	0060      	txors	r0, r4
  1a:	5010      	tstorer	r0, [r2, #0]
  1c:	ba04      	tsubs	r2, #4
  1e:	028b      	tcmp	r3, r1
  20:	c1f7      	tjne.n	12 <_rijndaelDecrypt+0x12>
  22:	a000      	tmovs	r0, #0
  24:	3003      	tstorer	r0, [sp, #12]
  26:	0b51      	tloadr	r3, [pc, #324]	; (16c <_rijndaelDecrypt+0x16c>)
  28:	b3a0      	tadds	r3, #160	; 0xa0
  2a:	3305      	tstorer	r3, [sp, #20]
  2c:	8099      	tj.n	162 <_rijndaelDecrypt+0x162>
  2e:	ece3      	tadds	r3, r4, #3
  30:	a103      	tmovs	r1, #3
  32:	000b      	tands	r3, r1
  34:	f09b      	tshftls	r3, r3, #2
  36:	18f3      	tloadr	r3, [r6, r3]
  38:	a2ff      	tmovs	r2, #255	; 0xff
  3a:	0013      	tands	r3, r2
  3c:	084c      	tloadr	r0, [pc, #304]	; (170 <_rijndaelDecrypt+0x170>)
  3e:	1cc3      	tloadrb	r3, [r0, r3]
  40:	3300      	tstorer	r3, [sp, #0]
  42:	eca3      	tadds	r3, r4, #2
  44:	000b      	tands	r3, r1
  46:	f09b      	tshftls	r3, r3, #2
  48:	18f3      	tloadr	r3, [r6, r3]
  4a:	fa1b      	tshftrs	r3, r3, #8
  4c:	0013      	tands	r3, r2
  4e:	1cc3      	tloadrb	r3, [r0, r3]
  50:	3301      	tstorer	r3, [sp, #4]
  52:	ec63      	tadds	r3, r4, #1
  54:	000b      	tands	r3, r1
  56:	f09b      	tshftls	r3, r3, #2
  58:	18f3      	tloadr	r3, [r6, r3]
  5a:	fc1b      	tshftrs	r3, r3, #16
  5c:	0013      	tands	r3, r2
  5e:	1cc3      	tloadrb	r3, [r0, r3]
  60:	3302      	tstorer	r3, [sp, #8]
  62:	a303      	tmovs	r3, #3
  64:	0023      	tands	r3, r4
  66:	f09b      	tshftls	r3, r3, #2
  68:	18f3      	tloadr	r3, [r6, r3]
  6a:	fe1b      	tshftrs	r3, r3, #24
  6c:	1cc7      	tloadrb	r7, [r0, r3]
  6e:	3903      	tloadr	r1, [sp, #12]
  70:	a909      	tcmp	r1, #9
  72:	c051      	tjeq.n	118 <_rijndaelDecrypt+0x118>
  74:	3a01      	tloadr	r2, [sp, #4]
  76:	3b00      	tloadr	r3, [sp, #0]
  78:	005a      	txors	r2, r3
  7a:	3204      	tstorer	r2, [sp, #16]
  7c:	ec10      	tadds	r0, r2, #0
  7e:	97ff 9ffe 	tjl	0 <_rijndaelDecrypt>
			7e: R_TC32_CALL	AES_xtime
  82:	3009      	tstorer	r0, [sp, #36]	; 0x24
  84:	3802      	tloadr	r0, [sp, #8]
  86:	3901      	tloadr	r1, [sp, #4]
  88:	0048      	txors	r0, r1
  8a:	3001      	tstorer	r0, [sp, #4]
  8c:	97ff 9ffe 	tjl	0 <_rijndaelDecrypt>
			8c: R_TC32_CALL	AES_xtime
  90:	3006      	tstorer	r0, [sp, #24]
  92:	3802      	tloadr	r0, [sp, #8]
  94:	0078      	txors	r0, r7
  96:	97ff 9ffe 	tjl	0 <_rijndaelDecrypt>
			96: R_TC32_CALL	AES_xtime
  9a:	300a      	tstorer	r0, [sp, #40]	; 0x28
  9c:	3a00      	tloadr	r2, [sp, #0]
  9e:	007a      	txors	r2, r7
  a0:	3200      	tstorer	r2, [sp, #0]
  a2:	ec10      	tadds	r0, r2, #0
  a4:	97ff 9ffe 	tjl	0 <_rijndaelDecrypt>
			a4: R_TC32_CALL	AES_xtime
  a8:	300b      	tstorer	r0, [sp, #44]	; 0x2c
  aa:	3806      	tloadr	r0, [sp, #24]
  ac:	3b09      	tloadr	r3, [sp, #36]	; 0x24
  ae:	0058      	txors	r0, r3
  b0:	97ff 9ffe 	tjl	0 <_rijndaelDecrypt>
			b0: R_TC32_CALL	AES_xtime
  b4:	3007      	tstorer	r0, [sp, #28]
  b6:	380a      	tloadr	r0, [sp, #40]	; 0x28
  b8:	3906      	tloadr	r1, [sp, #24]
  ba:	0048      	txors	r0, r1
  bc:	97ff 9ffe 	tjl	0 <_rijndaelDecrypt>
			bc: R_TC32_CALL	AES_xtime
  c0:	3008      	tstorer	r0, [sp, #32]
  c2:	3a07      	tloadr	r2, [sp, #28]
  c4:	0050      	txors	r0, r2
  c6:	97ff 9ffe 	tjl	0 <_rijndaelDecrypt>
			c6: R_TC32_CALL	AES_xtime
  ca:	3b01      	tloadr	r3, [sp, #4]
  cc:	007b      	txors	r3, r7
  ce:	3909      	tloadr	r1, [sp, #36]	; 0x24
  d0:	004b      	txors	r3, r1
  d2:	3a07      	tloadr	r2, [sp, #28]
  d4:	005a      	txors	r2, r3
  d6:	0694      	tmov	ip, r2
  d8:	3b00      	tloadr	r3, [sp, #0]
  da:	3902      	tloadr	r1, [sp, #8]
  dc:	004b      	txors	r3, r1
  de:	3a06      	tloadr	r2, [sp, #24]
  e0:	0053      	txors	r3, r2
  e2:	3908      	tloadr	r1, [sp, #32]
  e4:	004b      	txors	r3, r1
  e6:	3a04      	tloadr	r2, [sp, #16]
  e8:	0057      	txors	r7, r2
  ea:	390a      	tloadr	r1, [sp, #40]	; 0x28
  ec:	004f      	txors	r7, r1
  ee:	3a07      	tloadr	r2, [sp, #28]
  f0:	0057      	txors	r7, r2
  f2:	3904      	tloadr	r1, [sp, #16]
  f4:	3a02      	tloadr	r2, [sp, #8]
  f6:	0051      	txors	r1, r2
  f8:	3a0b      	tloadr	r2, [sp, #44]	; 0x2c
  fa:	0051      	txors	r1, r2
  fc:	3a08      	tloadr	r2, [sp, #32]
  fe:	0051      	txors	r1, r2
 100:	0041      	txors	r1, r0
 102:	f609      	tshftls	r1, r1, #24
 104:	0047      	txors	r7, r0
 106:	f43f      	tshftls	r7, r7, #16
 108:	030f      	tors	r7, r1
 10a:	0662      	tmov	r2, ip
 10c:	0042      	txors	r2, r0
 10e:	0317      	tors	r7, r2
 110:	0058      	txors	r0, r3
 112:	f200      	tshftls	r0, r0, #8
 114:	0307      	tors	r7, r0
 116:	8008      	tj.n	12a <_rijndaelDecrypt+0x12a>
 118:	f63f      	tshftls	r7, r7, #24
 11a:	3b00      	tloadr	r3, [sp, #0]
 11c:	031f      	tors	r7, r3
 11e:	3802      	tloadr	r0, [sp, #8]
 120:	f403      	tshftls	r3, r0, #16
 122:	031f      	tors	r7, r3
 124:	3901      	tloadr	r1, [sp, #4]
 126:	f20b      	tshftls	r3, r1, #8
 128:	031f      	tors	r7, r3
 12a:	502f      	tstorer	r7, [r5, #0]
 12c:	bc01      	tsubs	r4, #1
 12e:	bd04      	tsubs	r5, #4
 130:	ac00      	tcmp	r4, #0
 132:	c000      	tjeq.n	136 <_rijndaelDecrypt+0x136>
 134:	877b      	tj.n	2e <_rijndaelDecrypt+0x2e>
 136:	3a05      	tloadr	r2, [sp, #20]
 138:	a300      	tmovs	r3, #0
 13a:	790c      	tadd	r1, sp, #48	; 0x30
 13c:	ba04      	tsubs	r2, #4
 13e:	e8f0      	tadds	r0, r6, r3
 140:	e8cc      	tadds	r4, r1, r3
 142:	5815      	tloadr	r5, [r2, #0]
 144:	58e4      	tloadr	r4, [r4, #12]
 146:	006c      	txors	r4, r5
 148:	50c4      	tstorer	r4, [r0, #12]
 14a:	bb04      	tsubs	r3, #4
 14c:	ec18      	tadds	r0, r3, #0
 14e:	b010      	tadds	r0, #16
 150:	c1f4      	tjne.n	13c <_rijndaelDecrypt+0x13c>
 152:	3905      	tloadr	r1, [sp, #20]
 154:	b910      	tsubs	r1, #16
 156:	3105      	tstorer	r1, [sp, #20]
 158:	3a03      	tloadr	r2, [sp, #12]
 15a:	b201      	tadds	r2, #1
 15c:	3203      	tstorer	r2, [sp, #12]
 15e:	aa0a      	tcmp	r2, #10
 160:	c002      	tjeq.n	168 <_rijndaelDecrypt+0x168>
 162:	7d0f      	tadd	r5, sp, #60	; 0x3c
 164:	a404      	tmovs	r4, #4
 166:	8762      	tj.n	2e <_rijndaelDecrypt+0x2e>
 168:	6010      	tadd	sp, #64	; 0x40
 16a:	6df0      	tpop	{r4, r5, r6, r7, pc}
	...
			16c: R_TC32_ABS32	.bss.ctx_iks
			170: R_TC32_ABS32	.rodata.aes_sw_Si

Disassembly of section .text.user_rijndaelEncrypt:

00000000 <user_rijndaelEncrypt>:
user_rijndaelEncrypt():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	6084      	tsub	sp, #16
   4:	ec05      	tadds	r5, r0, #0
   6:	ec0e      	tadds	r6, r1, #0
   8:	0668      	tmov	r0, sp
   a:	0907      	tloadr	r1, [pc, #28]	; (28 <user_rijndaelEncrypt+0x28>)
   c:	97ff 9ffe 	tjl	0 <user_rijndaelEncrypt>
			c: R_TC32_CALL	AES_cpy32
  10:	ec28      	tadds	r0, r5, #0
  12:	97ff 9ffe 	tjl	0 <user_rijndaelEncrypt>
			12: R_TC32_CALL	_rijndaelSetKey
  16:	ec30      	tadds	r0, r6, #0
  18:	97ff 9ffe 	tjl	0 <user_rijndaelEncrypt>
			18: R_TC32_CALL	_rijndaelEncrypt
  1c:	0668      	tmov	r0, sp
  1e:	97ff 9ffe 	tjl	0 <user_rijndaelEncrypt>
			1e: R_TC32_CALL	_rijndaelSetKey
  22:	6004      	tadd	sp, #16
  24:	6d70      	tpop	{r4, r5, r6, pc}
  26:	46c0      	tnop			; (mov r8, r8)
  28:	00000000 	tandeq	r0, r0, r0
			28: R_TC32_ABS32	ctx_ks

Disassembly of section .text.user_rijndaelDecrypt:

00000000 <user_rijndaelDecrypt>:
user_rijndaelDecrypt():
   0:	6570      	tpush	{r4, r5, r6, lr}
   2:	6084      	tsub	sp, #16
   4:	ec05      	tadds	r5, r0, #0
   6:	ec0e      	tadds	r6, r1, #0
   8:	0668      	tmov	r0, sp
   a:	0907      	tloadr	r1, [pc, #28]	; (28 <user_rijndaelDecrypt+0x28>)
   c:	97ff 9ffe 	tjl	0 <user_rijndaelDecrypt>
			c: R_TC32_CALL	AES_cpy32
  10:	ec28      	tadds	r0, r5, #0
  12:	97ff 9ffe 	tjl	0 <user_rijndaelDecrypt>
			12: R_TC32_CALL	_rijndaelSetKey
  16:	ec30      	tadds	r0, r6, #0
  18:	97ff 9ffe 	tjl	0 <user_rijndaelDecrypt>
			18: R_TC32_CALL	_rijndaelDecrypt
  1c:	0668      	tmov	r0, sp
  1e:	97ff 9ffe 	tjl	0 <user_rijndaelDecrypt>
			1e: R_TC32_CALL	_rijndaelSetKey
  22:	6004      	tadd	sp, #16
  24:	6d70      	tpop	{r4, r5, r6, pc}
  26:	46c0      	tnop			; (mov r8, r8)
  28:	00000000 	tandeq	r0, r0, r0
			28: R_TC32_ABS32	.bss.ctx_iks

Disassembly of section .bss.ctx_iks:

00000000 <ctx_iks>:
	...

Disassembly of section .rodata.ctx_iv:

00000000 <ctx_iv>:
   0:	03020100 	tnandeq	r2, #0
   4:	07060504 	tstorereq	r0, [r6, -r4, lsl #10]
   8:	0b0a0908 	tjleq	282430 <AES_cpy32+0x282430>
   c:	0f0e0d0c 	tserveq	0x000e0d0c

Disassembly of section .rodata.aes_sw_S:

00000000 <aes_sw_S>:
   0:	7b777c63 	tjlvc	1ddf194 <AES_cpy32+0x1ddf194>
   4:	c56f6bf2 	tstorerbgt	r6, [pc, #-3058]!	; fffff41a <AES_cpy32+0xfffff41a>
   8:	2b670130 	tjlcs	19c04d0 <AES_cpy32+0x19c04d0>
   c:	76abd7fe 	undefined instruction 0x76abd7fe
  10:	7dc982ca 	undefined instruction 0x7dc982ca
  14:	f04759fa 	undefined instruction 0xf04759fa
  18:	afa2d4ad 	tservge	0x00a2d4ad
  1c:	c072a49c 	tloadrbgt	sl, [r2], #-76	; 0xffffffb4
  20:	2693fdb7 	undefined instruction 0x2693fdb7
  24:	ccf73f36 	undefined instruction 0xccf73f36
  28:	f1e5a534 	undefined instruction 0xf1e5a534
  2c:	1531d871 	tloadrne	sp, [r1, #-2161]!	; 0x871
  30:	c323c704 	teqgt	r3, #1048576	; 0x100000
  34:	9a059618 	tjls	16589c <AES_cpy32+0x16589c>
  38:	e2801207 	tadd	r1, r0, #1879048192	; 0x70000000
  3c:	75b227eb 	tloadrvc	r2, [r2, #2027]!	; 0x7eb
  40:	1a2c8309 	tjne	b20c6c <AES_cpy32+0xb20c6c>
  44:	a05a6e1b 	tsubsge	r6, sl, fp, lsl lr
  48:	b3d63b52 	tbclrslt	r3, r6, #83968	; 0x14800
  4c:	842fe329 	tstorerthi	lr, [pc], #809	; 54 <aes_sw_S+0x54>
  50:	ed00d153 	undefined instruction 0xed00d153
  54:	5bb1fc20 	tjlpl	fec7f0dc <AES_cpy32+0xfec7f0dc>
  58:	39becb6a 	tloadmibcc	lr!, {r1, r3, r5, r6, r8, r9, fp, lr, pc}
  5c:	cf584c4a 	tservgt	0x00584c4a
  60:	fbaaefd0 	tjlex	feabbfaa <AES_cpy32+0xfeabbfaa>
  64:	85334d43 	tloadrhi	r4, [r3, #-3395]!	; 0xd43
  68:	7f02f945 	tservvc	0x0002f945
  6c:	a89f3c50 	tloadmge	pc, {r4, r6, sl, fp, ip, sp}
  70:	8f40a351 	tservhi	0x0040a351
  74:	f5389d92 	undefined instruction 0xf5389d92
  78:	21dab6bc 	tloadrhcs	fp, [sl, #108]	; 0x6c
  7c:	d2f3ff10 	trsubcsle	pc, r3, #64	; 0x40
  80:	ec130ccd 	undefined instruction 0xec130ccd
  84:	1744975f 	undefined instruction 0x1744975f
  88:	3d7ea7c4 	undefined instruction 0x3d7ea7c4
  8c:	73195d64 	tnandvc	r9, #6400	; 0x1900
  90:	dc4f8160 	undefined instruction 0xdc4f8160
  94:	88902a22 	tloadmhi	r0, {r1, r5, r9, fp, sp}
  98:	14b8ee46 	tloadrtne	lr, [r8], #3654	; 0xe46
  9c:	db0b5ede 	tjlle	2d7c1c <AES_cpy32+0x2d7c1c>
  a0:	0a3a32e0 	tjeq	e8cc28 <AES_cpy32+0xe8cc28>
  a4:	5c240649 	undefined instruction 0x5c240649
  a8:	62acd3c2 	taddcvs	sp, ip, #134217731	; 0x8000003
  ac:	79e49591 	tstormmibvc	r4!, {r0, r4, r7, r8, sl, ip, pc}^
  b0:	6d37c8e7 	undefined instruction 0x6d37c8e7
  b4:	a94ed58d 	tstormmdbge	lr, {r0, r2, r3, r7, r8, sl, ip, lr, pc}^
  b8:	eaf4566c 	tj	ffd15a70 <AES_cpy32+0xffd15a70>
  bc:	08ae7a65 	tstormmiaeq	lr!, {r0, r2, r5, r6, r9, fp, ip, sp, lr}
  c0:	2e2578ba 	undefined instruction 0x2e2578ba
  c4:	c6b4a61c 	undefined instruction 0xc6b4a61c
  c8:	1f74dde8 	tservne	0x0074dde8
  cc:	8a8bbd4b 	tjhi	fe2ef600 <AES_cpy32+0xfe2ef600>
  d0:	66b53e70 	undefined instruction 0x66b53e70
  d4:	0ef60348 	undefined instruction 0x0ef60348
  d8:	b9573561 	tloadmdblt	r7, {r0, r5, r6, r8, sl, ip, sp}^
  dc:	9e1dc186 	undefined instruction 0x9e1dc186
  e0:	1198f8e1 	torsne	pc, r8, r1, ror #17
  e4:	948ed969 	tstorerls	sp, [lr], #2409	; 0x969
  e8:	e9871e9b 	tstormmib	r7, {r0, r1, r3, r4, r7, r9, sl, fp, ip}
  ec:	df2855ce 	tservle	0x002855ce
  f0:	0d89a18c 	undefined instruction 0x0d89a18c
  f4:	6842e6bf 	tstormmdavs	r2, {r0, r1, r2, r3, r4, r5, r7, r9, sl, sp, lr, pc}^
  f8:	0f2d9941 	tserveq	0x002d9941
  fc:	16bb54b0 	undefined instruction 0x16bb54b0

Disassembly of section .rodata.Rcon:

00000000 <Rcon>:
   0:	08040201 	tstormmdaeq	r4, {r0, r9}
   4:	80402010 	tsubhi	r2, r0, r0, lsl r0
   8:	0000361b 	tandeq	r3, r0, fp, lsl r6

Disassembly of section .rodata.aes_sw_Si:

00000000 <aes_sw_Si>:
   0:	d56a0952 	tstorerble	r0, [sl, #-2386]!	; 0x952
   4:	38a53630 	tstormmiacc	r5!, {r4, r5, r9, sl, ip, sp}
   8:	9ea340bf 	undefined instruction 0x9ea340bf
   c:	fbd7f381 	tjlex	ff5fce1a <AES_cpy32+0xff5fce1a>
  10:	8239e37c 	txorshi	lr, r9, #-268435455	; 0xf0000001
  14:	87ff2f9b 	undefined instruction 0x87ff2f9b
  18:	44438e34 	tstorerbmi	r8, [r3], #-3636	; 0xe34
  1c:	cbe9dec4 	tjlgt	ffa77b34 <AES_cpy32+0xffa77b34>
  20:	32947b54 	taddscc	r7, r4, #86016	; 0x15000
  24:	3d23c2a6 	undefined instruction 0x3d23c2a6
  28:	0b954cee 	tjleq	fe5533e8 <AES_cpy32+0xfe5533e8>
  2c:	4ec3fa42 	undefined instruction 0x4ec3fa42
  30:	66a12e08 	tstorertvs	r2, [r1], r8, lsl #28
  34:	b224d928 	txorlt	sp, r4, #655360	; 0xa0000
  38:	49a25b76 	tstormmibmi	r2!, {r1, r2, r4, r5, r6, r8, r9, fp, ip, lr}
  3c:	25d18b6d 	tloadrbcs	r8, [r1, #2925]	; 0xb6d
  40:	64f6f872 	tloadrbtvs	pc, [r6], #2162	; 0x872
  44:	16986886 	tloadrne	r6, [r8], r6, lsl #17
  48:	cc5ca4d4 	undefined instruction 0xcc5ca4d4
  4c:	92b6655d 	taddcsls	r6, r6, #390070272	; 0x17400000
  50:	5048706c 	tsubpl	r7, r8, ip, rrx
  54:	dab9edfd 	tjle	fee7b850 <AES_cpy32+0xfee7b850>
  58:	5746155e 	undefined instruction 0x5746155e
  5c:	849d8da7 	tloadrhi	r8, [sp], #3495	; 0xda7
  60:	00abd890 	umlaleq	sp, fp, r0, r8
  64:	0ad3bc8c 	tjeq	ff4ef29c <AES_cpy32+0xff4ef29c>
  68:	0558e4f7 	tloadrbeq	lr, [r8, #-1271]	; 0x4f7
  6c:	0645b3b8 	undefined instruction 0x0645b3b8
  70:	8f1e2cd0 	tservhi	0x001e2cd0
  74:	020f3fca 	tandeq	r3, pc, #808	; 0x328
  78:	03bdafc1 	undefined instruction 0x03bdafc1
  7c:	6b8a1301 	tjlvs	fe284c88 <AES_cpy32+0xfe284c88>
  80:	4111913a 	tnandmi	r1, sl, lsr r1
  84:	eadc674f 	tj	ff719dc8 <AES_cpy32+0xff719dc8>
  88:	cecff297 	undefined instruction 0xcecff297
  8c:	73e6b4f0 	tmovnvc	fp, #-268435456	; 0xf0000000
  90:	2274ac96 	trsubscs	sl, r4, #38400	; 0x9600
  94:	8535ade7 	tloadrhi	sl, [r5, #-3559]!	; 0xde7
  98:	e837f9e2 	tloadmda	r7!, {r1, r5, r6, r7, r8, fp, ip, sp, lr, pc}
  9c:	6edf751c 	undefined instruction 0x6edf751c
  a0:	711af147 	tnandpvc	sl, r7, asr #2
  a4:	89c5291d 	tstormmibhi	r5, {r0, r2, r3, r4, r8, fp, sp}^
  a8:	0e62b76f 	undefined instruction 0x0e62b76f
  ac:	1bbe18aa 	tjlne	fef8635c <AES_cpy32+0xfef8635c>
  b0:	4b3e56fc 	tjlmi	f95ca8 <AES_cpy32+0xf95ca8>
  b4:	2079d2c6 	trsubscs	sp, r9, r6, asr #5
  b8:	fec0db9a 	undefined instruction 0xfec0db9a
  bc:	f45acd78 	undefined instruction 0xf45acd78
  c0:	33a8dd1f 	undefined instruction 0x33a8dd1f
  c4:	31c70788 	tbclrcc	r0, r7, r8, lsl #15
  c8:	591012b1 	tloadmdbpl	r0, {r0, r4, r5, r7, r9, ip}
  cc:	5fec8027 	tservpl	0x00ec8027
  d0:	a97f5160 	tloadmdbge	pc!, {r5, r6, r8, ip, lr}^
  d4:	0d4ab519 	undefined instruction 0x0d4ab519
  d8:	9f7ae52d 	tservls	0x007ae52d
  dc:	ef9cc993 	tserv	0x009cc993
  e0:	4d3be0a0 	undefined instruction 0x4d3be0a0
  e4:	b0f52aae 	trsubcslt	r2, r5, lr, lsr #21
  e8:	3cbbebc8 	undefined instruction 0x3cbbebc8
  ec:	61995383 	torsvs	r5, r9, r3, lsl #7
  f0:	7e042b17 	undefined instruction 0x7e042b17
  f4:	26d677ba 	undefined instruction 0x26d677ba
  f8:	631469e1 	tnandvs	r4, #3686400	; 0x384000
  fc:	7d0c2155 	undefined instruction 0x7d0c2155

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	tcmpmi	r3, #0
   4:	4728203a 	undefined instruction 0x4728203a
   8:	2029554e 	txorcs	r5, r9, lr, asr #10
   c:	2e352e34 	undefined instruction 0x2e352e34
  10:	63742d31 	tcmpnvs	r4, #3136	; 0xc40
  14:	312d3233 	teqcc	sp, r3, lsr r2
  18:	Address 0x00000018 is out of bounds.


Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5
